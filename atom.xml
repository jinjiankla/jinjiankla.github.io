<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Desire</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jinjian.info/"/>
  <updated>2018-07-29T19:16:31.854Z</updated>
  <id>http://jinjian.info/</id>
  
  <author>
    <name>Jinjian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何进行Flutter混合开发</title>
    <link href="http://jinjian.info/2018/07/29/Flutter%20%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    <id>http://jinjian.info/2018/07/29/Flutter 混合开发/</id>
    <published>2018-07-28T16:00:00.000Z</published>
    <updated>2018-07-29T19:16:31.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何进行Flutter混合开发"><a href="#如何进行Flutter混合开发" class="headerlink" title="如何进行Flutter混合开发"></a>如何进行Flutter混合开发</h2><p>[TOC]</p><h3 id="Why-Flutter"><a href="#Why-Flutter" class="headerlink" title="Why Flutter ?"></a>Why Flutter ?</h3><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/flutter/older_crossed_platform.png?raw=true" alt="older_crossed_platform"></p><h3 id="Flutter框架与应用"><a href="#Flutter框架与应用" class="headerlink" title="Flutter框架与应用"></a>Flutter框架与应用</h3><h4 id="框架与Source-Code"><a href="#框架与Source-Code" class="headerlink" title="框架与Source Code"></a>框架与Source Code</h4><h5 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h5><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/flutter/flutter_struct_base.jpg?raw=true" alt="flutter_struct_base"></p><h5 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h5><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/flutter/flutter_struct_function.png?raw=true" alt="flutter_struct_function"></p><p>所以从上面的分析可以看出,为了实现Flutter的平台无差异性，Google主要在 PlatForm Integration和Dart:UI部分做了适配工作。</p><h4 id="APK-Android应用-结构"><a href="#APK-Android应用-结构" class="headerlink" title="APK(Android应用)结构"></a>APK(Android应用)结构</h4><p>我们通过解压一个release的混合开发APK包，来探索一下加入了Flutter之后的包到底发生了哪些变化以及这些变化对应的作用是什么。</p><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/flutter/flutter._apk_change_graffle.png?raw=true" alt="flutter._apk_change_graffle"></p><p>从上图的标记中可以清楚的看出变化点</p><ul><li><p>变化1</p><p>未在图中标出，但是我相信大部分的开发者应该可以猜的到，就是在dex中打入了 PlatForm Integration的代码(FutterActivity，FlutterApplication，FlutterView etc.)</p></li><li><p>变化2</p><p>assets下面的4个文件,内容均为arm指令</p><ul><li><p>isolate_snapshot_data/isolate_snapshot_instr</p><p>对应了我们的Flutter代码进行AOT编译，用于创建一个新isolate</p></li><li><p>vm_snapshot_data/vm_snapshot_instr</p><p>用于初始化Dart VM,提供 runTime,gc等服务</p></li></ul><p>由于该部分内容通过gen_snapshot编译生成，且存放在App的data目录下面，所以</p><p>为以后的动态更新提供了可能。</p></li><li><p>变化3</p><p>ICU Dart Language包，提供语言相关的数据信息。</p></li><li><p>变化4</p></li></ul><p>​       Flutter Engine层的代码 </p><h3 id="Flutter混合模式"><a href="#Flutter混合模式" class="headerlink" title="Flutter混合模式"></a>Flutter混合模式</h3><p>相信对于绝大多数应用来说，从零开始重新做一个App的成本是相当高的，所以混合开发成了它们尝试Flutter的首选。</p><h4 id="闲鱼模式"><a href="#闲鱼模式" class="headerlink" title="闲鱼模式"></a>闲鱼模式</h4><h5 id="双Branch共存（Flutter模式-amp-amp-Standalone模式）"><a href="#双Branch共存（Flutter模式-amp-amp-Standalone模式）" class="headerlink" title="双Branch共存（Flutter模式 &amp;&amp; Standalone模式）"></a>双Branch共存（Flutter模式 &amp;&amp; Standalone模式）</h5><p>Standalone模式：纯Native开发或者是平台打包下的模式</p><p>Flutter模式：进行flutter相关功能的开发，库生成，编译和调试走的都是Flutter定义的流程。</p><ul><li>优点</li></ul><p>在Standalone模式下，纯Native开发者和打包平台，对Flutter是无感知的。在这种情况下，Flutter相关的代码可以认为是一个常规的第三方库文件。</p><ul><li><p>前期准备</p><p>理清Standalone模式下对Flutter的依赖并将它们提取成一个aar库。</p></li><li><p>开发步骤</p><ol><li>在Flutter模式下进行flutter相关功能的开发。</li><li>将代码打包成一个aar库上传到repository中去进行版本控制。</li><li>切换分支到Standalone模式，修改相关依赖包的版本号。</li></ol><p>当然这种方法在实际的开发过程中还会遇到很多其他问题，比如复杂流程下生成aar库脚本的编写，比如两个模式下的代码同步等。</p></li></ul><h4 id="Google模式"><a href="#Google模式" class="headerlink" title="Google模式"></a>Google模式</h4><p>对与方便的进行Flutter的混合模式开发呼声有多高，Google专门为了这个问题建立了Wiki并且进行了持续4个月42个版本的更新。</p><h5 id="创建Flutter-Module模式"><a href="#创建Flutter-Module模式" class="headerlink" title="创建Flutter Module模式"></a>创建Flutter Module模式</h5><h6 id="1-1-1-切换flutter分支"><a href="#1-1-1-切换flutter分支" class="headerlink" title="1.1.1 切换flutter分支"></a>1.1.1 切换flutter分支</h6><p>假如直接使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd some/path/</span><br><span class="line">$ flutter create -t module my_flutter</span><br></pre></td></tr></table></figure><p>会出现无法识别 command module的错误,查找其原因发现我们默认clone的分支是flutter的beta版本并不支持module命令所以首先需要</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flutter channel</span><br><span class="line">flutter channel master</span><br><span class="line">flutter upgrade</span><br></pre></td></tr></table></figure><p>将分支切换到master并且进行upgrade操作。</p><h6 id="1-1-2-创建Flutter-module模版"><a href="#1-1-2-创建Flutter-module模版" class="headerlink" title="1.1.2 创建Flutter module模版"></a>1.1.2 创建Flutter module模版</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter create -t module flutter_module</span><br></pre></td></tr></table></figure><p>这个时候会看到project中新增加了一个flutter_module，其中包含了.android,.ios和关键的include_flutter.groovy文件</p><h6 id="1-1-3-将Flutter添加到现有工程中"><a href="#1-1-3-将Flutter添加到现有工程中" class="headerlink" title="1.1.3 将Flutter添加到现有工程中"></a>1.1.3 将Flutter添加到现有工程中</h6><ul><li><p>在android工程的根目录的settings.gradle中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">include &apos;:app&apos;                                     // assumed existing content</span><br><span class="line">setBinding(new Binding([gradle: this]))                                 // new</span><br><span class="line">evaluate(new File(                                                      // new</span><br><span class="line">  settingsDir.parentFile,                                               // new</span><br><span class="line">  &apos;flutter_module/.android/include_flutter.groovy&apos;                      // new</span><br><span class="line">))</span><br></pre></td></tr></table></figure></li><li><p>在app的build.gradle中添加依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  implementation project(&apos;:flutter&apos;)</span><br></pre></td></tr></table></figure></li></ul><h6 id="1-1-4-总而言之"><a href="#1-1-4-总而言之" class="headerlink" title="1.1.4 总而言之"></a>1.1.4 总而言之</h6><p> 简单的说，Google在兼顾维护成本和开发成本的前提下，为了Insert  flutter module ,建立了一个逻辑依赖链</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flutter_module/.android/include_flutter.groovy -&gt;</span><br><span class="line">flutter_module/.android/Flutter/build.gradle -&gt;</span><br><span class="line">$flutterRoot/packages/flutter_tools/gradle/flutter.gradle</span><br></pre></td></tr></table></figure><p>利用 $flutterRoot/packages/flutter_tools/lib/中的flutter command &amp;&amp;</p><p> $AndroidRoot/build-tools/buildToolsVersion/中的android command </p><p>完成混合开发模式下的打包操作。</p><p>###Refrence </p><ul><li><p><a href="https://juejin.im/post/5b3f098ce51d45199840f4bb" target="_blank" rel="noopener">闲鱼Flutter混合工程改造实践</a></p></li><li><p><a href="https://github.com/flutter/flutter/wiki/Add-Flutter-to-existing-apps#preview-use-the-flutter-module-template" target="_blank" rel="noopener">Add Flutter to existing apps</a></p></li><li><p><a href="https://github.com/flutter/flutter/issues" target="_blank" rel="noopener">Github Flutter issue</a> （附送 <a href="https://flutter.io/bug-reports/" target="_blank" rel="noopener">正确的提问姿势</a>）</p></li><li><p><a href="https://juejin.im/entry/5afa9769518825428630a61c" target="_blank" rel="noopener">Flutter原理简介</a></p><p>​</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;如何进行Flutter混合开发&quot;&gt;&lt;a href=&quot;#如何进行Flutter混合开发&quot; class=&quot;headerlink&quot; title=&quot;如何进行Flutter混合开发&quot;&gt;&lt;/a&gt;如何进行Flutter混合开发&lt;/h2&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
      <category term="被Flutter玩转的日子" scheme="http://jinjian.info/categories/%E8%A2%ABFlutter%E7%8E%A9%E8%BD%AC%E7%9A%84%E6%97%A5%E5%AD%90/"/>
    
    
      <category term="Flutter" scheme="http://jinjian.info/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>直播问题排查方法</title>
    <link href="http://jinjian.info/2018/04/28/%E7%9B%B4%E6%92%AD%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%96%B9%E6%B3%95/"/>
    <id>http://jinjian.info/2018/04/28/直播问题排查方法/</id>
    <published>2018-04-27T16:00:00.000Z</published>
    <updated>2018-05-06T09:59:57.389Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="好邻好课直播问题排查方法总结"><a href="#好邻好课直播问题排查方法总结" class="headerlink" title="好邻好课直播问题排查方法总结"></a>好邻好课直播问题排查方法总结</h1><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>希望这个文档可以作为一个”种子”,随着之后在工作中遇到问题的不断增多，进一步完善，做到定位问题的”快准稳”。</p><h2 id="非技术排错"><a href="#非技术排错" class="headerlink" title="非技术排错"></a>非技术排错</h2><ul><li>连麦没声音</li></ul><ol><li>手机硬件（尝试微信语音是否可以发消息） x</li><li>权限 (判断麦克风权限是否已打开) x</li><li>网络 （尝试4g和wifi下的运行效果是否一致）x</li><li>程序bug  </li></ol><p>​     4.1 (引导用户退出房间再重新进入) x</p><ul><li><p>突来的卡顿</p><p>通过影响范围判断：</p><ol><li>主播端网络不好，直接影响到的是所有观众，因此，如果发现所有的观众都出现频繁卡顿，那么多半就是主播端的问题了</li><li>某个用户网络不好.</li></ol></li></ul><h2 id="技术排错"><a href="#技术排错" class="headerlink" title="技术排错"></a>技术排错</h2><h3 id="存在角色"><a href="#存在角色" class="headerlink" title="存在角色"></a>存在角色</h3><h4 id="主播"><a href="#主播" class="headerlink" title="主播"></a>主播</h4><ol><li>主播设置的音视频参数</li><li>上行带宽</li><li>wifi出现问题的情况下，建议尝试使用有线推流。</li></ol><h4 id="观众"><a href="#观众" class="headerlink" title="观众"></a>观众</h4><ol><li>选择的播放协议</li></ol><h4 id="主播-观众设备"><a href="#主播-观众设备" class="headerlink" title="主播/观众设备"></a>主播/观众设备</h4><ol><li>硬件性能和编解码能力</li><li>双方网络的运营商，是否跨运营商连接或者二级运营商。</li></ol><h3 id="推流分辨率和带宽关系"><a href="#推流分辨率和带宽关系" class="headerlink" title="推流分辨率和带宽关系"></a>推流分辨率和带宽关系</h3><p>如果设置的码率（带宽）过低，则无法保证传输的视频质量；<br>如果设置的码率（带宽）过高，则对网络带宽质量要求较高。<br>建议的对应关系如下：</p><table><thead><tr><th>分辨率和帧率</th><th>码率(带宽)</th></tr></thead><tbody><tr><td>1280<em>720@20fps 1280</em>720@15fps 1280*720@10fps</td><td>1500 kbps 1300 kbps 1000 kbps</td></tr><tr><td>960<em>540@20fps 960</em>540@15fps 960*540@10fps</td><td>1100 kbps 900 kbps 700 kbps</td></tr><tr><td>640<em>480@20fps 640</em>480@15fps 640*480@10fps</td><td>800 kbps 700 kbps 500 kbps</td></tr><tr><td>640<em>360@20fps 640</em>360@15fps 640*360@10fps</td><td>700 kbps 600 kbps 400 kbps</td></tr></tbody></table><h3 id="人数限制"><a href="#人数限制" class="headerlink" title="人数限制"></a>人数限制</h3><p>主播加入互动直播房间时需要使用推流地址进行直播，连麦者不需要使用推流和拉流地址，观众需要使用主播同一个频道下与其推流地址对应的拉流地址进行观看</p><ul><li>目前互动直播房间支持1个主播和最多4个连麦者（1+4）进行音视频连麦，聊天室支持的观众数没有限制</li><li>目前互动直播房间支持最多13人(1主播+12连麦者)进行纯音频连麦互动</li><li>对纯音频连麦者进行静音与非静音的操作，他们都仍然算在12个连麦者名额当中</li><li>如果人数超出限制，需要当前连麦的用户先退出房间,然后再让择其进入</li></ul><h3 id="播放延时"><a href="#播放延时" class="headerlink" title="播放延时"></a>播放延时</h3><h4 id="影响因素"><a href="#影响因素" class="headerlink" title="影响因素"></a>影响因素</h4><ol><li>无法避免的网络延时计算。主播与观众的物理距离,用 200,000km/s(光在光纤中的传播速度) 计算往返延时。</li><li>网络抖动 。比如发送100个数据包,19号数据包不是紧跟着18号到达的,而是延迟到88后面才到达。</li><li>网络丢包。</li></ol><h4 id="影响原理"><a href="#影响原理" class="headerlink" title="影响原理"></a>影响原理</h4><p>业务代码中的缓冲区</p><p>业务代码中的缓冲区，主要是推流端的缓冲区和播放端的缓冲区，一个 30 fps 的视频流，缓冲区每滞留 30 帧，延时就会增大 1s，那么，它们是怎么产生缓冲数据的呢 ？</p><ol><li>推流端的数据「积累」</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">采集 -&gt; 编码 -&gt; 数据发送 -&gt; [服务器] 当网络产生抖动的时候，「数据发送」会因此减慢，产生一定的阻塞，从而导致这些数据会被 「积累」在了推流端的发送缓冲区中。</span><br></pre></td></tr></table></figure><ol><li>播放端的数据「积累」</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[服务器]-&gt; 数据接收 -&gt; 解码 -&gt; 渲染 当网络产生抖动的时候，服务器的数据无法「及时」地传输到播放端，而由于 TCP 协议的可靠性，所有的数据都会被服务端积累起来，在网络恢复良好的时候，会快速传输到播放端，这些数据会被动地 「积累」在接收缓冲区中。</span><br></pre></td></tr></table></figure><ol><li>消除业务缓冲区的累计延时</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">推流端的发送缓冲区，可以在网络恢复良好的时候，快送发送出去，从而消除掉这个累计延时。</span><br><span class="line"></span><br><span class="line">播放端的接收缓冲区，可以通过丢帧或者加速播放的方式快速消费掉缓冲区中的数据，从而消除累计延时。</span><br></pre></td></tr></table></figure><h4 id="连麦方式"><a href="#连麦方式" class="headerlink" title="连麦方式"></a>连麦方式</h4><ul><li><p>云信互动直播的连麦方式</p><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/app_outline/zxw.png?raw=true" alt="app_struct"></p><ul><li><p>互动直播 =  互动 + 直播。</p><p>互动部分 是使用的音视频功能，是UDP私有协议。</p><p>音视频服务器将数据发送给互动直播服务器，进行画面合并，转为RTMP协议发送给直播服务器。</p></li><li><p>普通观众：通过直播服务器以普通的标准的直播协议来拉流</p></li><li><p>主播和连麦者之间的音视频交互 都是音视频服务器处理的</p><p>[ps:期间遇到过学生先加 老师后加入然后普通观众无法拉流的情况,就是因为服务器分配了不带互动直播能力的资源] </p></li></ul><p>​</p></li><li><p>其他现有的连麦方式</p></li></ul><ol><li>RTMP 多路合流到CDN变成一路下发【cdn合成】</li><li>主播端与连麦者P2P,然后主播把合流推送到CDN上面再发送给观众。【主播端合成】</li></ol><ul><li>RTMP多路推到CDN,CDN再把这几路流都推给观众端【观众端合成】</li></ul><h4 id="直播功耗高"><a href="#直播功耗高" class="headerlink" title="直播功耗高"></a>直播功耗高</h4><p>导致手机功耗高，发热严重的根本因素，无外乎就是一点：CPU/GPU 占用率高，那么有哪些因素会导致 CPU/GPU 占用率高</p><ol><li>大量的格式转换</li><li>数据量太大视频的尺寸（例如：1280 x 720 的图像，明显要比 320 x 240 的图像处理起来费劲）视频的帧率（例如：每秒 30 帧，明显要比每秒 15 帧，处理起来费劲</li><li>对图像进行放大操作,图像的缩小或者剪裁，同样也会消耗一定的 CPU，只不过相比于图片放大要好点</li><li>软编/软解靠的是 CPU，非常耗性能，而硬编/硬解是使用专门的硬件编解码器模块，会显著降低 CPU 的负担，相对而言，会省电很多</li></ol><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ol><li>云信提供了一个辅助的网络情况测试工具 AVChatNetDetectType，它可以探测音视频通话网络的连通性、丢包率和延迟等信息,可以将这些信息上报给服务器。</li></ol><ol><li><p>pc主播的网络检测。在浏览器中输入speedTest进行简单网络环境检测 。</p></li><li><p>观众使用的网络情况可以通过AVChatNetDetectType监测。</p></li><li><p>声音大小回调提示 ,可以通过AVChatStateObserver中的onReportSpeaker方法获得。</p></li><li><p>观众端可以通过ping播放域名的方式,查看当前网络丢包率是多少。</p></li><li><p>设备性能 带宽越高对解码要求越高，特别对720p和1080p。</p><ul><li>尽可能选择使用硬解，充分利用 GPU 加速</li><li>如果有多种码流，尽可能在低端机上选择非高清码流</li><li>增大缓冲区，有助于缓解解码不稳定带来的卡顿</li></ul></li><li><p>云信提供了直播实时转码功能，支持不同分辨率、码率的拉流地址供客户自行选择</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//云信提供回调方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNetworkQuality</span><span class="params">(String s, <span class="keyword">int</span> i, AVChatNetworkStats avChatNetworkStats)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span> || i == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//网络状态好的时候选择清晰度优先。 在此模式下会优先保证视频的清晰度, 网络不稳定时会优先降低帧率来保证视频的清晰度</span></span><br><span class="line">            AVChatManager.getInstance().setVideoQualityStrategy(AVChatVideoQualityStrategy.PreferImageQuality);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//网络状态不好的时候选择流畅优先。 在此模式下会优先保证视频的流畅度, 网络不稳定是会优先降低视频分辨率来保证视频的流程度</span></span><br><span class="line">            AVChatManager.getInstance().setVideoQualityStrategy(AVChatVideoQualityStrategy.PreferFrameRate);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;好邻好课直播问题排查方法总结&quot;&gt;&lt;a href=&quot;#好邻好课直播问题排查方法总结&quot; class=&quot;headerlink&quot; title=&quot;好邻好课直播问题排查方法总结&quot;&gt;&lt;/a&gt;好邻好课直播问题排查方法总结&lt;/h1&gt;&lt;h3 id=&quot;前言&quot;&gt;
      
    
    </summary>
    
      <category term="从零搭建App" scheme="http://jinjian.info/categories/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAApp/"/>
    
    
      <category term="从零搭建App" scheme="http://jinjian.info/tags/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAApp/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建app-outline</title>
    <link href="http://jinjian.info/2018/02/17/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAapp%E7%B3%BB%E5%88%971/"/>
    <id>http://jinjian.info/2018/02/17/从0开始搭建一个app系列1/</id>
    <published>2018-02-16T16:00:00.000Z</published>
    <updated>2018-02-17T04:07:26.033Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从零开始搭建app-outline"><a href="#从零开始搭建app-outline" class="headerlink" title="从零开始搭建app-outline"></a>从零开始搭建app-outline</h1><p>[TOC]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是一款视频直播教育软件.</p><ol><li>提供基于LBS的找课服务</li><li>支持线上和线下两种方式的上课服务</li><li>提供多种在线互动形式 （聊天室,答题,连麦,教学白板……）</li><li>整理了完整的教学评估体系(老师学生打分体系，课后复习，课程记录……)</li></ol><h2 id="APP框架"><a href="#APP框架" class="headerlink" title="APP框架"></a>APP框架</h2><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/app_outline/app_struct.png?raw=true" alt="app_struct"></p><h2 id="设计细化"><a href="#设计细化" class="headerlink" title="设计细化"></a>设计细化</h2><p>app目标：</p><ol><li><p>搭建一个灵活易用，脱离业务，方便快速迭代的app</p></li><li><p>基于之前的工作经验，挑选合适的第三方开源库赋能，并</p><p>在这个过程中学习这些优秀开源库的设计思想(尤其是facebook 和 google的)</p></li><li><p>该app符合growth hacker的理念,能够支持快速试错，用数</p><p>据化推动产品演化路径</p></li></ol><h3 id="包结构图"><a href="#包结构图" class="headerlink" title="包结构图"></a>包结构图</h3><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/app_outline/app_package.png?raw=true" alt="app_struct"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> overview：</span><br><span class="line">  </span><br><span class="line">ui:          <span class="comment">// （原则上UI样式替换只需修改这一层）</span></span><br><span class="line">--Activity:  <span class="comment">// ui展示：按钮，文字，列表 etc.</span></span><br><span class="line">--IView:    <span class="comment">// present回调接口</span></span><br><span class="line">--adapter: <span class="comment">// 列表数据绑定</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">helper:</span><br><span class="line">--peresent: <span class="comment">//处理业务数据（原则上上层业务替换，修改到这一层）</span></span><br><span class="line">--util:     <span class="comment">//工具包</span></span><br><span class="line">--manager:  <span class="comment">//管理类包</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">common:</span><br><span class="line">--widget:  <span class="comment">// 封装了一些常用的视图组件</span></span><br><span class="line">--base:    <span class="comment">// network,fresco,lbslocation,EventBus,Sharedpereference,animation etc.</span></span><br><span class="line">--sdk      <span class="comment">// video,audio etc.</span></span><br></pre></td></tr></table></figure><h3 id="第三方依赖库"><a href="#第三方依赖库" class="headerlink" title="第三方依赖库"></a>第三方依赖库</h3><table><thead><tr><th style="text-align:left">依赖库</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">com.squareup.okhttp3:okhttp:3.6.0</td><td style="text-align:left">网络通信</td></tr><tr><td style="text-align:left">com.android.support:multidex:1.0.1</td><td style="text-align:left">dex分包</td></tr><tr><td style="text-align:left">com.facebook.fresco:fresco:1.1.0</td><td style="text-align:left">图片加载优化</td></tr><tr><td style="text-align:left">io.reactivex.rxjava2:rxandroid:2.0.1</td><td style="text-align:left">异步事件处理</td></tr><tr><td style="text-align:left">name: ‘CoreSDK_v1.1.1’, ext: ‘aar’</td><td style="text-align:left">日志管理：落地，打印，导出等</td></tr><tr><td style="text-align:left">org.greenrobot:eventbus:3.0.0</td><td style="text-align:left">进程内的消息传递与处理</td></tr><tr><td style="text-align:left">com.netease.nimlib:basesdk:4.4.0</td><td style="text-align:left">云信的基础功能包</td></tr><tr><td style="text-align:left">com.netease.nimlib:nrtc:4.4.0</td><td style="text-align:left">云信音视频与互动白板基础包</td></tr><tr><td style="text-align:left">com.netease.nimlib:avchat:4.4.0</td><td style="text-align:left">云信音视频包</td></tr><tr><td style="text-align:left">com.crashlytics.sdk.android:crashlytics:2.7.0@aar</td><td style="text-align:left">crash事件的收集</td></tr><tr><td style="text-align:left">com.google.gson:2.8.0</td><td style="text-align:left">java对象与json的转换</td></tr></tbody></table><h3 id="页面结构设计"><a href="#页面结构设计" class="headerlink" title="页面结构设计"></a>页面结构设计</h3><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/app_outline/app_mainpage.png?raw=true" alt="app_struct"></p><h3 id="直播结构设计"><a href="#直播结构设计" class="headerlink" title="直播结构设计"></a>直播结构设计</h3><p>采用app组件化的方式，赋能app直播在线教育的功能</p><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/app_outline/app_livebroad.png?raw=true" alt="app_struct"></p><h4 id="教师端和学生端的协议设计"><a href="#教师端和学生端的协议设计" class="headerlink" title="教师端和学生端的协议设计"></a>教师端和学生端的协议设计</h4><p><img src="https://github.com/jinjiankla/res/blob/master/jinjinkla/res/app_outline/app_protocal.png?raw=true" alt="app_struct"></p><h2 id="开源框架解读"><a href="#开源框架解读" class="headerlink" title="开源框架解读"></a>开源框架解读</h2><ul><li>RxJava</li><li>SimpleDrawee</li><li>EventBus </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;从零开始搭建app-outline&quot;&gt;&lt;a href=&quot;#从零开始搭建app-outline&quot; class=&quot;headerlink&quot; title=&quot;从零开始搭建app-outline&quot;&gt;&lt;/a&gt;从零开始搭建app-outline&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;

      
    
    </summary>
    
      <category term="从零搭建App" scheme="http://jinjian.info/categories/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAApp/"/>
    
    
      <category term="从零搭建App" scheme="http://jinjian.info/tags/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAApp/"/>
    
  </entry>
  
  <entry>
    <title>《社会心理学》自我认知篇</title>
    <link href="http://jinjian.info/2018/01/12/%E3%80%8A%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%AD%A6%E3%80%8B-%E8%87%AA%E6%88%91%E8%AE%A4%E7%9F%A5/"/>
    <id>http://jinjian.info/2018/01/12/《社会心理学》-自我认知/</id>
    <published>2018-01-11T16:00:00.000Z</published>
    <updated>2018-05-01T01:24:24.174Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/jinjiankla/res/raw/master/jinjinkla/res/about_me/social_me.png" alt="scoial_me"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://github.com/jinjiankla/res/raw/master/jinjinkla/res/about_me/social_me.png&quot; alt=&quot;scoial_me&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="喜欢书，反复读" scheme="http://jinjian.info/categories/%E5%96%9C%E6%AC%A2%E4%B9%A6%EF%BC%8C%E5%8F%8D%E5%A4%8D%E8%AF%BB/"/>
    
    
      <category term="reading books" scheme="http://jinjian.info/tags/reading-books/"/>
    
  </entry>
  
  <entry>
    <title>移动端互动直播(入门篇)</title>
    <link href="http://jinjian.info/2018/01/01/%E6%89%8B%E6%9C%BA%E8%A7%86%E9%A2%91%E6%8E%A8%E6%8B%89%E6%B5%81%E5%AE%9E%E7%8E%B0/"/>
    <id>http://jinjian.info/2018/01/01/手机视频推拉流实现/</id>
    <published>2017-12-31T16:00:00.000Z</published>
    <updated>2018-02-26T02:41:56.767Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>   本文为手机视频直播新手，利用强大google搜索引擎结合自身理解而整理的”视频直播入门背景知识”。</p><h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><h3 id="推流协议"><a href="#推流协议" class="headerlink" title="推流协议"></a>推流协议</h3><h4 id="RTMP"><a href="#RTMP" class="headerlink" title="RTMP"></a>RTMP</h4><p>Real Time Messaging Protocol（实时消息传送协议）</p><p>使用 Flash Player 作为播放器客户端，而Flash Player 现在已经安装在了全世界将近99%的PC上，因此一般情况下收看RTMP流媒体系统的视音频是不需要安装插件的。用户只需要打开网页，就可以直接收看流媒体，十分方便</p><ol><li>工作在TCP之上的明文协议，使用端口1935； </li><li>RTMPT封装在HTTP请求之中，可穿越防火墙； </li><li>RTMPS类似RTMPT，但使用的是HTTPS连接；</li></ol><h4 id="HLS"><a href="#HLS" class="headerlink" title="HLS"></a>HLS</h4><p>HTTP Live Streaming</p><p>HLS 是苹果公司QuickTime X和iPhone软件系统的一部分。它的工作原理是把整个流分成一个个小的基于HTTP的文件来下载，每次只下载一些。当媒体流正在播放时，客户端可以选择从许多不同的备用源中以不同的速率下载同样的资源，允许流媒体会话适应不同的数据速率。在开始一个流媒体会话时，客户端会下载一个包含元数据的extended M3U (m3u8) playlist文件，用于寻找可用的媒体流。</p><p>客户端支持</p><ul><li>iOS从3.0开始成为标准功能。</li><li>Adobe Flash Player从11.0开始支持HLS。</li><li>Google的Android自Honeycomb（3.0）开始支持HLS。</li><li>VODOBOX HLS Player (Android,iOS, Adobe Flash Player)</li><li>JWPlayer (Adobe Flash)</li><li>Flowplayer (Adobe Flash,使用hlsjs版本不使用Adobe Flash)</li><li>Windows 10 的 EDGE 浏览器开始支持HLS。</li></ul><h4 id="H264编码"><a href="#H264编码" class="headerlink" title="H264编码"></a>H264编码</h4><p>H264是一种高压缩率的编码标准，如何压缩嘞？一般的视频采集都是25帧/秒，也就是每秒截图25次，其实每一张图片的内容都相差不大，压缩的办法就是利用算法，只将每张图片变动差异化的部分保存下来，这样视频文件就小多了</p><h4 id="MKV"><a href="#MKV" class="headerlink" title="MKV"></a>MKV</h4><p>俄文матроска是матрёшка（俄罗斯套娃）的误读，因为Matroska的工作原理就跟层层套叠的俄罗斯娃娃一样，是“愈包愈紧”的，故得名。而mkv只是Matroska媒体系列的其中一种文件格式。</p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><h4 id="YUV"><a href="#YUV" class="headerlink" title="YUV"></a>YUV</h4><p>YUV主要用于优化彩色视频信号的传输，使其向后相容老式黑白电视。与RGB视频信号传输相比，它最大的优点在于只需占用极少的频宽</p><h4 id="PCM"><a href="#PCM" class="headerlink" title="PCM"></a>PCM</h4><p>脉冲编码调制(PCM)就是把一个时间连续，取值连续的模拟信号变换成时间离散，取值离散的数字信号后在信道中传输。脉冲编码调制就是对模拟信号先抽样，再对样值幅度量化，编码的过程</p><h4 id="muxer"><a href="#muxer" class="headerlink" title="muxer"></a>muxer</h4><p>muxer是指合并文件，即将视频文件、音频文件和字幕文件合并为某一个视频格式。比如把rmvb格式的视频，mp3格式的音频文件以及srt格式的字幕文件，合并成为一个新的mp4或者mkv格式的文件。</p><p><img src="http://chuantu.biz/t6/210/1516369414x-1404764625.png" alt=""></p><h4 id="demuxer"><a href="#demuxer" class="headerlink" title="demuxer"></a>demuxer</h4><p>demuxer是muxer的逆过程，就是把合成的文件中提取出不同的格式文件。</p><p><img src="http://chuantu.biz/t6/210/1516369232x-1404764625.png" alt=""></p><h1 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h1><h2 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h2><p><img src="https://netease.im/res/image/edu/framework_3_2x.jpg" alt=""></p><h2 id="角色职能"><a href="#角色职能" class="headerlink" title="角色职能"></a>角色职能</h2><p><img src="http://chuantu.biz/t6/211/1516524899x-1404793029.png" alt=""></p><h2 id="App端推流"><a href="#App端推流" class="headerlink" title="App端推流"></a>App端推流</h2><p><img src="http://chuantu.biz/t6/211/1516526285x-1404793029.png" alt="app推流"></p><h3 id="音频采集模型"><a href="#音频采集模型" class="headerlink" title="音频采集模型"></a>音频采集模型</h3><p><img src="https://developer.apple.com/library/content/documentation/MusicAudio/Conceptual/AudioQueueProgrammingGuide/Art/recording_callback_function_2x.png" alt=""></p><h3 id="优化策略"><a href="#优化策略" class="headerlink" title="优化策略"></a>优化策略</h3><h4 id="服务质量策略"><a href="#服务质量策略" class="headerlink" title="服务质量策略"></a>服务质量策略</h4><p>推流端会根据当前上行网络情况控制音视频数据发包和编码，在网络较差的情况下，音视频数据发送不出去，造成数据滞留在本地，这时，会停掉编码器防止发送数据进一步滞留，同时会根据网络情况选择合适的策略控制音视频发送。</p><p>比如网络很差的情况下，推流端会优先发送音频数据，保证用户能听到声音，并在一定间隔内发关键帧数据，保证用户在一定时间间隔之后能看到一些画面的变化。</p><h4 id="配置关键帧"><a href="#配置关键帧" class="headerlink" title="配置关键帧"></a>配置关键帧</h4><p>合理控制关键帧发送间隔（建议2秒或1秒一个），这样可以减少后端处理过程，为后端的缓冲区设置更小创造条件。</p><h2 id="云端服务器"><a href="#云端服务器" class="headerlink" title="云端服务器"></a>云端服务器</h2><h3 id="整体结构"><a href="#整体结构" class="headerlink" title="整体结构"></a>整体结构</h3><p><img src="http://chuantu.biz/t6/211/1516531692x-1404793029.png" alt=""></p><h3 id="服务协议"><a href="#服务协议" class="headerlink" title="服务协议"></a>服务协议</h3><h4 id="SRS"><a href="#SRS" class="headerlink" title="SRS"></a>SRS</h4><ul><li>开源</li><li>1.架构简洁，功能强大<br>2.主要支持rtmp协议<br>3.集群支持</li></ul><h4 id="CRTMP"><a href="#CRTMP" class="headerlink" title="CRTMP"></a>CRTMP</h4><ul><li>开源</li><li>1.c++开发<br>2.支持协议丰富<br>3.对集群支持不够好</li></ul><h4 id="nginx—rtmp"><a href="#nginx—rtmp" class="headerlink" title="nginx—rtmp"></a>nginx—rtmp</h4><ul><li>开源</li><li>1.全异步模型实现，性能优势<br>2.稳定性不足</li></ul><h4 id="Red5"><a href="#Red5" class="headerlink" title="Red5"></a>Red5</h4><ul><li>开源</li><li>1.纯java<br>2.性能不足</li></ul><h4 id="FMS"><a href="#FMS" class="headerlink" title="FMS"></a>FMS</h4><ul><li><p>不开源</p></li><li><p>1.adobe流媒体服务器<br>2.性能和功能都不错</p><p>​</p></li></ul><h3 id="视频直播转码功能问题"><a href="#视频直播转码功能问题" class="headerlink" title="视频直播转码功能问题"></a>视频直播转码功能问题</h3><p>录制，直播转码，鉴黄，截图，分发。</p><p>视频直播播流端的码率是根据推流端决定的，即播流端的码率是与推流端的码率一致的。但是遇到以下场景会造成直播效果较差：</p><ul><li>推流端码率与播流端带宽不相匹配。当推流端码率较高而客户端带宽资源有限就会导致播放出现卡顿，而当推流端码率较低但是客户端对于直播效率要求较高时会导致播放效果较差。</li><li>播放器插件需要实现多码率切换。前端播放器插件常可以设置码率切换，这就需要同一路推流可以同时提供多种码率的播流地址。</li></ul><p>因此，视频直播提供了实时转码功能对同一路推流地址同时提供多路不同码率播流地址提供服务。</p><h2 id="App端拉流"><a href="#App端拉流" class="headerlink" title="App端拉流"></a>App端拉流</h2><p><img src="http://chuantu.biz/t6/211/1516529825x-1404793029.png" alt="work_flow"></p><h2 id="编码策略"><a href="#编码策略" class="headerlink" title="编码策略"></a>编码策略</h2><h3 id="推流编码-硬"><a href="#推流编码-硬" class="headerlink" title="推流编码-硬"></a>推流编码-硬</h3><p>推荐Andorid4.3（API18）或以上使用硬编，以下版本使用软编；iOS使用全硬编方案；</p><h3 id="拉流编码-软"><a href="#拉流编码-软" class="headerlink" title="拉流编码-软"></a>拉流编码-软</h3><p>Andorid、iOS播放器都使用软解码方案，经过我们和大量客户的测试以及总结，虽然牺牲了功耗，但是在部分细节方面表现会较优，且可控性强，兼容性也强，出错情况少，推荐使用。</p><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="软编-解码"><a href="#软编-解码" class="headerlink" title="软编/解码"></a>软编/解码</h4><ul><li>优点<ol><li>兼容性强</li><li>色彩比硬编码强</li><li>编码课操作空间大，自由度高</li></ol></li><li>缺点<ol><li>吃cpu，消耗比较大</li></ol></li></ul><h4 id="硬编-解码"><a href="#硬编-解码" class="headerlink" title="硬编/解码"></a>硬编/解码</h4><ul><li>优点<ol><li>功耗低，执行效率高</li></ol></li><li>缺点<ol><li>芯片的差异性</li><li>可控性比较低</li></ol></li></ul><h1 id="特色功能"><a href="#特色功能" class="headerlink" title="特色功能"></a>特色功能</h1><h3 id="互动白板"><a href="#互动白板" class="headerlink" title="互动白板"></a>互动白板</h3><h4 id="数据封装"><a href="#数据封装" class="headerlink" title="数据封装"></a>数据封装</h4><p><img src="http://chuantu.biz/t6/211/1516534550x-1404793029.png" alt=""></p><h4 id="布局结构"><a href="#布局结构" class="headerlink" title="布局结构"></a>布局结构</h4><p><img src="http://chuantu.biz/t6/211/1516534656x-1404793029.png" alt=""></p><h3 id="弹幕"><a href="#弹幕" class="headerlink" title="弹幕"></a>弹幕</h3><h4 id="布局结构-1"><a href="#布局结构-1" class="headerlink" title="布局结构"></a>布局结构</h4><p><img src="http://chuantu.biz/t6/211/1516534782x-1404793029.png" alt=""></p><h4 id="DanmakuFlameMaster弹幕实现"><a href="#DanmakuFlameMaster弹幕实现" class="headerlink" title="DanmakuFlameMaster弹幕实现"></a>DanmakuFlameMaster弹幕实现</h4><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>开源框架 RTMP live streaming client for Android 【<a href="https://github.com/begeekmyfriend/yasea】" target="_blank" rel="noopener">https://github.com/begeekmyfriend/yasea】</a>  </li><li>直播架构图 【<a href="https://netease.im/edu】" target="_blank" rel="noopener">https://netease.im/edu】</a></li><li>RTMP协议介绍 【<a href="https://en.wikipedia.org/wiki/Real-Time_Messaging_Protocol】" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Real-Time_Messaging_Protocol】</a></li><li>音频处理队列 【 <a href="https://developer.apple.com/library/content/documentation/MusicAudio/Conceptual/AudioQueueProgrammingGuide/AboutAudioQueues/AboutAudioQueues.html#//apple_ref/doc/uid/TP40005343-CH5-SW1】" target="_blank" rel="noopener">https://developer.apple.com/library/content/documentation/MusicAudio/Conceptual/AudioQueueProgrammingGuide/AboutAudioQueues/AboutAudioQueues.html#//apple_ref/doc/uid/TP40005343-CH5-SW1】</a></li><li>视频直播技术原理和方案参考 【<a href="https://github.com/f2e-journey/xueqianban/issues/61】" target="_blank" rel="noopener">https://github.com/f2e-journey/xueqianban/issues/61】</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;   本文为手机视频直播新手，利用强大google搜索引擎结合自身理解而整理的”视频直播入门背景知识”。&lt;/p&gt;

      
    
    </summary>
    
      <category term="从零搭建App" scheme="http://jinjian.info/categories/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAApp/"/>
    
    
      <category term="从零搭建App" scheme="http://jinjian.info/tags/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAApp/"/>
    
  </entry>
  
  <entry>
    <title>我的《解忧杂货铺》</title>
    <link href="http://jinjian.info/2017/12/17/%E5%A5%BD%E5%A5%BD%E8%AF%B4%E8%AF%9D/"/>
    <id>http://jinjian.info/2017/12/17/好好说话/</id>
    <published>2017-12-16T16:00:00.000Z</published>
    <updated>2018-06-02T04:22:46.142Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Release-Notes"><a href="#Release-Notes" class="headerlink" title="Release Notes"></a>Release Notes</h4><table><thead><tr><th>问题</th><th>时间</th></tr></thead><tbody><tr><td>1-9</td><td>2017-12-17</td></tr><tr><td>10-19</td><td>2017-12-24</td></tr><tr><td>20-29</td><td>2018-01-01</td></tr><tr><td>30-35</td><td>2018-01-06</td></tr><tr><td>36-44</td><td>2018-01-13</td></tr><tr><td>45-54</td><td>2018-01-28</td></tr><tr><td>55-64</td><td>2018-02-17</td></tr><tr><td>65-74</td><td>2018-03-04</td></tr><tr><td>75-83</td><td>2018-03-11</td></tr><tr><td>84-86</td><td>2018-03-31</td></tr><tr><td>87-96</td><td>2018-04-29</td></tr><tr><td>97-98</td><td>2018-05-06</td></tr><tr><td>99-104</td><td>2018-06-02</td></tr></tbody></table><h4 id="1-学会情绪索求"><a href="#1-学会情绪索求" class="headerlink" title="1.学会情绪索求?"></a>1.学会情绪索求?</h4><ul><li>情绪索求：</li></ul><p>平时生活中比较常见的索求有像别人索要生日礼物，拜托别人帮忙，但是关于情绪的索求却是很少的，比方说要一个温柔，善良的情绪的释放机会。</p><ul><li>为什么不：</li></ul><ol><li>这可能代表着一种不成熟，小时候可能会向家长要抱抱，家长会同意，但是长大了一些之后，再要这些，就会被家长责备，教育说要独立的面对生活中的困难。</li><li>认为这种事情不应该自己去开口索要，更多的是需要别人的发现和施以善意。</li></ol><ul><li><p>怎么做：</p><p>递台阶。比如在夫妻双方争吵的过后释放善意， 表达想吃苹果。</p></li></ul><h4 id="2-怎么和朋友讨债不尴尬"><a href="#2-怎么和朋友讨债不尴尬" class="headerlink" title="2.怎么和朋友讨债不尴尬?"></a>2.怎么和朋友讨债不尴尬?</h4><ul><li><p>正确认识“尴尬”这种情绪：</p><p>因为陌生和不熟悉的事物所产生的感觉，尴尬的对象不在事物本身，而是陌生感，需要解决的是如何快速脱敏。</p></li><li><p>应该怎么去做</p></li></ul><ol><li>主动示弱说出心中所想。“对不起我在练习应该怎么开口”</li><li>效仿古人，古人有一些流传至今的江湖术语，“亲兄弟，明算账”，“先小人，后君子”，然后再开始要说的内容</li></ol><h4 id="3-给领导送礼的合理方式"><a href="#3-给领导送礼的合理方式" class="headerlink" title="3.给领导送礼的合理方式?"></a>3.给领导送礼的合理方式?</h4><ul><li><p>其实是双方的需求点不同</p><p>你送礼的预期是表达感谢之情，而领导收礼的预期是担心求他办的事儿。由这个需求点决定了你要做的事情是降低领导的心理防备，所以绝对不能用支支吾吾的态度</p></li><li><p>应该怎么表述</p></li></ul><ol><li>说明直接原因，毕竟在中国有无功不受禄的观念。核新思想是主观理由，如表达感谢；客观环境，如今天是中秋节；具体理由，如之前在什么会议上给我的指点。</li><li>防止拒绝。弱化对象，如每个人都有礼物；互惠，如这个礼物你比我更适合，如果你不收下他，我老婆会絮叨我的，算是在帮我一个忙</li></ol><h4 id="4-如何不伤感情拒绝他人"><a href="#4-如何不伤感情拒绝他人" class="headerlink" title="4.如何不伤感情拒绝他人?"></a>4.如何不伤感情拒绝他人?</h4><ul><li><p>正确认识“推销员”这个概念</p><p>推销员的价值的体现，他与自动售货机的区别就在于，他一上来推销的产品被你拒绝之后，这时候才是销售的开始</p></li><li><p>正确认识销售这个概念</p><pre><code>帮助是原则，销售是附加；为客户创造价值才是销售的目的</code></pre></li><li><p>低端手段</p><p>反复询问，被拒绝后，蓄力，利用的是对方的愧疚心理；</p></li></ul><h4 id="5-在表达自己底线时候的方式"><a href="#5-在表达自己底线时候的方式" class="headerlink" title="5.在表达自己底线时候的方式?"></a>5.在表达自己底线时候的方式?</h4><ul><li><p>态度</p><p>严肃起来而且不能够愤怒，因为后者的情绪，大多数人在第一时间想到的是安抚对方的情绪，所以这个时候他就会把重点放在处理情绪上而不是处理事情上</p></li><li><p>情景</p><p>需要把对方放在特定的情境中，来烘托出一种仪式感，就像小的时候老师叫犯了错的同学去他的办公室一趟，而不是当面说出小朋友的问题；又比如说一个干净的工位。</p></li></ul><h4 id="6-多维度认识职场“背锅”"><a href="#6-多维度认识职场“背锅”" class="headerlink" title="6.多维度认识职场“背锅”?"></a>6.多维度认识职场“背锅”?</h4><ol><li><p>角度的转变。这是一个从任务到责任的变化。</p><ul><li>背锅是福气，不要急着撇清，优先解决问题</li></ul></li></ol><ul><li>事后形成方案，杜绝问题的再次发生</li><li>以杜绝问题再次发生为由，获得响应的权力</li></ul><ol><li><p>拒绝做一个职场中的传话筒</p></li><li><p>作为领导不仅是分配任务，还有任务背后的那份责任。所以你的下属犯的错误</p><p>作为领导的同样由承担责任的义务</p></li><li><p>宏观角度看问题。职场是很多人“多人大型协作”的开始。只要涉及到多人协作的，一定会存在“灰色地带”，一个问题的描述方式不同，或者站的角度不同，就会出现不同的结论，这时候很多人倾向于为自己开脱和辩护。</p></li></ol><h4 id="7-如何鼓励他人战胜“恐惧”"><a href="#7-如何鼓励他人战胜“恐惧”" class="headerlink" title="7.如何鼓励他人战胜“恐惧”?"></a>7.如何鼓励他人战胜“恐惧”?</h4><ul><li><p>正确看待“恐惧”</p><p>恐惧其实是来自人类几万年的基因的承传。比如晚上独自一人要走进一个1公里的漆黑的无人隧道，明知道可能不会有什么危险，但还是会害怕和担心，抗拒做这件事情。因为假如没有这种危险意识，这样基因的人类可能早就已经灭亡了，所以我们需要增加一些感性的力量去推动他前进。</p></li><li><p>驱动力的三个层次</p></li></ul><ol><li>最低层次，比如为了生存吃饭睡觉；中级层次，奖赏模式。比如“胡萝卜加大棒子”；最高层次，基于兴趣本身的成就感和满足感。</li><li>推动怕水小孩学游泳。最低层次，游泳不学会，会被淹死；中级层次，学会了带你吃麦当劳；最高层次，你不是希望变成超人么，学会了就可以像超人一样在海底飞了。</li></ol><h4 id="8-从“养猫”谈论说服的标准模板"><a href="#8-从“养猫”谈论说服的标准模板" class="headerlink" title="8.从“养猫”谈论说服的标准模板?"></a>8.从“养猫”谈论说服的标准模板?</h4><ol><li>利益点：养猫比不养猫的好处。说明自己在家里有猫和没有猫的情况下的对比，表明前者对自己的利益-排遣孤独，晚上不用去泡吧了，对自己的人生安全也就提高了。-&gt; 排遣孤独的方式很多，比如找个伴侣</li><li>利益点转化。养猫对结束单身的好处。比如现在公司很多同事都养猫，我也养猫可以有更多的社交话题，可以结交更多的朋友，这样对结束单身是有好处的。-&gt;利益点再次转化？</li><li>利益点再次转化？……</li></ol><h4 id="9-该怎么样把话题聊下去"><a href="#9-该怎么样把话题聊下去" class="headerlink" title="9.该怎么样把话题聊下去?"></a>9.该怎么样把话题聊下去?</h4><ul><li><p>学习情境喜剧里的方法，顺应式的谈话方式。比如对方递给你一个橘子</p><p>Ta：”要不要吃桔子？”</p><p>Me：“这个桔子好精致，在哪买的？”</p><p>Ta:  “学校对面”</p><p>Me: “是那个xxx水果点，那里的老板很客气的，我上次也在他那买xxxxx”</p><p>…….</p><p>话题就次打开</p><p>【怎么聊比聊什么更重要】【用抛球，不让球落地的方式，总能找到双方的共同点】</p></li></ul><h4 id="10-如何将自己的缺点包装成优点？"><a href="#10-如何将自己的缺点包装成优点？" class="headerlink" title="10.如何将自己的缺点包装成优点？"></a>10.如何将自己的缺点包装成优点？</h4><ul><li>首先摆正心态：完美无暇的简历是假的，谁的人生不会是一帆风顺的。</li><li>不论优点还是缺点都是特点，既然是特点就可以在一定的场景下进行转化，然后进一步的可以将特点转换成卖点</li></ul><h4 id="11-专业上出现严重的错误，如何进行解释？"><a href="#11-专业上出现严重的错误，如何进行解释？" class="headerlink" title="11.专业上出现严重的错误，如何进行解释？"></a>11.专业上出现严重的错误，如何进行解释？</h4><ul><li>反面：在这种情况下如果采用道歉或者自嘲的方式，会让人觉得你对这个问题认识程度不重视，所以尽量避免使用</li><li>正面：<ol><li>先感谢支持你那一边的人。这样可以防止和反对派对话，因为这时候你对他们的任何解释，他们都能找到槽点，所以忽视他们是最好的选择</li><li>泛化问题：把一个专业的问题转化成为一个生活中的问题，使得感同身受，让人有代入感。“生活汇总我也会遇到过类似的场景”</li><li>展望未来，已经吸取了经验教训，而且有了沉没的成本，未来一定会更好的</li></ol></li></ul><h4 id="12-聊天中的立场不一样的正确认识？"><a href="#12-聊天中的立场不一样的正确认识？" class="headerlink" title="12.聊天中的立场不一样的正确认识？"></a>12.聊天中的立场不一样的正确认识？</h4><ul><li>态度：“对事不对人”其实是纸上谈兵的一种理想的状态，或多或少都会对他人有一定的影响。观点其实是人身体的一个延伸,别人即使是说你的脚指甲长得奇怪，你也会感到不爽。</li></ul><p>方法论</p><ol><li>理想的谈话场景应该是在谈话的过程中增加一个稻草人，用这个稻草人去加入讨论，试探到结果即可</li><li>悟石的“红白脸”谈话</li></ol><h4 id="13-对待说话刻薄人的态度？"><a href="#13-对待说话刻薄人的态度？" class="headerlink" title="13.对待说话刻薄人的态度？"></a>13.对待说话刻薄人的态度？</h4><ul><li>对自己安慰：“他就是这么一个人”，幽默其实是对自己的讽刺，刻薄则是对别人的讽刺</li><li>背后动因：刻薄的随意性，是因为他的成本低，所以需要试图增加他的说话成本。转换态度。非常诚恳的说“那您觉得问题在哪儿呢？”</li><li>适中的方式：“我知道你在开玩笑，但是一点也不好笑”来暗示对方</li></ul><h4 id="14-对别人不在乎的问题，如何才能让对方意识到问题严重，并且承认错误？"><a href="#14-对别人不在乎的问题，如何才能让对方意识到问题严重，并且承认错误？" class="headerlink" title="14.对别人不在乎的问题，如何才能让对方意识到问题严重，并且承认错误？"></a>14.对别人不在乎的问题，如何才能让对方意识到问题严重，并且承认错误？</h4><p>方法论</p><ol><li>对比找差距：“你是最后一个交的，连xxx都已经上交了”</li><li>说后果：“你这么做会影响你的年底考核的”</li><li>产生愧疚感：“当初你来的时候，我是看好你的，以你的能力不应该这样”</li></ol><h4 id="15-对方抛出一个假设性问题，你应该如何接？"><a href="#15-对方抛出一个假设性问题，你应该如何接？" class="headerlink" title="15.对方抛出一个假设性问题，你应该如何接？"></a>15.对方抛出一个假设性问题，你应该如何接？</h4><ul><li>正确认识：所有的假设性性问题都不能理解为是表面上的意思，而是为了给你贴标签。“水池里的水进出的问题？”</li><li>方法论</li></ul><ol><li>被动的并不想表现的，问题回弹：“我没有xxx的经历，那么假如你是我，你会怎么处理呢？”</li><li>必须回答且需要表现，走进细节：“面试的时候，这么做是出于个人利益还是公司利益呢？”细节问的越多就越具体，越具体就越难被别人贴上标签。</li></ol><h4 id="16-拒绝熟人的邀请，怎么样才不尴尬？"><a href="#16-拒绝熟人的邀请，怎么样才不尴尬？" class="headerlink" title="16.拒绝熟人的邀请，怎么样才不尴尬？"></a>16.拒绝熟人的邀请，怎么样才不尴尬？</h4><ul><li>态度：真话不全说，假话全不说，学会说聪明的话</li><li>方法论-我从小口味比较清淡<ol><li>多谈自己，少谈别人</li><li>谈风格的不同，而不是内容，因为风格没有高低之分。90后的周杰伦与70后的beyond</li><li>谈一些不可改变的问题。</li></ol></li></ul><h4 id="17-如何成为鼓励达人？"><a href="#17-如何成为鼓励达人？" class="headerlink" title="17.如何成为鼓励达人？"></a>17.如何成为鼓励达人？</h4><ul><li>态度：在中国家庭，很多时候在帮助孩子是挫于言而敏于行。“孩子玩具坏了，直接买新的，不是安慰，不是处理情绪问题，而是直接解决实际问题”</li><li>方法论<ol><li>优先解决情绪问题。小孩跌倒，不愿意爬起来，坐在地上哭，那大人职场遇到挫折呢？</li><li>只需要简短的表达“无论怎么样，我都会支持你”，而不是给大人献计献策，指导他们</li></ol></li></ul><h4 id="18-对待电梯社交的正确方式？"><a href="#18-对待电梯社交的正确方式？" class="headerlink" title="18. 对待电梯社交的正确方式？"></a>18. 对待电梯社交的正确方式？</h4><ul><li>态度：人与人的身体距离是1.2m，距离越短越会有压迫感，在加上陌生的心理与利，所以很多人会看着电梯上的数字1，2，3，4而不是去看人，并不是说电梯上的数字有什么魔力</li><li>方法论<ol><li>电梯的空间，沉默并不失为一种好的选择。电视里的电梯推销术更多的还是因为沉没的成本小</li><li>电梯里要想给领导一个好的印象，可以试一下沉默社交论，比如看到领导和一堆的人走来，有意留到下一班再上。</li></ol></li></ul><h4 id="19-夸奖下属的正确方式？"><a href="#19-夸奖下属的正确方式？" class="headerlink" title="19.夸奖下属的正确方式？"></a>19.夸奖下属的正确方式？</h4><ul><li>态度：领导夸奖的主要目的是为了让员工知道自己的努力没有被忽略</li><li>方法论<ol><li>夸奖他的具体行为而不是心态等一系列的形容词“当你跨她工作认真仔细非常热情的时候，没有其他听到的员工会认为自己不是这样的，所以要举具体例子”</li></ol></li></ul><h4 id="20-隐形的麦克风，帮助你打断别人的谈话？"><a href="#20-隐形的麦克风，帮助你打断别人的谈话？" class="headerlink" title="20.隐形的麦克风，帮助你打断别人的谈话？"></a>20.隐形的麦克风，帮助你打断别人的谈话？</h4><ul><li>一般方法：<ol><li>原本说话的人停一下</li><li>谈话间眼神到你这里</li><li>直接点名，xxx你有什么看法？</li></ol></li><li>例子：mww，不好意思我打个岔；小孩子因为没有意识到，所以一群小孩在一起会七嘴八舌的讨论问题。</li><li>注意点：<ol><li>拿到隐形麦克风讲完后记得要交回去</li><li>打断一次并不难，但是接下去讲的内容决定了你以后是否还继续拥有这样的话语权</li><li>不是看你的上场时间而是看你上场后的平均得分</li></ol></li></ul><h4 id="21-别人diss你的偶像该怎么处理？"><a href="#21-别人diss你的偶像该怎么处理？" class="headerlink" title="21.别人diss你的偶像该怎么处理？"></a>21.别人diss你的偶像该怎么处理？</h4><ul><li>常规：要么怼要么忍，前者痛快了自己破环了友情，后者又让自己感到委屈</li><li>方法论：<ol><li>降低对方的防御心理，我以前也是这么想的但是……,利用的是共情的能力</li><li>我粉他是有原因的。这样出来的第二招，会比通常的说法“我的偶像多么多么努力，多么多么厉害，得到过多少的奖”不容易被怼。应该把方向转为“你的偶像对你的影响，或者你和偶像之间的故事，或者从偶像获得的实质好处”这样对方会认为偶像帮助过他的朋友，是容易被朋友接受的。</li></ol></li></ul><h4 id="22-长辈送了最重的礼物，应该怎么判断局势？"><a href="#22-长辈送了最重的礼物，应该怎么判断局势？" class="headerlink" title="22.长辈送了最重的礼物，应该怎么判断局势？"></a>22.长辈送了最重的礼物，应该怎么判断局势？</h4><ul><li>态度：对方家长送了礼物是对你的一种认可和接纳，表达长辈的态度。不接受一是善意被拒绝，肯定不是什么好心情，二是给对方表达了，我可能没有这么爱你的儿子，收了以后可能会有一些麻烦。所以在这个时候必须接收这个礼物，这对长辈来说其实是感情上加的一层保鲜</li><li>方法论：<ol><li>表达惊喜和感谢</li><li>微妙的点出对方的用意</li><li>最后表达一个决心</li></ol></li></ul><h4 id="23-假如有看不惯的问题，如何提出比较合适？"><a href="#23-假如有看不惯的问题，如何提出比较合适？" class="headerlink" title="23.假如有看不惯的问题，如何提出比较合适？"></a>23.假如有看不惯的问题，如何提出比较合适？</h4><ul><li>态度：从评理模式走向沟通模式，需要有一个客观清晰的解决方案</li><li>方法论：<ol><li>需要清楚当前需要解决的问题是什么？</li><li>在我的层面，你需要我做什么？</li><li>听了抱怨后的改变，对方会有负罪感；主动积极的改变会有成就感。</li></ol></li></ul><h4 id="24-和三观不合但必须保持关系的人应该如何聊天？"><a href="#24-和三观不合但必须保持关系的人应该如何聊天？" class="headerlink" title="24.和三观不合但必须保持关系的人应该如何聊天？"></a>24.和三观不合但必须保持关系的人应该如何聊天？</h4><ul><li>态度：沟通的本质是寻找交集的事情，虽然说做自己很爽，但是这不是沟通的本意。</li><li>方法论：<ol><li>不想说太多。用询问细节的方式继续下去，打开对方的话匣子，让出聊天的主导权。“真的吗？你买了吗？你用了吗？”</li><li>烦恼框架。人和人虽然千差万别，但是真正关系的事儿在框架上差不多。“工作啊，生活啊，经济水平啊，人际关系啊，家庭啊健康啊”，这些方面谁都会有一堆的烦心事的。</li></ol></li></ul><h4 id="25-吵架的时候翻旧账怎么办？"><a href="#25-吵架的时候翻旧账怎么办？" class="headerlink" title="25.吵架的时候翻旧账怎么办？"></a>25.吵架的时候翻旧账怎么办？</h4><ul><li>态度：关于吵架其实是一种沟通的特殊场景，而沟通其实是权力的流通，吵架的特殊性在于只想表达自己的情绪和态度，并尝试取消对方的话语权，或者把沟通变成谈判，而欺诈的一种筹码就是翻旧账。这个时候辩解与不辩解都不合适。</li><li>方法论：<ol><li>对方只是在做情绪宣泄，这个时候道歉并且等到对方宣泄完之后开始讲理</li><li>对方在增加谈判筹码，这个时候略过旧的事情，因为它已经沉没了，救不了了。转而对现在问题的分歧，聚焦到问题的本身。</li></ol></li></ul><h4 id="26-给朋友提意见，需要有话直接说么？"><a href="#26-给朋友提意见，需要有话直接说么？" class="headerlink" title="26.给朋友提意见，需要有话直接说么？"></a>26.给朋友提意见，需要有话直接说么？</h4><ul><li>态度：就像去一家餐厅，给你生的牛肉就是直接，而真诚的对待她的感受是一个朋友的基础，这时候你应该把牛肉加工加上调料之后再端上来给她吃。</li><li>方法论：试试用第三人去提醒她的方式，没准她自己会悟出其中的道理</li></ul><h4 id="27-朋友开玩笑没有度，我该怎么办？"><a href="#27-朋友开玩笑没有度，我该怎么办？" class="headerlink" title="27.朋友开玩笑没有度，我该怎么办？"></a>27.朋友开玩笑没有度，我该怎么办？</h4><ul><li>态度：站在朋友的角度，“老铁啊，别人不敢开的玩笑我敢开，有什么问题凭我们的关系可以直接说啊”</li><li>方法论：对方认为这是我们亲密关系的证明，这个时候最好的办法是借力打力<ol><li>当你有底线被触犯的感受的时候，其实是一次对方对你底线无意识的探索，当场越冷静越好，这是给足对方面子的一种表现</li><li>私下越激动越好，“不过你不一样，你是我最好的朋友，在私下你我之间可以这么说，但是在这种公共场合不行。。。。”</li></ol></li></ul><h4 id="28-多少岁后可以放弃理想比较合适？"><a href="#28-多少岁后可以放弃理想比较合适？" class="headerlink" title="28.多少岁后可以放弃理想比较合适？"></a>28.多少岁后可以放弃理想比较合适？</h4><ul><li>态度：“花园里多少年之后只剩下泥巴而没有花朵？”人生就是有理想也有现实，不可能一刀切。理想不是逃避现实的借口，理想需要不断的被修正，这样才可以不断的享受理想带来的快乐。</li></ul><h4 id="29-弱的一方如何谈判？"><a href="#29-弱的一方如何谈判？" class="headerlink" title="29.弱的一方如何谈判？"></a>29.弱的一方如何谈判？</h4><ul><li><p>态度：千万不能用说服，必须用谈判。低三下四的被同情有什么意思？转换成补充谈判。“外卖30分钟送达，这个时候突然天降大雨，无法送达，怎么办？”</p><p>不要只盯着自己的委屈，而是要盯着对方的利益，没有人为别人的委屈买单，但会为了自己的利益让步。</p></li><li><p>方法论：</p><ol><li>寻找你的筹码，即使是沉没成本，也是可以让对方作出让步的筹码之一。</li><li>给出方案。A 额外工作交给另外一个人，B 加钱。</li></ol><p>​</p></li></ul><h4 id="30-如何听懂老板的意图？"><a href="#30-如何听懂老板的意图？" class="headerlink" title="30.如何听懂老板的意图？"></a>30.如何听懂老板的意图？</h4><ul><li>态度：“天气好热的两难境地？“尴尬vs刻意，预设别人提要求是用”请“字的</li><li>方法论：<ol><li>你认真在别人的问题发现自己可以切入角度，越是能解决那些原本不属于你的问题，你的能力和资质就会越强。</li><li>从评价模式转成解决模式</li><li>明确诉求后提出解决问题。开始尝试审局，归纳为自己的问题…..然后慢慢开始改变。</li></ol></li></ul><h4 id="31-亲人在外人面前丢脸，我改怎么解围呢？"><a href="#31-亲人在外人面前丢脸，我改怎么解围呢？" class="headerlink" title="31.亲人在外人面前丢脸，我改怎么解围呢？"></a>31.亲人在外人面前丢脸，我改怎么解围呢？</h4><ul><li>态度：选择帮理还是帮清呢？其实除了这两条路之外还有另外一条路：打圆场，讲笑话，把话题带走。最主要的目的是缓解气氛，是非对错并不重要。</li><li>泛化：这个场景，既不是你的问题，权力也不在你，而预期也不是非要认死理分个对错。所以需要的只是打个原厂</li></ul><h4 id="32-如何不伤感情的拒绝八卦？"><a href="#32-如何不伤感情的拒绝八卦？" class="headerlink" title="32.如何不伤感情的拒绝八卦？"></a>32.如何不伤感情的拒绝八卦？</h4><ul><li>方法论；<ol><li>定性：对方的目的是出于关心还是打探小道消息。可以通过把话题抛回去，看她的态度如何，是积极的还是消极的。“瞌睡来了正好有一个枕头”。</li><li>十动然拒;给一些无关痛痒的细节，然后分态度把问题转给别人。</li></ol></li></ul><h4 id="33-如何应对父母唠叨？"><a href="#33-如何应对父母唠叨？" class="headerlink" title="33.如何应对父母唠叨？"></a>33.如何应对父母唠叨？</h4><ul><li>态度：”我这不也是没办法么….”,父母其实也就是“唯忧其疾”，如果你身体不好，叫你多注意锻炼多运动，如果你身体好，即使身体好也不会放过你，也会说有“过劳死”…….所以这只是父母表达关心的一个话题,其他话题并不一定能够插上嘴…….</li></ul><h4 id="34-不是对方的错，只是自己个人不喜欢，这个时候怎么拒绝别人才显得不尴尬？"><a href="#34-不是对方的错，只是自己个人不喜欢，这个时候怎么拒绝别人才显得不尴尬？" class="headerlink" title="34.不是对方的错，只是自己个人不喜欢，这个时候怎么拒绝别人才显得不尴尬？"></a>34.不是对方的错，只是自己个人不喜欢，这个时候怎么拒绝别人才显得不尴尬？</h4><ul><li><p>态度：这其实是一个脸皮薄的尴尬场景，按理老说你应该比较有理，对方理亏，但是…….</p><p>其实尴尬是相互的，往往一个尴尬的场景，即是你的问题也是对方的问题，假如你站在别人额度角度，先问对方”你会不会觉得尴尬？“，然后人总是爱面子的，所以接下去这个局会变成对方证明自己为什么不尴尬……..话题就此转移.</p></li><li><p>方法论:</p><ol><li>“教练我想换一个教练，不知道可不可以?”vs”不好意思，我想试试看换个别的教练指导，你会不会尴尬？”</li><li>连招：“哦，太好了。“ ，”额，抱歉，所以你还是会觉得尴尬对不对“</li></ol></li></ul><h4 id="35-饭局上的困扰"><a href="#35-饭局上的困扰" class="headerlink" title="35.饭局上的困扰?"></a>35.饭局上的困扰?</h4><ol><li><p>扮演角色的问题</p><ol><li>饭局上其实个人表现是为了整体氛围作陪的。首先需要知道饭局的目的，角色关系，每次发言的目的，很多时候比如婚礼，只是为了仪式感的闹腾；</li><li>最受欢迎的可能是服务者角色：主动串场，冷场的时候主动开一个话题，帮迟到的人打圆场，把话题抛给冷落的人……</li></ol></li><li><p>活跃气氛的问题</p><ol><li>有时候自己不善于活跃气氛，看到别的人很擅长，有觉得别人很会溜须拍马，不是好人，是不是很拧巴。</li><li>其实要想活跃气氛，首先要审局谁是主人，谁是主宾，饭局的目的，主人主宾权力在哪。</li><li>局拖大人的缓和气氛法”我知道别人是你的好朋友，但是不会这是义务劳动吧？”给个台阶开始谈钱，或者给个台阶开始压价</li></ol></li><li><p>拒绝酒的问题</p><ol><li>酒局分为权力对等和权力不对等，而酒恰好是权力的载体。假如权力不对等，自己说一堆感谢的话，然后自己先干了，对方喝多少随意。权力对等，人多欺负人少，说一个对方身上，别人都没有或者别人都羡慕忌妒恨的点，拉拢变成人多的那一方</li><li>胡氏自毁法：自己先把所有人都敬了，然后躺沙发上，这样给人感觉，这人实在。</li><li>邱氏自毁法：强力的自贬外加强力的对别人自夸，让别人甚至都不忍心罚你酒。</li></ol></li><li><p>其他秘笈</p><ol><li>侧面烘托：找一个比较亲近的对象，开他的玩笑，然后哄主宾开心</li><li>抛一个话题，“你怎么看”，给一个冷落的人</li><li>唱双簧法：主动探寻一些小道消息….</li></ol><p>​</p></li></ol><h4 id="36-被别人表扬，怎么回应才能够谦虚又得体呢？"><a href="#36-被别人表扬，怎么回应才能够谦虚又得体呢？" class="headerlink" title="36.被别人表扬，怎么回应才能够谦虚又得体呢？"></a>36.被别人表扬，怎么回应才能够谦虚又得体呢？</h4><ul><li>态度：不能够故意谦虚，故意谦虚就是骄傲。也不能顺着话说，这样会让别人感到没有眼力劲，给你一点阳光你就灿烂。</li><li>方法论：<ol><li>换个角度，不说成绩说努力，说后天的原因而不是先天的</li><li>互惠：顺便夸款对方，这还不是因为你的xxxx原因，才导致了这么优秀的我</li></ol></li></ul><h4 id="37-中国的挫折式教育，子女应该如何应对？"><a href="#37-中国的挫折式教育，子女应该如何应对？" class="headerlink" title="37.中国的挫折式教育，子女应该如何应对？"></a>37.中国的挫折式教育，子女应该如何应对？</h4><ul><li><p>态度：论外国的教育的方法优异性。子女需要在教育中知道“我是值得的，我是有价值的”，获得骄傲与自信而中国的教育是“挫折才会成长”，但是人之所以会进步，是对自己有期待，不服输。</p><p>“别人做的好”：那又有什么，我也行;”别人做的不好，作弊”：我是谁啊，我才不会做这种偷鸡摸狗的事情呢。</p><p>而且个人价值被否定，容易产生屌丝情绪……</p></li></ul><h4 id="38-朋友走后门，我的态度？"><a href="#38-朋友走后门，我的态度？" class="headerlink" title="38.朋友走后门，我的态度？"></a>38.朋友走后门，我的态度？</h4><ul><li>方法论：<ol><li>如果你之前没有表达过类似的能力，可以先问“你为什么认为我能做呢？”</li><li>内行人给外行人做解释：为什么是想帮也帮不上忙，让他知道更多细节…….that is not how it works,做到了尽朋友的义务了</li><li>拒绝说话要说死，如果事先催过牛，这个时候就是认怂的时候了。</li></ol></li></ul><h4 id="39-专属女性停车位？"><a href="#39-专属女性停车位？" class="headerlink" title="39.专属女性停车位？"></a>39.专属女性停车位？</h4><ul><li><p>态度：任何一个暴露在公共场合的关怀都不应该以暗示某个群体的不足为前提。</p><p>​           主动关怀女性已经是一种进步，更大的进步是去挑剔这份关怀。</p></li></ul><h4 id="40-逛商场，怎么才能不让销售跟着？"><a href="#40-逛商场，怎么才能不让销售跟着？" class="headerlink" title="40.逛商场，怎么才能不让销售跟着？"></a>40.逛商场，怎么才能不让销售跟着？</h4><ul><li>态度：你的不好义思是因为你不想欠陌生人人情。而换个角度考虑销售者，其实大家销售业绩其实都差不多，比的就是谁能够在最短的时间里让你感觉到欠对方的人情。</li><li>方法论：<ol><li>“如果我需要我会过来像你咨询的，你继续跟着我，我恐怕就要离开了？”，</li><li>不带情绪的拒绝，只传达信息。</li><li>让别人知道离开更适合他的销售。反向互惠:顾客是不是上帝不好说，但销量一定是上帝。</li></ol></li></ul><h4 id="41-熟人在公共场合怼我，我该怎么做？习惯性被别人打击"><a href="#41-熟人在公共场合怼我，我该怎么做？习惯性被别人打击" class="headerlink" title="41.熟人在公共场合怼我，我该怎么做？习惯性被别人打击"></a>41.熟人在公共场合怼我，我该怎么做？习惯性被别人打击</h4><ul><li>态度：“为什么ta会这么做？”这其实是他们和每个人互动的过程中摸索出来的，其实是你让他这么做的。可能你会觉得不好意思反击，但是就是因为你的不好义思，默认了对自我价值的贬低。别人会认为你的价值就是这样的，你不翻脸，就是认为这个不重要，至少不会比“不好意思”重要！！！</li></ul><h4 id="42-职场新人的规则-少说话多反馈"><a href="#42-职场新人的规则-少说话多反馈" class="headerlink" title="42.职场新人的规则-少说话多反馈."></a>42.职场新人的规则-少说话多反馈.</h4><ul><li>方法论：<ol><li>平时可以少说话，但是cue到你的时候，你需要多反馈意见。</li><li>嗯 变成 “哦～对～”。感觉到醍醐灌顶</li><li>啊 变成 “咦～”。从怀疑对方到怀疑自己</li></ol></li></ul><h4 id="43-关于背锅，我有话要说"><a href="#43-关于背锅，我有话要说" class="headerlink" title="43.关于背锅，我有话要说"></a>43.关于背锅，我有话要说</h4><ul><li><p>方法论</p><ol><li><p>心态：需要考虑通过中的权重问题，去审局：“你的期待和需要达成的效果是什么？”</p><p>比如：搞定嘉宾，除了提醒，预约，还要写预案，形成规划，而不仅仅是一个传声筒。</p></li><li><p>任务与责任：下属犯错，领导也需要背锅。三申五令，只是完成传达公司规定的任务，确保下属工作的顺利完成才是职责，树立职场的威信。</p></li><li><p>观念：为什么背锅是个常见的话题？职场是第一次多人的大型合作，权责分工肯定会有灰色的地带。需要解决的是外在沟通与内在沟通，在于描述问题的方式，对自己好好说话。</p></li></ol></li></ul><h4 id="44-和其他部门沟通中的“明明就这样？”"><a href="#44-和其他部门沟通中的“明明就这样？”" class="headerlink" title="44.和其他部门沟通中的“明明就这样？”"></a>44.和其他部门沟通中的“明明就这样？”</h4><ul><li>态度：社团的音乐节和校音乐节，一个是认为每年这个时候都会办校音乐节，另一个认为你没有写进校规。</li><li>方法论：<ol><li>为什么要办？合并办。跳出陷阱，跳开各自坚持的“明明应该怎么样怎么样？”先问纹身噩梦要这样，从表面立场到背后诉求独立办音乐会不是很坚定不可调节的立场，那么问题的解决空间就打开了。</li><li>很多职场人用“明明就”，这个词坚持非常表层和浅层的对错，通过提问发现更细节需求，从而发现更广阔的业绩提升空间</li><li>这是应用题不是是非题</li></ol></li></ul><h4 id="45-金牌销售的选择错觉"><a href="#45-金牌销售的选择错觉" class="headerlink" title="45.金牌销售的选择错觉"></a>45.金牌销售的选择错觉</h4><ul><li>态度：情感上感觉，现在不是一个硬邦邦的局势，而是一个有选择的感觉。造成一种气氛，你不必一定要做什么，而产生一种抵触感。您可以…….也可以……</li></ul><ul><li>方法论<ol><li>“您的账户余额快用完了你可以考虑下等我回去后再充值或者你也可以现在充值”？or “您账户余额快要用完了，所以可不可以拜托你现在充值，这样充值就会算在我的名下了？”前者是which one is better。后者是yes or no…….感觉更体贴，为你提供了更多的选项，更容易被人门接受</li><li>要求下属加班场景：“今天下班会留下加班，您可以先早点去吃再回来加班，还是加完班回去吃？”</li></ol></li></ul><h4 id="46-优雅怼人的三步走"><a href="#46-优雅怼人的三步走" class="headerlink" title="46.优雅怼人的三步走"></a>46.优雅怼人的三步走</h4><ul><li>态度：压住怒火，不是直接怼回去，而是先缓和气氛，虽然对方要求极其无礼，但先给足对方面子</li><li>方法论：<ol><li>先总结给对方定一个调子：你讲的是一个什么样的问题——-缓和气氛</li><li>再承接找到对方的关注点（普惠），发表自己的理由——找到自己的角度</li><li>站在客观的角度，归谬找到错误点——把对方最不合理的地方放大</li></ol></li></ul><h4 id="47-谈判中的开门与关门"><a href="#47-谈判中的开门与关门" class="headerlink" title="47.谈判中的开门与关门"></a>47.谈判中的开门与关门</h4><ul><li>态度：规定把门关了起来，没得谈，我们要想的是如何打开这扇门</li><li>方法论：<ol><li>绕过规定直击需求。“我知道这是规定，有没有一些例外的情况也是符合规定的原则呢？”</li><li>把权力交给对方。“哦，规定是这样，不好意思，我经验不足。那在不违反规定的情况下，您能想到什么解决办法呢？”把对方转换成解决问题的思维模式。</li></ol></li></ul><h4 id="48-用不规则动词怼人"><a href="#48-用不规则动词怼人" class="headerlink" title="48.用不规则动词怼人"></a>48.用不规则动词怼人</h4><ul><li>态度：英国罗素提出不规则动词。每个形容词都有对应的中性，褒义，贬义。”话太多，个性活波”，“食言而肥，从善如流”</li><li>方法论：<ol><li>遇到言语冲突，有没有言语相似而是褒义的词…..</li><li>从另外一个情绪看，是否有别的样子呢</li></ol></li></ul><h4 id="49-推销自己中的意愿与能力"><a href="#49-推销自己中的意愿与能力" class="headerlink" title="49.推销自己中的意愿与能力"></a>49.推销自己中的意愿与能力</h4><ul><li>强调自己的能力而不是体现出意愿，更加可以提高自己的说服力，比如“表白”</li></ul><h4 id="50-关于熊孩子"><a href="#50-关于熊孩子" class="headerlink" title="50.关于熊孩子"></a>50.关于熊孩子</h4><ul><li><p>态度：中国教育喜欢表扬孩子是乖孩子。关于顺从的孩子，乖孩子。其实乖不是一个人的本性，它代表你还没有真正的认识他，乖不是一种成长，其实是某种程度上的幼稚。只有吵架才是你真正了解一个人的时候，会为了什么吵架，会怎么吵架。小孩不吵架，一来没有吵架的必要，二来没有吵架的勇气，或者情绪绑架。只有吵架的时候，才是那一刻他的真实与现实产生摩擦的时候。</p><p>​</p></li></ul><h4 id="51-亲戚总不把自己当外人，该不该怼回去？"><a href="#51-亲戚总不把自己当外人，该不该怼回去？" class="headerlink" title="51.亲戚总不把自己当外人，该不该怼回去？"></a>51.亲戚总不把自己当外人，该不该怼回去？</h4><ul><li><p>态度：</p><ol><li>他把我画到这个圈圈里来了，但是我还没有准备接受到这个圈圈里来。</li><li>“应该的”是所有施于善意者最大的天敌。我们都不是圣人，施于善意，我们都没有一点期待的吗？我们期待一丝谢谢，一丝感恩，最怕善意消失无形，变成他人的一种习惯。</li><li>人性奇妙点：只要人生有捷径，捷径很快就变成唯一的路—&gt;“一碗水要端平啊？～”</li><li>人性奇妙点：做了10件事，9件事办好，1件事没有办好，所有人都只记得那一件—&gt;”你看其他事儿都办了，这件事再帮帮”</li><li>人性奇妙点：人类会滋生出依赖特性。—&gt;”大不了再帮忙介绍一个”</li><li>怼才能让你的爱有区分而有分量</li></ol><p>​</p></li></ul><h4 id="52-面试中反问对方问题的优势"><a href="#52-面试中反问对方问题的优势" class="headerlink" title="52.面试中反问对方问题的优势"></a>52.面试中反问对方问题的优势</h4><ul><li>态度：在学生时代向职场时代思维转变的过程，自己提出问题，自己找到答案，而不是划重点。所以有时候提出正确的问题比找答案更重要</li><li>方法论：<ol><li>“如何利用我的工作能力为公司创造价值呢？”完美结合了考察公司和展示自己的责任感</li></ol></li></ul><h4 id="53-开除员工的时候怎么说比较合适？"><a href="#53-开除员工的时候怎么说比较合适？" class="headerlink" title="53.开除员工的时候怎么说比较合适？"></a>53.开除员工的时候怎么说比较合适？</h4><ul><li>态度：错误的方向是“忍”，“等”，“炸”。一开始就忍着，调到不合适岗位不给升职加薪，大骂一通</li><li>方法论：<ol><li>提前30天内加入人力培训计划，协商个人目标，给机会的时候给预警。</li><li>在说的时候更多的强调客观事实，个人的能力和目标的落差</li><li>对方辩解之前，抢先安抚对方，强化结论。</li></ol></li></ul><h4 id="54-如何利用谈判意识，避免威信群里吵架"><a href="#54-如何利用谈判意识，避免威信群里吵架" class="headerlink" title="54.如何利用谈判意识，避免威信群里吵架"></a>54.如何利用谈判意识，避免威信群里吵架</h4><ul><li><p>态度：有些问题并不是非黑即白的问题，遇到纠纷可以先选择谈判不行再选择争论。</p></li><li><p>方法论：</p><ol><li>利用寻找合适的场合来增加自己的谈判筹码</li><li>私下和公共场合的选择，如果抗争就代表想让大家都知道，我们要让抗争变成最后的筹码</li></ol><p>​</p></li></ul><h4 id="55-邪教教主的“态度免疫”话术"><a href="#55-邪教教主的“态度免疫”话术" class="headerlink" title="55.邪教教主的“态度免疫”话术"></a>55.邪教教主的“态度免疫”话术</h4><ul><li>态度:利用“态度免疫”，预先给教众打预防针,防止叛变。</li><li>方法论：<ol><li>引导对方，“把外界攻击我们的比较夸张的部分，先一步告知我们,让成员对此产生免疫力“</li><li>这时候再有人苦口婆心的劝你就比较难了，因为对别人的不同意见产生了抵抗力.”果然嘛，和那个老师说的一样，现在的小孩子都是这样”</li><li>识别：“对别人不同的意见产生抵抗力”</li></ol></li></ul><h4 id="56-怎么样提问，才能得到自己想要的答案？"><a href="#56-怎么样提问，才能得到自己想要的答案？" class="headerlink" title="56.怎么样提问，才能得到自己想要的答案？"></a>56.怎么样提问，才能得到自己想要的答案？</h4><ul><li>态度：你怎样提问，其实很大程度上绝对了对方的怎么回答。这其实就是语言的力量</li><li>方法论：<ol><li>提出ab选择项，然后把你想要的那个答案用褒义词包装起来，然后把你不想别人选的那个词用贬义词包装起来</li><li>哪里说的具体，哪里说的笼统，哪里要调动情绪，哪里要述说理性……</li><li>利用不规则动词设计问题的选项.”老师去一个贫困的教育机构访问,直接捐款还是买相应价格的纪念品呢？”（如何提高前者的被选择概率，如何提高后者的被选择的概率）</li></ol></li></ul><h4 id="57-如何用道歉制造额外的犯错成本？"><a href="#57-如何用道歉制造额外的犯错成本？" class="headerlink" title="57.如何用道歉制造额外的犯错成本？"></a>57.如何用道歉制造额外的犯错成本？</h4><ul><li>态度：犯了错为什会后悔,而且归谬于压力大，发挥失常，是因为这些犯错没有承担足够的责任，一般都是在事后的懊恼中不断的循环,不断的循环.做了一件错误的事，无端给别人带来了麻烦。</li><li>方法论：<ol><li>要主动的让自己的情绪承担犯错的责任，诚恳对被你冒犯过的人严肃的道歉，有点像忏悔</li></ol></li></ul><h4 id="58-劣势下的谈判手法"><a href="#58-劣势下的谈判手法" class="headerlink" title="58.劣势下的谈判手法"></a>58.劣势下的谈判手法</h4><ul><li>态度：量化成本,总体要承受多少损害,否则”核武器是世界最危险也是最安全的武器”</li><li>方法论：<ol><li>明晰三点：你的底线，他的隐性代价，给出维系战略平衡方案</li><li>“他私藏了你的把柄，同时也有可能是他的把柄”-&gt;知情不报，换个地方，几年后忘记了…….</li></ol></li></ul><h4 id="59-大胆去问，不是为了答案"><a href="#59-大胆去问，不是为了答案" class="headerlink" title="59.大胆去问，不是为了答案"></a>59.大胆去问，不是为了答案</h4><ul><li>态度：提问不一定要正面回答，提问主要是为了宣扬我方立场，“在森林里射出一枪，不一定要射中猎物，只是在告诉猎物我在哪里”，“可以问选择题而不是问答题，来减轻对方回答的压力”</li></ul><h4 id="60-我们不互相亏欠，如何缅怀"><a href="#60-我们不互相亏欠，如何缅怀" class="headerlink" title="60.我们不互相亏欠，如何缅怀"></a>60.我们不互相亏欠，如何缅怀</h4><ul><li>态度：把单方面的恩惠，改成双方的互惠.</li><li>方法论：<ol><li>没事，下次容我麻烦你了。“减轻对方的心理压力，否则日后相处会有疏离感,觉得欠了好大一个人情”,所以用互惠表示尊重。等需要对方帮忙的时候，我们也可以很自然的提出请求。</li><li>我相信如果换做是你，你也会帮我的。</li><li>我之后也少不了麻烦你。</li></ol></li></ul><h4 id="61-生旦净末丑，找对人设再开口"><a href="#61-生旦净末丑，找对人设再开口" class="headerlink" title="61.生旦净末丑，找对人设再开口"></a>61.生旦净末丑，找对人设再开口</h4><ul><li>态度：判断一句话该不该讲，首先判断自己的人设对不对，人设不对怎么说都是错的。</li><li>方法论：<ol><li>调整对方对我的人设预期。“有句话不知道当讲不当讲…….”-&gt;”我知道这话不该我说”，“我知道这话可能轮不到我说”</li><li>​</li></ol></li></ul><h4 id="62-不要用你的对不起，来换我的没关系"><a href="#62-不要用你的对不起，来换我的没关系" class="headerlink" title="62.不要用你的对不起，来换我的没关系"></a>62.不要用你的对不起，来换我的没关系</h4><ul><li>态度：道歉其实是犯错一方和受害一方，在交换shame和power,只有这样才能被原谅。“负荆请罪”，廉颇是在什么时候开始道歉的呢？当廉颇走出家门那一刻就开始了道歉，在光天化日和众目睽睽之下，主动忍受羞辱。</li><li>方法论：<ol><li>不能太早出现“但是”，有推锅给当事人的嫌疑。这个“但是”，当对方问你的时候再解释</li><li>注意道歉的语气和语调，太流程也不是什么好事</li></ol></li></ul><h4 id="63-我理解了不等于我认同了"><a href="#63-我理解了不等于我认同了" class="headerlink" title="63.我理解了不等于我认同了"></a>63.我理解了不等于我认同了</h4><ul><li>态度：“类似民事调解员”，他们善于在不吵架的状况下，让双方调整态度。</li><li>方法论：<ol><li>“我确认一下我有没有听懂你的意思是xxxxxxx（最善意的方式）,所以应该不是xxxxxxx（最恶意的方式）”，抚心的技巧，让针锋相对的立场缓和下来</li><li>错误立场：”我不同意你的观点，我认为应该……….”,这样容易产生争执</li></ol></li></ul><h4 id="64-分清手段和目的"><a href="#64-分清手段和目的" class="headerlink" title="64.分清手段和目的"></a>64.分清手段和目的</h4><ul><li>态度：“男朋友想打电动，女朋友想看电影，其实挖掘后发现好玩才是目的，电动只是手段，而且只是手段之一”。人与人之间的冲突，都不是你和我两个人有冲突，而是你所认定的手段和我现在所认定的手段之间的冲突，通常没有仔细去想手段背后真正想要的是什么。</li><li>方法论：<ol><li>“注意这只是我们的手段”</li></ol></li></ul><h4 id="65-说话的时候，不经意间得罪人，怎么办？"><a href="#65-说话的时候，不经意间得罪人，怎么办？" class="headerlink" title="65.说话的时候，不经意间得罪人，怎么办？"></a>65.说话的时候，不经意间得罪人，怎么办？</h4><ul><li>态度：“被误解是表达者的宿命”。自己的话里面可能是有雷的。最明显的例子，一个学霸说自己没考好，而对你来说那个分数可能已经是超水平发挥才能获得的</li><li>方法论：<ol><li>“很多人觉得自己很平常，但是在别人看来却非常羡慕”，首先要否定这个错误观念，在说话前先给自己排雷,意识到自己身上是有雷的。</li><li>一个正确的列子：波士顿访问交流的时候一个社交礼仪，因为在波士顿有很多非常有名的大学，在和别人介绍的时候先说“我在波士顿读书”，而不是说“我是xxx大学毕业的”。这样的好处是当你面对的听众非名校背景的时候，你的名校背景很可能不是你的加分项，而是你的雷，一不小心就得罪了谁；除非是对方问了或者当你得知对方也是一个不错的学校的时候，再告知对方是哪个学校的。需要一个敏锐的观察力。</li></ol></li></ul><h4 id="66-在商家面前，砍价总是不成功，怎么办？"><a href="#66-在商家面前，砍价总是不成功，怎么办？" class="headerlink" title="66.在商家面前，砍价总是不成功，怎么办？"></a>66.在商家面前，砍价总是不成功，怎么办？</h4><ul><li>反例：<ol><li>“哎，能不能便宜点啊，不便宜就算了，我走了！”//威胁</li><li>“老板啊，行行好啊，卖我便宜点咯～”//撒娇</li></ol></li><li>态度：甜咸比，是食物中的一个名次，是只食物中甜味和咸味的搭配比例。在砍价中，吃不吃软不一定，但是一定不爱吃硬的。精髓是，砍价要表达出“有机会但很可惜”。</li><li>方法论：<ol><li>“我确实很喜欢你们的东西，但是有些店卖的很便宜，你觉得呢？”</li><li>砍价中的“甜”：自己的偏好,意愿,心情,而不是客观的优点。因为你强调了对方的客观优点，让商家知道自己的优势，反而不会退让了。</li></ol></li></ul><h4 id="67-争论或者吵架的时候，如何体现出自己的主导权？"><a href="#67-争论或者吵架的时候，如何体现出自己的主导权？" class="headerlink" title="67.争论或者吵架的时候，如何体现出自己的主导权？"></a>67.争论或者吵架的时候，如何体现出自己的主导权？</h4><ul><li><p>反例：</p><p>“你的事情重要，我的事情也很重要啊，你配合我一下不行吗？～”</p></li><li><p>态度：</p><p>你愿意从对方的角度出发去处理他所存在的问题，配合对方而不是针锋相对。</p></li><li><p>方法论：</p><ol><li>掌握语气语调。“冷静”，“低沉”</li><li>配合对方，讨论他想讨论的问题。“我知道你的事情也很重要，那你说说看你这边具体有什么困难，我们一起来想办法，我们先解决了你的问题，再帮我来解决我的问题，怎么样？”</li></ol></li></ul><h4 id="68-不想要收对方的礼物，但不知道该怎么拒绝？"><a href="#68-不想要收对方的礼物，但不知道该怎么拒绝？" class="headerlink" title="68.不想要收对方的礼物，但不知道该怎么拒绝？"></a>68.不想要收对方的礼物，但不知道该怎么拒绝？</h4><ul><li><p>态度：</p><p>首先要“自我坚定”，明确的为自己做主，该说不的时候就要说不，然后再想委婉拒绝的方式。</p></li><li><p>方法论：</p><ol><li>拖延战术。拖了几次对方就知道，你没有这么想要。</li><li>非人为因素。“我的衣柜已经满了，千万不要送我衣服了”（空间），“我还不确定下个月会在什么地方”(时间)</li><li>最后一定要表达出感谢之意。</li></ol></li></ul><h4 id="69-“游泳健身有没有兴趣了解一下？”之后怎么可以提高用户办卡的概率？"><a href="#69-“游泳健身有没有兴趣了解一下？”之后怎么可以提高用户办卡的概率？" class="headerlink" title="69.“游泳健身有没有兴趣了解一下？”之后怎么可以提高用户办卡的概率？"></a>69.“游泳健身有没有兴趣了解一下？”之后怎么可以提高用户办卡的概率？</h4><ul><li><p>反例：</p><p>“这个健身房是很不错，但是会费每个月1000，好像有点贵”</p><p>-&gt;</p><p>“哎，怎么会呢，这个这个真的不算贵，一个月1000，其实你平均下来一天也就30块，这个钱为健康投资是非常值得的”</p></li></ul><ul><li><p>态度：</p><p>“你说的也对，这个价格的确不便宜，我之前从别家健身房转来的时候，也觉得这个费用为什么会这么高，不过后来我发现很多时候是一分钱一分货”</p><ol><li>你可以去挑战对方的常识，挑战对方的经验，但是就是不要去挑战对方的感觉。因为这个东西的对错判断权力完全在对方，你是没法控制的。</li></ol></li><li><p>方法论：</p><p>Feel Felt Found</p><ol><li>Feel 。先承认对方的感觉。你会有这种感觉是很正常的</li><li>Felt。Feel的过去式。“我之前也有跟你一样的感觉”</li><li>Found.发现。“可是我后来发现一件事情…..”,好比说贵是贵但是贵的有道理</li></ol><p>以一个过来人的身份，来分享你的经验。</p><p>​</p></li></ul><h4 id="70-A和B在某个观点上存在分歧，叫你去评理，你该怎么站队，才能保证全身而退呢？"><a href="#70-A和B在某个观点上存在分歧，叫你去评理，你该怎么站队，才能保证全身而退呢？" class="headerlink" title="70.A和B在某个观点上存在分歧，叫你去评理，你该怎么站队，才能保证全身而退呢？"></a>70.A和B在某个观点上存在分歧，叫你去评理，你该怎么站队，才能保证全身而退呢？</h4><ul><li><p>反例：</p><p>只知道热血澎湃党同伐异，给反对者贴标签，把对方不当正常人看。</p></li><li><p>态度：</p><p>日常生活中的绝大多数的争议，根本原因，就是因为双方的定义不一样</p></li><li><p>方法论：</p><ol><li>“看你怎么定义了”。不要在他们观点的中间地带游走，举一个略极端的A观点的例子，再举一个略极端B观点的例子…….“如果你这么定义，我支持……如果你这么定义，我支持……”,然后尝试全身而退。</li></ol></li></ul><h4 id="71-和老板谈加薪，老板不答应，如何拆解议题，得到好处？"><a href="#71-和老板谈加薪，老板不答应，如何拆解议题，得到好处？" class="headerlink" title="71.和老板谈加薪，老板不答应，如何拆解议题，得到好处？"></a>71.和老板谈加薪，老板不答应，如何拆解议题，得到好处？</h4><ul><li><p>反例：</p><p>“老板，有件事想和你打个商量，就是你下个月可以帮我加薪1000吗？”</p><p>-&gt;</p><p>老板的选项只有”答应”，“不答应”两个选择</p></li><li><p>态度：</p><ol><li>议题拆解的越多，越细，彼此的选项就越多。</li><li>需要讲究拆解的顺序。</li><li>在我不在乎的点上做一些让步，互惠，获得对方的让步好处。</li></ol></li><li><p>方法：</p><ol><li>拆解议题一：金额，1000元太多，没准可以加500</li><li>拆解议题二：时机，这个月资金比较紧张不太方便，但是下个季度可以</li><li>拆解议题三：形式，1000元不是薪水，而是奖金，看你表现。</li></ol></li></ul><h4 id="72-防止做话题小偷，给对方一个展示的机会？"><a href="#72-防止做话题小偷，给对方一个展示的机会？" class="headerlink" title="72.防止做话题小偷，给对方一个展示的机会？"></a>72.防止做话题小偷，给对方一个展示的机会？</h4><ul><li><p>态度：</p><p>别人想当主角，开启了一个话题，你却偷偷的偷走了他的话题，扫了他的兴致。一旦变成话题小偷，就会特别让人讨厌</p></li><li><p>方法：</p><ol><li>如果有人相当主角，开始分享了，一般都会先发出一些信号……</li><li>倾听和询问，是正确的回应方式</li></ol></li></ul><h4 id="73-朋友之间出现了冷战，不接电话，不回微信，应该如何有效的处理，来恢复关系？"><a href="#73-朋友之间出现了冷战，不接电话，不回微信，应该如何有效的处理，来恢复关系？" class="headerlink" title="73.朋友之间出现了冷战，不接电话，不回微信，应该如何有效的处理，来恢复关系？"></a>73.朋友之间出现了冷战，不接电话，不回微信，应该如何有效的处理，来恢复关系？</h4><ul><li><p>反例：</p><p>两个人明明在一个屋檐下，却不搭理对方。</p><p>逼对方说话：！！！</p><ol><li>我觉自己没错：“你干嘛不讲话啊？你说啊，你到底在气什么？你有什么资格这样子啊？”</li><li>觉得自己错了：“那算我错了行不行？你现在说啊，你想怎么样？”</li></ol><p>！！雪上加霜！！</p></li><li><p>态度：</p><p>爱情里面没有示弱，求饶，投降或者战争。更多的可以把他理解成机器的卡机，而不是理解成一种战争，因为战就有胜负。</p></li><li><p>方法论：</p><ol><li>沉默的表达，我还非常关心你。默默的给对方倒一杯茶，或者扔给对方一件外衣</li><li>自言自语，对方不想要搭腔可以不必搭腔。不要试图逼对方讲话，不要表达成了疑问句。</li></ol></li></ul><h4 id="74-餐厅里吃饭，发现菜馊了，老板过来尝了下，却说味道正常，这个时候感觉自己吃了哑巴亏？"><a href="#74-餐厅里吃饭，发现菜馊了，老板过来尝了下，却说味道正常，这个时候感觉自己吃了哑巴亏？" class="headerlink" title="74.餐厅里吃饭，发现菜馊了，老板过来尝了下，却说味道正常，这个时候感觉自己吃了哑巴亏？"></a>74.餐厅里吃饭，发现菜馊了，老板过来尝了下，却说味道正常，这个时候感觉自己吃了哑巴亏？</h4><ul><li><p>反例：</p><p>Q:“老板啊，这菜不对劲，有点馊”</p><p>A：“没有啊，我觉得很好啊”</p><p>Q：“可是……..我觉得味道就是不对啊”</p></li><li><p>态度：</p><p>维护自己利益的时候，不要用说服和辩论</p><p>改用谈判的思路，不要在意谁对谁错，而是看你用什么筹码.</p><p>其实这也是“弱国无外交”的缘由。</p></li><li><p>方法论：</p><ol><li><p>寻找筹码，而不是试图改变对方。</p></li><li><p>成功：</p><p>Q:”老板，我觉得这个菜有问题，你能不能给我换一个？”</p><p>A:”为什么要换一个？”</p><p>Q：“我觉得这个菜有点馊了”</p><p>A：“没有啊”</p><p>Q：“哦，你觉得没有，要不叫别人来评评理”(你可以很小的代价，使得老板承受很大的损失,对一个餐饮企业来说，仅仅是被怀疑饭菜质量有问题，都是很严重的问题,类似于老师微信群的反对声意见)</p><p>​</p><p>​</p><p>​</p></li></ol><p>​</p></li></ul><h4 id="75-商家卖的薯条，你尝了之后却是冷的，怎么合理的退掉呢？"><a href="#75-商家卖的薯条，你尝了之后却是冷的，怎么合理的退掉呢？" class="headerlink" title="75.商家卖的薯条，你尝了之后却是冷的，怎么合理的退掉呢？"></a>75.商家卖的薯条，你尝了之后却是冷的，怎么合理的退掉呢？</h4><ul><li>反例：<ol><li>我觉得。你的薯条都冷了，也太难吃了。争论的焦点是“你的感觉”。</li><li>你怎么。你们怎么敢卖这种薯条啊，你想攻击他，他采取防御状态，所以你们的立场被对立了，不是什么好事</li><li>商家标准。按你们的标准，你们卖了有问题的薯条会怎么处理呢，争论的焦点是店的标准，“有法可依”，也不容易产生对立的立场</li></ol></li></ul><ul><li><p>态度：百分比理论。</p><p>冷这个是你的感觉，假如要争论的是焦点是你的感觉，那这会是一个永远也分不清对错的事情</p><p>-&gt;同理“今天看见一个人在指挥倒车，说‘倒！倒！倒！好再倒一点！～’，‘砰’结果还是撞上了后面的车”，这里的“一点”就是你的感觉，无法精确化传递的信息，需要量化。</p><p>-&gt;和别人做比较是人类的基因所决定的，所以横向比较的时候，我们最好用百分比理论，但是未来有这多种的不确定，所以很难量化</p><p>-&gt;知足常乐</p></li><li><p>方法论：</p><p>试图让店员亲口说出标准，然后拿出薯条和他刚说的标准做比较。</p><p>​</p></li></ul><h4 id="76-当上题情景中没有商家标准的时候，又怎么办呢？"><a href="#76-当上题情景中没有商家标准的时候，又怎么办呢？" class="headerlink" title="76.当上题情景中没有商家标准的时候，又怎么办呢？"></a>76.当上题情景中没有商家标准的时候，又怎么办呢？</h4><ul><li>方法论：<ol><li>套住对方的立场。“贵公司注重产品的品质吧？”</li><li>普世标准，跟过去比。“咱家的鱼以前好像没有那么咸？”</li><li>普世标准，跟其他人比。“这条鱼好像不怎么道地啊？”</li></ol></li></ul><h4 id="77-推销一个产品，到了最后一步，临门一脚，怎么努力一把促使转化率呢？"><a href="#77-推销一个产品，到了最后一步，临门一脚，怎么努力一把促使转化率呢？" class="headerlink" title="77.推销一个产品，到了最后一步，临门一脚，怎么努力一把促使转化率呢？"></a>77.推销一个产品，到了最后一步，临门一脚，怎么努力一把促使转化率呢？</h4><ul><li><p>反例：</p><ol><li>今天不买，以后就没有机会了。你做的决定很重要，没有退路了</li></ol></li><li><p>态度：</p><p>当对方在犹豫的时候，最好的说服不是告诉他有多好多重要，反而是这个决定没有那么重要，有“后悔药”可以买</p></li><li><p>方法论：</p><ol><li>放心你随时可以反悔。“买回去如果有任何不满意，七天之内随时退，没有那么重要”，还可以反悔的机会。</li><li>没有七天包退，“定金”。另一种形式的放心，你随时可以反悔。“今天先付定金，先帮你定下来，七天内有反悔，可以退出，只是帮你预留一个名额”</li><li>“想到什么回答什么，随时可以反悔，放心不会拿你之前的话，拿着不放”</li></ol></li></ul><h4 id="78-老同学聚餐，因为你是老板，一群人起哄怂恿你来买单，怎么推脱比较合适呢？"><a href="#78-老同学聚餐，因为你是老板，一群人起哄怂恿你来买单，怎么推脱比较合适呢？" class="headerlink" title="78.老同学聚餐，因为你是老板，一群人起哄怂恿你来买单，怎么推脱比较合适呢？"></a>78.老同学聚餐，因为你是老板，一群人起哄怂恿你来买单，怎么推脱比较合适呢？</h4><ul><li>态度：<ol><li>平等性：我们和对方的权力是一样的，对方可以起哄，我们也可以起哄；</li><li>权力和义务是关联的，利用买单获得权力，用权力制定下一次请客的标准；</li></ol></li><li>方法论：<ol><li>以起哄对起哄。我请客可以，那么下一次以前的班长请客，下一次班花请客，下一次……</li><li>当老板除了请客，常常还要自定标准和流程。那么以后每一个聚一次，那么下一次xxx请客，下一次xxx请……</li><li>非能力所能够控制的第三方。都在理财产品里面</li></ol></li></ul><h4 id="79-表达的时候，怎么做看起来比较聪明？"><a href="#79-表达的时候，怎么做看起来比较聪明？" class="headerlink" title="79.表达的时候，怎么做看起来比较聪明？"></a>79.表达的时候，怎么做看起来比较聪明？</h4><ul><li>方法论：<ol><li>说话脑子跟不上嘴，会用垃圾话填补空档，不如直接用停顿。</li><li>用绕口令的偶然停顿作为平时的练习</li></ol></li></ul><h4 id="80-安全角理论，应对负面情绪？"><a href="#80-安全角理论，应对负面情绪？" class="headerlink" title="80.安全角理论，应对负面情绪？"></a>80.安全角理论，应对负面情绪？</h4><ul><li><p>反例：</p><ol><li>误以为小孩受到打击和挫折的时候，正好是让对方成长的时候。但是其实，这个时候的指责只会告诉小孩，这个地方不安全，以后不会和你说这方面的事情。</li></ol></li><li><p>态度：</p><p>“安全角”的概念。人和动物一样，在外面受到伤害的时候，自己会躲在一个地方藏起来，而这个藏起来的地方就是所谓的“安全角”。恋人的“安全角”多数在对方…..</p></li><li><p>方法论：</p><ol><li>此刻你是对方感到最安全的人</li><li>接纳和复述对方的话，而具体的建议要在之后视情况而定 给出。</li></ol></li></ul><h4 id="81-有人向你抱怨其他事情，怎么回应比较合适？"><a href="#81-有人向你抱怨其他事情，怎么回应比较合适？" class="headerlink" title="81.有人向你抱怨其他事情，怎么回应比较合适？"></a>81.有人向你抱怨其他事情，怎么回应比较合适？</h4><ul><li><p>反例：</p><ol><li>否定。不要在意，没什么，睡一觉就好了。“没事”，长期否定的一个结果。</li><li>说教。为什么别人不会抱怨，心灵导师，很多人体会过这种讨厌的感觉。</li><li>偏袒。两方面。“你怎么会骂老师，老师是对的啊”；“对你是对的，这种老师怎么会这么做”，夸大了ta的可怜情绪。</li></ol></li><li><p>方法论：</p><p>你的观察+他的感受。接收到ta的情绪，聆听到了ta的表达。</p></li></ul><h4 id="82-一个宜人性的人，总是莫名其妙的吃亏，如何断然拒绝对方？"><a href="#82-一个宜人性的人，总是莫名其妙的吃亏，如何断然拒绝对方？" class="headerlink" title="82.一个宜人性的人，总是莫名其妙的吃亏，如何断然拒绝对方？"></a>82.一个宜人性的人，总是莫名其妙的吃亏，如何断然拒绝对方？</h4><ul><li><p>反例：</p><ol><li>宜人性的人一般有这样的态度，多半处于女生。<ol><li>遇到事情不敢提反对意见，唯唯诺诺表示赞同，那如果在一个公司里，别人积极进取，野心勃勃，而你却表现出一种宜人性，什么都可以以对方的利益为转移，以对方的观点为第一位，那么你怎么可能升得上去呢？</li><li>利用这些人不好意思撕破脸的心态？那我就步步紧逼，你怕拒绝别人的时候会让自己显得很难看，那我就把你的“不好意思撕破脸”当作默认，这就是很多人会莫名其妙吃亏的原因了。</li><li>面站在别人的角度考虑问题，却往往忽视了自己的感觉。</li></ol></li></ol></li><li><p>态度：</p><p>必须很快的把自己的情绪，别人的情绪，自己的意思和别人意思都给抽离出来，而只是在工作场合里面来谈论它和不合理</p></li><li><p>方法论：</p><ol><li>这个问题不合理。</li><li>拒绝别人的时候，不要第一时间给理由，因为这不是你的义务，你越是给理由，对方就越能拆解你的理由。</li></ol></li></ul><h4 id="83-在和沉溺在悲痛中的谈话，如何接话？"><a href="#83-在和沉溺在悲痛中的谈话，如何接话？" class="headerlink" title="83.在和沉溺在悲痛中的谈话，如何接话？"></a>83.在和沉溺在悲痛中的谈话，如何接话？</h4><ul><li><p>态度：</p><p>这种场景下说什么并不重要，而是用什么样子的话塑造聊天气氛，让对方可以放心地，尽情的沉浸在回忆当中。</p></li></ul><ul><li><p>方法论：</p><ol><li><p>不一定要说话，可以自然的接话，像一个“访问者”一样。”原来如此”,”真的啊”,”这样啊”,”然后呢”…….</p></li><li><p>“意识唤醒”理论。让对方切换自己的角色身份。</p><p>eg：我们看到有些小朋友到医院里，要打针的时候，小朋友会非常害怕，有些妈妈会使出这一招来：比方说她的儿子去医院，看到医生就开始大哭，这时候病房还有其他的小朋友在哭，妈妈就会说“弟弟，你看旁边那个妹妹，那么害怕，哭的那么厉害，你作为大哥哥，你要看到这个妹妹这么害怕，你就不要让她更害怕了啊，如果你不哭，勇敢一点，这个妹妹也就不会那么害怕了”</p><p>意识唤醒了小孩的“哥哥”身份，让他不在害怕。</p></li></ol><p>​</p><p>​</p></li></ul><h4 id="84-说话种的”不战而屈人之兵”技巧巡演"><a href="#84-说话种的”不战而屈人之兵”技巧巡演" class="headerlink" title="84.说话种的”不战而屈人之兵”技巧巡演"></a>84.说话种的”不战而屈人之兵”技巧巡演</h4><ol><li><p>如何忽悠对方自费去国外帮你干活？！！</p><ul><li><p>态度：利用自我一致性的原理：内在想法和外在的行为保持一致，这是心灵大师和激励大师常用的手段</p></li><li><p>反例对话：</p><p>A:为什么要去柬埔寨呢？这对我来说实在有些困难啊</p><p>B:没有啊，这一点都不困难，对你有很大的帮助，去柬埔寨真的很值得(这B是一种解决问题的模式，去处理困难，所以很容易会得到A的回答是..)</p><p>A:哪有这么容易啊，我还要自己付机票钱呢（解决问题模式会遇到的终点型对话）</p></li><li><p>正例对话：</p><p>A:为什么要去柬埔寨呢？这对我来说实在有些困难啊</p><p>B:对，这些问题真的很困难，因为就像您之前，不是也同意了吗？跳出自己的舒适圈是很需要勇气的.(刺激ta的心灵，让ta用自驱力进行自我化解)</p></li><li><p>延展性—&gt;健身房办卡</p><p>我平时时间不够，怎么办? -&gt; 你是什么样的人</p></li></ul></li></ol><ol><li><p>“给甜头”话术来提要求？</p><ul><li><p>场景：情侣之间要求对方每天打电话</p></li><li><p>态度：当别人为你完成一件事，你需要表现出很开心，很辛福的正面情绪，让对方觉得，他的行为能带来好的改变，让他好像尝到甜头一样。其实呢，主导权在你这……</p></li><li><p>反例对话：</p><p>A: 哎呀，你还记得要打来啊？</p><p>A:明天不要玩机打给我喔。</p><p>(完成任务的模式，是你明显的掌握了主动权，你在给他施压，他是被要求的，被你控制的，有点像被老师要求按时交作业的学生，只是被动的配合而已)</p></li><li><p>正例对话：</p><p>A:看到你心情就好起来了</p><p>A:我好开心有你陪我聊东聊西。</p><p>(正向反馈，鼓励对方)</p></li></ul></li><li><p>正确的表达感谢之意，激励对方？</p><ul><li><p>态度：表达感谢时中国人的传统，使得送礼物的人很难看出你到底有多喜欢礼物，很强调礼貌，重视礼仪，久而久之”说谢谢”变成一种社交礼仪，你们就只是合力演了一出戏而已。</p></li><li><p>反例对话：</p><p>A：这怎么好意思呢，这很贵吧，哎呀让你破费了，实在太感谢你了。(对方完全不知道你是有多喜欢，你们合力演了一出戏而已)</p></li><li><p>正例对话：</p><p>A：哇，这我想要好久了！我太开心了！</p></li></ul></li><li><p>未完待续…….</p></li></ol><h4 id="85-取发呼上与取发呼下的说话技巧"><a href="#85-取发呼上与取发呼下的说话技巧" class="headerlink" title="85.取发呼上与取发呼下的说话技巧"></a>85.取发呼上与取发呼下的说话技巧</h4><ol><li><p>高求策略之取发呼上？</p><ul><li><p>态度：</p><p>利用对方第一次拒绝公益事件的愧疚感，提出第二个要求，使自己被满足</p></li><li><p>方法论：</p><ol><li>提出一个对方几乎不可能同意的要求，再提出你真正的要求</li><li>这个要求必须是合理和正当的，有意义，公利的。</li><li>这样对方会因为第一次拒绝而有愧疚感。对一个正当的善良的请求，连续拒绝两次，一般人都会有一定的心理压力</li></ol></li><li><p>实例：</p><p>A:我们这有一项针对青少年犯罪者的辅导，你是否愿意担任自愿者，去帮助那些误入歧途的年轻人辅导课耶，每周花两小时，连续两年？（大部分拒绝）</p><p>A:没关系，那么不然，你愿不愿意担任自愿者，在周末的时候，带些误入歧途的年轻孩子，去动物园或者游乐场，玩一整天？(30%)</p></li></ul></li><li><p>反向激励之取法乎上？</p><ul><li><p>态度：让对方产生自豪感，使得对方为了维护自豪感而努力。</p></li><li><p>实例：</p><p>一个超爱打电动的小孩，家长想让他好好学习</p><p>A1：你看隔壁小明，成绩比你好那么多，你要多像人家学习(被否定)</p><p>A2:隔壁小方，天天打电动，学习成绩那么差，以后一定没有出息，好险我儿子跟他不一样，儿子你然后也爱打电动，但你玩归玩，心理有数，比他好太多了。</p></li><li><p>方法论：</p><ol><li>好在你不像……</li></ol></li></ul></li><li><p>自黑化解矛盾之取法呼下？</p><ul><li><p>态度：比你想的更严重。就算别人真的想黑你，他也没有进一步继续下去的动力了。说的严重一点，就算对方一开始是恶意的，你只要不把它当成一种恶意，而是一种开玩笑的方式，自己给自己添油加醋，这件事情就会从一个恶意攻击变成一个玩笑，反而你就没有那么尴尬了</p></li><li><p>实例：</p><p>A1：很多人听我唱歌，都骂我没有唱功，摆脱，我是个演员，我连演技都没有了，你凭什么要我有唱功</p><p>A2:   我数学是差，可是我的物理更差啊</p></li></ul></li><li><p>未完待续……</p></li></ol><h4 id="86-成人版的撒娇，ta跟你抱怨”人老了，不中用了”"><a href="#86-成人版的撒娇，ta跟你抱怨”人老了，不中用了”" class="headerlink" title="86.成人版的撒娇，ta跟你抱怨”人老了，不中用了”"></a>86.成人版的撒娇，ta跟你抱怨”人老了，不中用了”</h4><ul><li><p>态度：让对方感到被重视，被需要，足以。</p></li><li><p>方法论：</p><ol><li>不接话，不管你讲什么，只要对方感觉到自己被听见了，这个事情就有好转的迹象。</li><li>歪招：怨念转移法。人的一生中总有一些放不下的事情，这个放不下的事，有时候是一份埋怨，可是你会发现人在很别人的时候，经历特别旺盛，而且两个人抱怨同一个人拉近距离的效果，比两个人同时赞美一个人要好太多了。(成功摆脱低落情绪，成功转移注意力，没准还能产生共鸣，拉近关系)</li></ol></li><li><p>实例：</p><p> A:这些古董你是从哪里找到的？</p><p>B：某某先生，你才是最成功的前辈，我要多跟你学习，多跟你请教。</p></li></ul><h4 id="87-怎样忽悠聪明人，让他觉得自己很聪明？"><a href="#87-怎样忽悠聪明人，让他觉得自己很聪明？" class="headerlink" title="87.怎样忽悠聪明人，让他觉得自己很聪明？"></a>87.怎样忽悠聪明人，让他觉得自己很聪明？</h4><ul><li><p>态度: </p><ol><li>对于聪明人来说藏也是藏不住的，倒不如自曝来获取信任</li><li>聪明人都比较自信，把话说开了反而会使的弊端显得没有那么可怕，甚至还有吸引力的一面.</li></ol></li><li><p>方法论：</p><p>聪明人的软肋就是自觉聪明，主动暴露自己的软肋，“明人不说暗话”</p></li><li><p>实例:</p><p>陈近南劝说韦小宝加入天地会，一般人的劝法是</p><p>“诉说民族大义，反清复明”</p><p>可是韦小宝是一个聪明人 甚至有一些油滑</p><p>VS</p><p>“我知道你是聪明人，所以有些话我就跟别人说的不一样，对社会大众我们要说的反清复明，对你我就直接 说了哪有什么反清复明，无非是清朝抢走了我们的银两和女人，我们要把它抢回来”</p></li></ul><h4 id="88-街上发宣传单“游泳健身了解一下”，怎么让我变得有兴趣了？"><a href="#88-街上发宣传单“游泳健身了解一下”，怎么让我变得有兴趣了？" class="headerlink" title="88.街上发宣传单“游泳健身了解一下”，怎么让我变得有兴趣了？"></a>88.街上发宣传单“游泳健身了解一下”，怎么让我变得有兴趣了？</h4><ul><li><p>方法论</p><p>“我猜您一定听过很多……不过呢……”</p><ol><li>一上来说出他的感受，尝试说出他的感受,让他觉得你懂他，不是站在对方的对立面而是边上。</li><li>使的对方产生好奇心</li><li>说出了对方曾经经历的事情，说出了对方的感受，这会让他觉得你顾及到了他的立场，有体谅他的心情。</li></ol></li><li><p>实例</p><p>“耽误你一点时间，让我简单为你介绍一下我们新开的游泳健身房？”</p><p>VS</p><p>“我猜你一定听说过很多类似样子的，健身宣传，我也知道一般人听多了，都会觉得很烦，不过呢……”</p></li></ul><h4 id="89-给别人介绍新东西的，如何听起来更专业？"><a href="#89-给别人介绍新东西的，如何听起来更专业？" class="headerlink" title="89.给别人介绍新东西的，如何听起来更专业？"></a>89.给别人介绍新东西的，如何听起来更专业？</h4><ul><li>方法论<ol><li>学习汽车销售员的绕圈式解说方式。</li><li>把常态说成特色的方式<ul><li>车子的卤素大灯，材质是一种高精度的强化玻璃-&gt;几乎每一辆车的大灯都是某种强化玻璃</li><li>引擎盖在遇到撞击时，会产生减缓冲击力度的皱褶-&gt;美国境内销售的汽车，依法必须这么设计</li></ul></li></ol></li></ul><h4 id="90-婆婆每天来看孩子，我又想要更多私人空间，我该怎么开口呢？"><a href="#90-婆婆每天来看孩子，我又想要更多私人空间，我该怎么开口呢？" class="headerlink" title="90.婆婆每天来看孩子，我又想要更多私人空间，我该怎么开口呢？"></a>90.婆婆每天来看孩子，我又想要更多私人空间，我该怎么开口呢？</h4><ul><li>方法论<ol><li>首先要肯定对方的帮助，使的对方得知彼此都是需要的。</li><li>要敢于提要求</li><li>郑重其事的谈谈，把时间固定下来，当然同时需要增加委托任务的难度（不同于每一日），使的对方会为了会面而充分准备</li></ol></li></ul><h4 id="91-犹豫不决的时候，如何做出决策？"><a href="#91-犹豫不决的时候，如何做出决策？" class="headerlink" title="91.犹豫不决的时候，如何做出决策？"></a>91.犹豫不决的时候，如何做出决策？</h4><ul><li>方法论<ol><li>模仿《爱情公寓》里面曾小贤的选择方法,抛硬币。当硬币抛到空中的那一刻的感觉/或者硬币落下后的后悔的感觉。帮助自己去寻找到自己的答案。</li><li>劝说一个人最强大的武器其事是一种“后悔的感觉”，很多时候这种感觉发生在事后，这种方式却能让感觉出现在事前。</li><li>没关系，刚才抛硬币是骗你的……</li></ol></li></ul><h4 id="92-如何”批评人”不至于吵起来"><a href="#92-如何”批评人”不至于吵起来" class="headerlink" title="92.如何”批评人”不至于吵起来 ?"></a>92.如何”批评人”不至于吵起来 ?</h4><ul><li>方法论<ol><li>普遍化。把这个犯错的人给架空了，让他变成一个符号，变成一种现象,这是很多人都有的错误，而你只是其中之一。</li><li>表述的时候不要用你，用他或者他们。</li><li>英国议会辩论有一个规则，任何一员的发言都必须针对主席，而不是直接针对任何其他议员。就像一道隔离双方的防火墙。</li></ol></li></ul><h4 id="93-聊八卦的正确打开方式？"><a href="#93-聊八卦的正确打开方式？" class="headerlink" title="93.聊八卦的正确打开方式？"></a>93.聊八卦的正确打开方式？</h4><ul><li><p>方法论</p><ol><li>投石问路,掌握弹性。</li></ol></li><li><p>实例</p><ol><li><p>“哇，几年没见，都长这么帅啦！一定有不少女孩喜欢你吧？”</p><p>VS</p><p>“最近有没有交女朋友啊？”</p></li><li><p>“你买的那个地段非常不错，靠近地铁，去年我好几个朋友都想买那个楼盘，价格一定不便宜吧？”</p><p>VS</p><p>“你新买的房子价格多少？”</p></li></ol></li></ul><h4 id="94-怎么让”改天请你吃饭”变成现实-让随口说说的事儿，落实成实际行动"><a href="#94-怎么让”改天请你吃饭”变成现实-让随口说说的事儿，落实成实际行动" class="headerlink" title="94.怎么让”改天请你吃饭”变成现实?/让随口说说的事儿，落实成实际行动."></a>94.怎么让”改天请你吃饭”变成现实?/让随口说说的事儿，落实成实际行动.</h4><ul><li>方法论<ol><li>往具体了问。你打算什么时候，怎么做这件事？追问其中的环节？</li><li>只是想让话题向更积极，更具体的方向推进，并不是用更高的话语权来迫使对方行动。</li></ol></li></ul><h4 id="95-话题终结者身上都有哪些毛病？"><a href="#95-话题终结者身上都有哪些毛病？" class="headerlink" title="95.话题终结者身上都有哪些毛病？"></a>95.话题终结者身上都有哪些毛病？</h4><ul><li>方法论<ol><li>老好人，只知道顺着别人说话，不敢挑战对方的前提/给会议增添一个思路</li><li>急于做评判。你这个观点”有点意思”，这让我想到……</li><li>害怕冒险，害怕让自己显得蠢。/承认自己有可能是错的，甚至有可能是愚蠢的，这就是对话之所以能够展开的前提</li></ol></li></ul><h4 id="96-亲戚”不会聊天”-如何能够一招搞定？"><a href="#96-亲戚”不会聊天”-如何能够一招搞定？" class="headerlink" title="96.亲戚”不会聊天”,如何能够一招搞定？"></a>96.亲戚”不会聊天”,如何能够一招搞定？</h4><ul><li>方法论<ol><li>情绪碰情绪。上一辈聊天聊的是感情不是事情.</li><li>假如三姑这时候传达关心，传达热情。她期待的是你能够回应她的关心，她的热情。 </li></ol></li></ul><h4 id="97-生活中需要增加说话中的能动性"><a href="#97-生活中需要增加说话中的能动性" class="headerlink" title="97.生活中需要增加说话中的能动性"></a>97.生活中需要增加说话中的能动性</h4><ul><li><p>实例</p><p>老板最近给我安排了三份工作，我很委屈有苦说不出，但是心中有一个期待，万一老板看到我的努力，是否会给我加薪呢？(物体:无行为能力的人，等着被别人做决定)</p></li><li><p>态度</p><ol><li>缺乏能动性的表现：我不知道我的老板会给我加薪还是白白榨取我的劳动力？（人：是可以去主动争取，可以影响别人决定的）</li><li>能动性的表现：老板给了我3份工作，这是顺势提加薪的机会，我该如何提才合适呢？</li><li>结论：任何结果都不是固定的，你的行为会影响结果的，是结果的一部分。</li></ol></li></ul><h4 id="98-受欢迎的引到别人说话能力"><a href="#98-受欢迎的引到别人说话能力" class="headerlink" title="98.受欢迎的引到别人说话能力"></a>98.受欢迎的引到别人说话能力</h4><ul><li><p>方法论</p><ol><li>Level 1: “我不太了解，你呢？”</li><li>Level 2:”你可以做的更好！”</li><li>Level 3:”这让我想到…..”直接打断无聊的聊天内容，转入正确的谈话轨道</li></ol></li></ul><h4 id="99-被人diss后如何反击才能掌握主动权？"><a href="#99-被人diss后如何反击才能掌握主动权？" class="headerlink" title="99.被人diss后如何反击才能掌握主动权？"></a>99.被人diss后如何反击才能掌握主动权？</h4><ul><li><p>态度</p><ol><li>被人鄙视和diss，假如第一时间去反击，无论情绪还是态度都处于下风了，只能说明当下的情况很糟糕。</li><li>坑在于别人预设了一个解释框架，你在这个解释框架里怎么做都是被动的，所以要怼的是“预设解释框架”</li><li>常见的误解一般来自“社会层次比较低，或者顽固保守”的人</li></ol></li><li><p>实例</p><p>diss：女人学历高没有用</p><ol><li>暴跳如雷：你凭什么鄙视我？</li><li>心平气和：不是这样的，其实大龄女博士也是有很多人追的</li></ol></li><li><p>方法论</p><ol><li>你这么理解很正常-&gt;完美跳出别人的解释框架-&gt;给他科普</li></ol></li></ul><h4 id="100-主动培养自己的谈判意识，避免一些尴尬的请求"><a href="#100-主动培养自己的谈判意识，避免一些尴尬的请求" class="headerlink" title="100.主动培养自己的谈判意识，避免一些尴尬的请求"></a>100.主动培养自己的谈判意识，避免一些尴尬的请求</h4><ul><li><p>实例</p><p>听说你常常写稿，文笔不错，最近我新开了一个咖啡店，能不能帮我写一个广告词啊？</p><ol><li>yes or no，拜托你说yes</li></ol></li></ul><ol><li>if，假如我以后来你咖啡店都可以打折。</li></ol><ul><li><p>方法论</p><ol><li>用if,沟通的过程中被动变成了主动，因为要求的条件是对方提的,拿回主动权</li><li>当我们只会说yes or no，对方只能做的是拜托你不要拒绝，继续恳求。使的话题变成了谈判,谈判反而不容易伤感情。</li><li>练习说if，使的自己变得更多元，催促自己让自己知道“对方可以提供什么自己想要的”，寻找资源的能力。</li></ol></li></ul><h4 id="101-探探中的减砝码战术"><a href="#101-探探中的减砝码战术" class="headerlink" title="101.探探中的减砝码战术?"></a>101.探探中的减砝码战术?</h4><ul><li>态度<ol><li>传统的相亲，就是看对眼，而看对眼大概几分钟心理就有谱了，但是假如不喜欢，在传统的相亲模式下还得要大眼瞪小眼，聊上2-3个小时，这样会让人感觉压力很大 </li><li>探探中的心动约会，不喜欢可以直接说出来</li></ol></li><li>方法论<ol><li>想让对方接受你的请求，可以运用减砝码的战术，目的就是让对方拥有随时喊停的权利</li></ol></li></ul><h4 id="102-别人和你道歉，你应该说些什么？"><a href="#102-别人和你道歉，你应该说些什么？" class="headerlink" title="102.别人和你道歉，你应该说些什么？"></a>102.别人和你道歉，你应该说些什么？</h4><ul><li><p>实例</p><p>假如你是蔺相如，面对这么大阵仗的前来负荆请罪的廉颇，你该如何接受他的道歉呢？（接受道歉，维护颜面，日后相处不尴尬）</p></li><li><p>方法论</p><ol><li>真心接受：不能让对方感到自己的道歉是屈辱感，给别人一个台阶下。尽量挑一个自己似错不错的问题拿自己开刷</li><li>假如完全接受，又会显得有些高傲</li><li>试着挑挑自己的错</li></ol></li></ul><h4 id="103-想要引起别人的注意，应该怎么提问？"><a href="#103-想要引起别人的注意，应该怎么提问？" class="headerlink" title="103.想要引起别人的注意，应该怎么提问？"></a>103.想要引起别人的注意，应该怎么提问？</h4><ul><li>实例<ol><li>“你觉得我新买的这个包好不好看啊？” vs “假如你是我的同事，你会觉得我这个包好不好看？”</li></ol></li><li>方法论：<ol><li>根据你的需求让别人来扮演一个角色，来吸引注意力</li><li>角色扮演,可以让别人认真思考。</li></ol></li></ul><h4 id="104-回归简单的朴素，用心路历程来解决“人际沟通的困难”？"><a href="#104-回归简单的朴素，用心路历程来解决“人际沟通的困难”？" class="headerlink" title="104.回归简单的朴素，用心路历程来解决“人际沟通的困难”？"></a>104.回归简单的朴素，用心路历程来解决“人际沟通的困难”？</h4><ul><li><p>实例</p><ol><li><p>“阿毛啊，不知道你方不方便借我1000块钱，真的不方便的话也没有关系，我就是问一下？”</p><p>vs </p><p>“阿毛啊，不好意思，我犹豫了很久，一致不知道该如何开口问你借钱，一方面会担心这样做是不是给朋友添麻烦，另一方面担心你不好意思拒绝，心不甘情不愿的把钱借给我?”</p></li></ol></li></ul><ul><li>态度<ol><li>很多人在聊天的时候会“努力把自己内心的尴尬和担心藏起来”。说出来变得透明，被看穿了，变得不自在。</li><li>学会把自己心中感受的过程说出来，保持着什么样的顾虑，反而可以解决问题</li></ol></li><li>方法论<ol><li>人与人之间的摩擦，最简单朴素的处理方式，尝试去描述“我的内心是怎么走到这一步的”。</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Release-Notes&quot;&gt;&lt;a href=&quot;#Release-Notes&quot; class=&quot;headerlink&quot; title=&quot;Release Notes&quot;&gt;&lt;/a&gt;Release Notes&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;问题&lt;/
      
    
    </summary>
    
      <category term="解忧杂货铺" scheme="http://jinjian.info/categories/%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E9%93%BA/"/>
    
    
      <category term="QIPA" scheme="http://jinjian.info/tags/QIPA/"/>
    
  </entry>
  
  <entry>
    <title>《人类简史》读书笔记</title>
    <link href="http://jinjian.info/2017/12/06/%E3%80%8A%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://jinjian.info/2017/12/06/《人类简史》读书笔记/</id>
    <published>2017-12-05T16:00:00.000Z</published>
    <updated>2017-12-24T05:31:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/hunman_history_xmind.png" alt="hunman_history_xmind"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/hunman_history_xmind.png&quot; alt=&quot;hunman_history_xmind&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="喜欢书，反复读" scheme="http://jinjian.info/categories/%E5%96%9C%E6%AC%A2%E4%B9%A6%EF%BC%8C%E5%8F%8D%E5%A4%8D%E8%AF%BB/"/>
    
    
      <category term="reading books" scheme="http://jinjian.info/tags/reading-books/"/>
    
  </entry>
  
  <entry>
    <title>Service源码解读</title>
    <link href="http://jinjian.info/2017/11/25/Service%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/11/25/Service源码解读/</id>
    <published>2017-11-24T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="StartService"><a href="#StartService" class="headerlink" title="StartService"></a>StartService</h2><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><p><img src="/images/Service_Start.png" alt="Service_Start"></p><h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><h4 id="startServiceLocked"><a href="#startServiceLocked" class="headerlink" title="startServiceLocked"></a>startServiceLocked</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ComponentName <span class="title">startServiceLocked</span><span class="params">(IApplicationThread caller, Intent service, String resolvedType,</span></span></span><br><span class="line"><span class="function"><span class="params">         <span class="keyword">int</span> callingPid, <span class="keyword">int</span> callingUid, String callingPackage, <span class="keyword">int</span> userId)</span></span></span><br><span class="line"><span class="function">         <span class="keyword">throws</span> TransactionTooLargeException </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) Slog.v(TAG_SERVICE, <span class="string">"startService: "</span> + service</span><br><span class="line">             + <span class="string">" type="</span> + resolvedType + <span class="string">" args="</span> + service.getExtras());</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> callerFg;</span><br><span class="line">     <span class="keyword">if</span> (caller != <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">final</span> ProcessRecord callerApp = mAm.getRecordForAppLocked(caller);</span><br><span class="line">         <span class="keyword">if</span> (callerApp == <span class="keyword">null</span>) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(</span><br><span class="line">                     <span class="string">"Unable to find app for caller "</span> + caller</span><br><span class="line">                     + <span class="string">" (pid="</span> + Binder.getCallingPid()</span><br><span class="line">                     + <span class="string">") when starting service "</span> + service);</span><br><span class="line">         &#125;</span><br><span class="line">         callerFg = callerApp.setSchedGroup != Process.THREAD_GROUP_BG_NONINTERACTIVE;</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         callerFg = <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">         private final class ServiceLookupResult &#123;</span></span><br><span class="line"><span class="comment">             final ServiceRecord record;</span></span><br><span class="line"><span class="comment">             final String permission;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">             ServiceLookupResult(ServiceRecord _record, String _permission) &#123;</span></span><br><span class="line"><span class="comment">                 record = _record;</span></span><br><span class="line"><span class="comment">                 permission = _permission;</span></span><br><span class="line"><span class="comment">             &#125;</span></span><br><span class="line"><span class="comment">         &#125;</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">  </span><br><span class="line">     ServiceLookupResult res =</span><br><span class="line">         retrieveServiceLocked(service, resolvedType, callingPackage,</span><br><span class="line">                 callingPid, callingUid, userId, <span class="keyword">true</span>, callerFg);</span><br><span class="line">     <span class="keyword">if</span> (res == <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (res.record == <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> ComponentName(<span class="string">"!"</span>, res.permission != <span class="keyword">null</span></span><br><span class="line">                 ? res.permission : <span class="string">"private to package"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     ServiceRecord r = res.record;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (!mAm.getUserManagerLocked().exists(r.userId)) &#123;</span><br><span class="line">         Slog.d(TAG, <span class="string">"Trying to start service with non-existent user! "</span> + r.userId);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="comment">// check permission </span></span><br><span class="line">     NeededUriGrants neededGrants = mAm.checkGrantUriPermissionFromIntentLocked(</span><br><span class="line">             callingUid, r.packageName, service, service.getFlags(), <span class="keyword">null</span>, r.userId);</span><br><span class="line">     <span class="keyword">if</span> (unscheduleServiceRestartLocked(r, callingUid, <span class="keyword">false</span>)) &#123;</span><br><span class="line">         <span class="keyword">if</span> (DEBUG_SERVICE) Slog.v(TAG_SERVICE, <span class="string">"START SERVICE WHILE RESTART PENDING: "</span> + r);</span><br><span class="line">     &#125;</span><br><span class="line">     r.lastActivity = SystemClock.uptimeMillis();</span><br><span class="line">     r.startRequested = <span class="keyword">true</span>;</span><br><span class="line">     r.delayedStop = <span class="keyword">false</span>;</span><br><span class="line">     r.pendingStarts.add(<span class="keyword">new</span> ServiceRecord.StartItem(r, <span class="keyword">false</span>, r.makeNextStartId(),</span><br><span class="line">             service, neededGrants));</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> ServiceMap smap = getServiceMap(r.userId);</span><br><span class="line">     <span class="keyword">boolean</span> addToStarting = <span class="keyword">false</span>;</span><br><span class="line">     <span class="keyword">if</span> (!callerFg &amp;&amp; r.app == <span class="keyword">null</span> &amp;&amp; mAm.mStartedUsers.get(r.userId) != <span class="keyword">null</span>) &#123;</span><br><span class="line">         ProcessRecord proc = mAm.getProcessRecordLocked(r.processName, r.appInfo.uid, <span class="keyword">false</span>);</span><br><span class="line">         <span class="keyword">if</span> (proc == <span class="keyword">null</span> || proc.curProcState &gt; ActivityManager.PROCESS_STATE_RECEIVER) &#123;</span><br><span class="line">             <span class="comment">// If this is not coming from a foreground caller, then we may want</span></span><br><span class="line">             <span class="comment">// to delay the start if there are already other background services</span></span><br><span class="line">             <span class="comment">// that are starting.  This is to avoid process start spam when lots</span></span><br><span class="line">             <span class="comment">// of applications are all handling things like connectivity broadcasts.</span></span><br><span class="line">             <span class="comment">// We only do this for cached processes, because otherwise an application</span></span><br><span class="line">             <span class="comment">// can have assumptions about calling startService() for a service to run</span></span><br><span class="line">             <span class="comment">// in its own process, and for that process to not be killed before the</span></span><br><span class="line">             <span class="comment">// service is started.  This is especially the case for receivers, which</span></span><br><span class="line">             <span class="comment">// may start a service in onReceive() to do some additional work and have</span></span><br><span class="line">             <span class="comment">// initialized some global state as part of that.</span></span><br><span class="line">             <span class="keyword">if</span> (DEBUG_DELAYED_SERVICE) Slog.v(TAG_SERVICE, <span class="string">"Potential start delay of "</span></span><br><span class="line">                     + r + <span class="string">" in "</span> + proc);</span><br><span class="line">             <span class="keyword">if</span> (r.delayed) &#123;</span><br><span class="line">                 <span class="comment">// This service is already scheduled for a delayed start; just leave</span></span><br><span class="line">                 <span class="comment">// it still waiting.</span></span><br><span class="line">                 <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) Slog.v(TAG_SERVICE, <span class="string">"Continuing to delay: "</span> + r);</span><br><span class="line">                 <span class="keyword">return</span> r.name;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span> (smap.mStartingBackground.size() &gt;= mMaxStartingBackground) &#123;</span><br><span class="line">                 <span class="comment">// Something else is starting, delay!</span></span><br><span class="line">                 Slog.i(TAG_SERVICE, <span class="string">"Delaying start of: "</span> + r);</span><br><span class="line">                 smap.mDelayedStartList.add(r);</span><br><span class="line">                 r.delayed = <span class="keyword">true</span>;</span><br><span class="line">                 <span class="keyword">return</span> r.name;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) Slog.v(TAG_SERVICE, <span class="string">"Not delaying: "</span> + r);</span><br><span class="line">             addToStarting = <span class="keyword">true</span>;</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (proc.curProcState &gt;= ActivityManager.PROCESS_STATE_SERVICE) &#123;</span><br><span class="line">             <span class="comment">// We slightly loosen when we will enqueue this new service as a background</span></span><br><span class="line">             <span class="comment">// starting service we are waiting for, to also include processes that are</span></span><br><span class="line">             <span class="comment">// currently running other services or receivers.</span></span><br><span class="line">             addToStarting = <span class="keyword">true</span>;</span><br><span class="line">             <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) Slog.v(TAG_SERVICE,</span><br><span class="line">                     <span class="string">"Not delaying, but counting as bg: "</span> + r);</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) &#123;</span><br><span class="line">             StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="number">128</span>);</span><br><span class="line">             sb.append(<span class="string">"Not potential delay (state="</span>).append(proc.curProcState)</span><br><span class="line">                     .append(<span class="string">' '</span>).append(proc.adjType);</span><br><span class="line">             String reason = proc.makeAdjReason();</span><br><span class="line">             <span class="keyword">if</span> (reason != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 sb.append(<span class="string">' '</span>);</span><br><span class="line">                 sb.append(reason);</span><br><span class="line">             &#125;</span><br><span class="line">             sb.append(<span class="string">"): "</span>);</span><br><span class="line">             sb.append(r.toString());</span><br><span class="line">             Slog.v(TAG_SERVICE, sb.toString());</span><br><span class="line">         &#125;</span><br><span class="line">     &#125; <span class="keyword">else</span> <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) &#123;</span><br><span class="line">         <span class="keyword">if</span> (callerFg) &#123;</span><br><span class="line">             Slog.v(TAG_SERVICE, <span class="string">"Not potential delay (callerFg="</span> + callerFg + <span class="string">" uid="</span></span><br><span class="line">                     + callingUid + <span class="string">" pid="</span> + callingPid + <span class="string">"): "</span> + r);</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r.app != <span class="keyword">null</span>) &#123;</span><br><span class="line">             Slog.v(TAG_SERVICE, <span class="string">"Not potential delay (cur app="</span> + r.app + <span class="string">"): "</span> + r);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             Slog.v(TAG_SERVICE,</span><br><span class="line">                     <span class="string">"Not potential delay (user "</span> + r.userId + <span class="string">" not started): "</span> + r);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> startServiceInnerLocked(smap, service, r, callerFg, addToStarting);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="bringUpServiceLocked"><a href="#bringUpServiceLocked" class="headerlink" title="bringUpServiceLocked"></a>bringUpServiceLocked</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">final</span> String <span class="title">bringUpServiceLocked</span><span class="params">(ServiceRecord r, <span class="keyword">int</span> intentFlags, <span class="keyword">boolean</span> execInFg,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">boolean</span> whileRestarting)</span> <span class="keyword">throws</span> TransactionTooLargeException </span>&#123;</span><br><span class="line">        <span class="comment">//Slog.i(TAG, "Bring up service:");</span></span><br><span class="line">        <span class="comment">//r.dump("  ");</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r.app != <span class="keyword">null</span> &amp;&amp; r.app.thread != <span class="keyword">null</span>) &#123;</span><br><span class="line">            sendServiceArgsLocked(r, execInFg, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!whileRestarting &amp;&amp; r.restartDelay &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// If waiting for a restart, then do nothing.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (DEBUG_SERVICE) Slog.v(TAG_SERVICE, <span class="string">"Bringing up "</span> + r + <span class="string">" "</span> + r.intent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We are now bringing the service up, so no longer in the</span></span><br><span class="line">        <span class="comment">// restarting state.</span></span><br><span class="line">        <span class="keyword">if</span> (mRestartingServices.remove(r)) &#123;</span><br><span class="line">            r.resetRestartCounter();</span><br><span class="line">            clearRestartingIfNeededLocked(r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make sure this service is no longer considered delayed, we are starting it now.</span></span><br><span class="line">        <span class="keyword">if</span> (r.delayed) &#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) Slog.v(TAG_SERVICE, <span class="string">"REM FR DELAY LIST (bring up): "</span> + r);</span><br><span class="line">            getServiceMap(r.userId).mDelayedStartList.remove(r);</span><br><span class="line">            r.delayed = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make sure that the user who owns this service is started.  If not,</span></span><br><span class="line">        <span class="comment">// we don't want to allow it to run.</span></span><br><span class="line">        <span class="keyword">if</span> (mAm.mStartedUsers.get(r.userId) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            String msg = <span class="string">"Unable to launch app "</span></span><br><span class="line">                    + r.appInfo.packageName + <span class="string">"/"</span></span><br><span class="line">                    + r.appInfo.uid + <span class="string">" for service "</span></span><br><span class="line">                    + r.intent.getIntent() + <span class="string">": user "</span> + r.userId + <span class="string">" is stopped"</span>;</span><br><span class="line">            Slog.w(TAG, msg);</span><br><span class="line">            bringDownServiceLocked(r);</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Service is now being launched, its package can't be stopped.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            AppGlobals.getPackageManager().setPackageStoppedState(</span><br><span class="line">                    r.packageName, <span class="keyword">false</span>, r.userId);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">            Slog.w(TAG, <span class="string">"Failed trying to unstop package "</span></span><br><span class="line">                    + r.packageName + <span class="string">": "</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="comment">//check wehther to make an isolated process</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> isolated = (r.serviceInfo.flags&amp;ServiceInfo.FLAG_ISOLATED_PROCESS) != <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">final</span> String procName = r.processName;</span><br><span class="line">        ProcessRecord app;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isolated) &#123;</span><br><span class="line">            app = mAm.getProcessRecordLocked(procName, r.appInfo.uid, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (DEBUG_MU) Slog.v(TAG_MU, <span class="string">"bringUpServiceLocked: appInfo.uid="</span> + r.appInfo.uid</span><br><span class="line">                        + <span class="string">" app="</span> + app);</span><br><span class="line">            <span class="keyword">if</span> (app != <span class="keyword">null</span> &amp;&amp; app.thread != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    app.addPackage(r.appInfo.packageName, r.appInfo.versionCode, mAm.mProcessStats);</span><br><span class="line">                    realStartServiceLocked(r, app, execInFg);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (TransactionTooLargeException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> e;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                    Slog.w(TAG, <span class="string">"Exception when starting service "</span> + r.shortName, e);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// If a dead object exception was thrown -- fall through to</span></span><br><span class="line">                <span class="comment">// restart the application.</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// If this service runs in an isolated process, then each time</span></span><br><span class="line">            <span class="comment">// we call startProcessLocked() we will get a new isolated</span></span><br><span class="line">            <span class="comment">// process, starting another process if we are currently waiting</span></span><br><span class="line">            <span class="comment">// for a previous process to come up.  To deal with this, we store</span></span><br><span class="line">            <span class="comment">// in the service any current isolated process it is running in or</span></span><br><span class="line">            <span class="comment">// waiting to have come up.</span></span><br><span class="line">            app = r.isolatedProc;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Not running -- get it started, and enqueue this service record</span></span><br><span class="line">        <span class="comment">// to be executed when the app comes up.</span></span><br><span class="line">        <span class="keyword">if</span> (app == <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="comment">/**</span></span><br><span class="line"><span class="comment">       final ProcessRecord newProcessRecordLocked(ApplicationInfo info, String customProcess,</span></span><br><span class="line"><span class="comment">            boolean isolated, int isolatedUid) &#123;</span></span><br><span class="line"><span class="comment">        String proc = customProcess != null ? customProcess : info.processName;</span></span><br><span class="line"><span class="comment">        BatteryStatsImpl stats = mBatteryStatsService.getActiveStatistics();</span></span><br><span class="line"><span class="comment">        final int userId = UserHandle.getUserId(info.uid);</span></span><br><span class="line"><span class="comment">        int uid = info.uid;</span></span><br><span class="line"><span class="comment">        //here is the difference</span></span><br><span class="line"><span class="comment">        if (isolated) &#123;</span></span><br><span class="line"><span class="comment">            if (isolatedUid == 0) &#123;</span></span><br><span class="line"><span class="comment">                int stepsLeft = Process.LAST_ISOLATED_UID - Process.FIRST_ISOLATED_UID + 1;</span></span><br><span class="line"><span class="comment">                while (true) &#123;</span></span><br><span class="line"><span class="comment">                    if (mNextIsolatedProcessUid &lt; Process.FIRST_ISOLATED_UID</span></span><br><span class="line"><span class="comment">                            || mNextIsolatedProcessUid &gt; Process.LAST_ISOLATED_UID) &#123;</span></span><br><span class="line"><span class="comment">                        mNextIsolatedProcessUid = Process.FIRST_ISOLATED_UID;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    uid = UserHandle.getUid(userId, mNextIsolatedProcessUid);</span></span><br><span class="line"><span class="comment">                    mNextIsolatedProcessUid++;</span></span><br><span class="line"><span class="comment">                    if (mIsolatedProcesses.indexOfKey(uid) &lt; 0) &#123;</span></span><br><span class="line"><span class="comment">                        // No process for this uid, use it.</span></span><br><span class="line"><span class="comment">                        break;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    stepsLeft--;</span></span><br><span class="line"><span class="comment">                    if (stepsLeft &lt;= 0) &#123;</span></span><br><span class="line"><span class="comment">                        return null;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                // Special case for startIsolatedProcess (internal only), where</span></span><br><span class="line"><span class="comment">                // the uid of the isolated process is specified by the caller.</span></span><br><span class="line"><span class="comment">                uid = isolatedUid;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            ......</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">          **/</span></span><br><span class="line">            <span class="keyword">if</span> ((app=mAm.startProcessLocked(procName, r.appInfo, <span class="keyword">true</span>, intentFlags,</span><br><span class="line">                    <span class="string">"service"</span>, r.name, <span class="keyword">false</span>, isolated, <span class="keyword">false</span>)) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                String msg = <span class="string">"Unable to launch app "</span></span><br><span class="line">                        + r.appInfo.packageName + <span class="string">"/"</span></span><br><span class="line">                        + r.appInfo.uid + <span class="string">" for service "</span></span><br><span class="line">                        + r.intent.getIntent() + <span class="string">": process is bad"</span>;</span><br><span class="line">                Slog.w(TAG, msg);</span><br><span class="line">                bringDownServiceLocked(r);</span><br><span class="line">                <span class="keyword">return</span> msg;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isolated) &#123;</span><br><span class="line">                r.isolatedProc = app;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!mPendingServices.contains(r)) &#123;</span><br><span class="line">            mPendingServices.add(r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r.delayedStop) &#123;</span><br><span class="line">            <span class="comment">// Oh and hey we've already been asked to stop!</span></span><br><span class="line">            r.delayedStop = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (r.startRequested) &#123;</span><br><span class="line">                <span class="keyword">if</span> (DEBUG_DELAYED_STARTS) Slog.v(TAG_SERVICE,</span><br><span class="line">                        <span class="string">"Applying delayed stop (in bring up): "</span> + r);</span><br><span class="line">                stopServiceLocked(r);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="CreateService"><a href="#CreateService" class="headerlink" title="CreateService"></a>CreateService</h2><h3 id="时序图-1"><a href="#时序图-1" class="headerlink" title="时序图"></a>时序图</h3><p><img src="/images/Service_Create.png" alt="Service_Create"></p><h3 id="核心代码-1"><a href="#核心代码-1" class="headerlink" title="核心代码"></a>核心代码</h3><h4 id="handleCreateService"><a href="#handleCreateService" class="headerlink" title="handleCreateService"></a>handleCreateService</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleCreateService</span><span class="params">(CreateServiceData data)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// If we are getting ready to gc after going to the background, well</span></span><br><span class="line">    <span class="comment">// we are back active so skip it.</span></span><br><span class="line">    unscheduleGcIdler();</span><br><span class="line"></span><br><span class="line">    LoadedApk packageInfo = getPackageInfoNoCheck(</span><br><span class="line">            data.info.applicationInfo, data.compatInfo);</span><br><span class="line">    Service service = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        java.lang.ClassLoader cl = packageInfo.getClassLoader();</span><br><span class="line">        service = (Service) cl.loadClass(data.info.name).newInstance();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mInstrumentation.onException(service, e)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                <span class="string">"Unable to instantiate service "</span> + data.info.name</span><br><span class="line">                + <span class="string">": "</span> + e.toString(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (localLOGV) Slog.v(TAG, <span class="string">"Creating service "</span> + data.info.name);</span><br><span class="line"></span><br><span class="line">        ContextImpl context = ContextImpl.createAppContext(<span class="keyword">this</span>, packageInfo);</span><br><span class="line">        context.setOuterContext(service);</span><br><span class="line"></span><br><span class="line">        Application app = packageInfo.makeApplication(<span class="keyword">false</span>, mInstrumentation);</span><br><span class="line">        service.attach(context, <span class="keyword">this</span>, data.info.name, data.token, app,</span><br><span class="line">                ActivityManagerNative.getDefault());</span><br><span class="line">        service.onCreate();</span><br><span class="line">        mServices.put(data.token, service);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// notify the ams service has been created.</span></span><br><span class="line">            ActivityManagerNative.getDefault().serviceDoneExecuting(</span><br><span class="line">                    data.token, SERVICE_DONE_EXECUTING_ANON, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            <span class="comment">// nothing to do.</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mInstrumentation.onException(service, e)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                <span class="string">"Unable to create service "</span> + data.info.name</span><br><span class="line">                + <span class="string">": "</span> + e.toString(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BindService"><a href="#BindService" class="headerlink" title="BindService"></a>BindService</h2><h3 id="时序图-2"><a href="#时序图-2" class="headerlink" title="时序图"></a>时序图</h3><p><img src="/images/Service_Bind.png" alt="Service_Bind"></p><h3 id="核心代码-2"><a href="#核心代码-2" class="headerlink" title="核心代码"></a>核心代码</h3><h4 id="publishServiceLocked"><a href="#publishServiceLocked" class="headerlink" title="publishServiceLocked"></a>publishServiceLocked</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">publishServiceLocked</span><span class="params">(ServiceRecord r, Intent intent, IBinder service)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">long</span> origId = Binder.clearCallingIdentity();</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">if</span> (DEBUG_SERVICE) Slog.v(TAG_SERVICE, <span class="string">"PUBLISHING "</span> + r</span><br><span class="line">                 + <span class="string">" "</span> + intent + <span class="string">": "</span> + service);</span><br><span class="line">         <span class="keyword">if</span> (r != <span class="keyword">null</span>) &#123;</span><br><span class="line">             Intent.FilterComparison filter</span><br><span class="line">                     = <span class="keyword">new</span> Intent.FilterComparison(intent);</span><br><span class="line">             IntentBindRecord b = r.bindings.get(filter);</span><br><span class="line">             <span class="keyword">if</span> (b != <span class="keyword">null</span> &amp;&amp; !b.received) &#123;</span><br><span class="line">                 b.binder = service;</span><br><span class="line">                 b.requested = <span class="keyword">true</span>;</span><br><span class="line">                 b.received = <span class="keyword">true</span>;</span><br><span class="line">                 <span class="keyword">for</span> (<span class="keyword">int</span> conni=r.connections.size()-<span class="number">1</span>; conni&gt;=<span class="number">0</span>; conni--) &#123;</span><br><span class="line">                     ArrayList&lt;ConnectionRecord&gt; clist = r.connections.valueAt(conni);</span><br><span class="line">                     <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;clist.size(); i++) &#123;</span><br><span class="line">                         ConnectionRecord c = clist.get(i);</span><br><span class="line">                         <span class="keyword">if</span> (!filter.equals(c.binding.intent.intent)) &#123;</span><br><span class="line">                             <span class="keyword">if</span> (DEBUG_SERVICE) Slog.v(</span><br><span class="line">                                     TAG_SERVICE, <span class="string">"Not publishing to: "</span> + c);</span><br><span class="line">                             <span class="keyword">if</span> (DEBUG_SERVICE) Slog.v(</span><br><span class="line">                                     TAG_SERVICE, <span class="string">"Bound intent: "</span> + c.binding.intent.intent);</span><br><span class="line">                             <span class="keyword">if</span> (DEBUG_SERVICE) Slog.v(</span><br><span class="line">                                     TAG_SERVICE, <span class="string">"Published intent: "</span> + intent);</span><br><span class="line">                             <span class="keyword">continue</span>;</span><br><span class="line">                         &#125;</span><br><span class="line">                         <span class="keyword">if</span> (DEBUG_SERVICE) Slog.v(TAG_SERVICE, <span class="string">"Publishing to: "</span> + c);</span><br><span class="line">                         <span class="keyword">try</span> &#123;</span><br><span class="line">                           <span class="comment">//c.conn -&gt; LoadedApk.ServiceDispatcher.InnerConnection</span></span><br><span class="line">                             c.conn.connected(r.name, service);</span><br><span class="line">                         &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                             Slog.w(TAG, <span class="string">"Failure sending service "</span> + r.name +</span><br><span class="line">                                   <span class="string">" to connection "</span> + c.conn.asBinder() +</span><br><span class="line">                                   <span class="string">" (in "</span> + c.binding.client.processName + <span class="string">")"</span>, e);</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             serviceDoneExecutingLocked(r, mDestroyingServices.contains(r), <span class="keyword">false</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">         Binder.restoreCallingIdentity(origId);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="doConnected"><a href="#doConnected" class="headerlink" title="doConnected"></a>doConnected</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">      </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">            ServiceDispatcher.ConnectionInfo old;</span><br><span class="line">            ServiceDispatcher.ConnectionInfo info;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mForgotten) &#123;</span><br><span class="line">                    <span class="comment">// We unbound before receiving the connection; ignore</span></span><br><span class="line">                    <span class="comment">// any connection received.</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                old = mActiveConnections.get(name);</span><br><span class="line">                <span class="keyword">if</span> (old != <span class="keyword">null</span> &amp;&amp; old.binder == service) &#123;</span><br><span class="line">                    <span class="comment">// Huh, already have this one.  Oh well!</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (service != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// A new service is being connected... set it all up.</span></span><br><span class="line">                    mDied = <span class="keyword">false</span>;</span><br><span class="line">                    info = <span class="keyword">new</span> ConnectionInfo();</span><br><span class="line">                    info.binder = service;</span><br><span class="line">                    info.deathMonitor = <span class="keyword">new</span> DeathMonitor(name, service);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        service.linkToDeath(info.deathMonitor, <span class="number">0</span>);</span><br><span class="line">                        mActiveConnections.put(name, info);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                        <span class="comment">// This service was dead before we got it...  just</span></span><br><span class="line">                        <span class="comment">// don't do anything with it.</span></span><br><span class="line">                        mActiveConnections.remove(name);</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// The named service is being disconnected... clean up.</span></span><br><span class="line">                    mActiveConnections.remove(name);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (old != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    old.binder.unlinkToDeath(old.deathMonitor, <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If there was an old service, it is not disconnected.</span></span><br><span class="line">            <span class="keyword">if</span> (old != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mConnection.onServiceDisconnected(name);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// If there is a new service, it is now connected.</span></span><br><span class="line">            <span class="keyword">if</span> (service != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mConnection.onServiceConnected(name, service);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><h3 id="为什么不直接用线程？"><a href="#为什么不直接用线程？" class="headerlink" title="为什么不直接用线程？"></a>为什么不直接用线程？</h3><ol><li>Service属于后台服务,独立与Activity,可以认为后者属于前台服务。在这样的界定下,不论Activity是被销毁或者被关闭,只要对应进程还在,Service就还在，这一点是Thread所达不到的。</li><li>可以通过process=”:remote”新建独立进程.</li><li>可以实现在多Activity之间共享服务数据.</li></ol><h3 id="多应用如何共享一个服务？"><a href="#多应用如何共享一个服务？" class="headerlink" title="多应用如何共享一个服务？"></a>多应用如何共享一个服务？</h3><ol><li>隐式的声明服务端的Intent。</li><li>将服务端的iadl文件,保留包路径的方式拷贝到自己的工程中。</li><li>在onServiceConnected的回调中生成远端Service实例,从而调用服务的接口。</li></ol><h3 id="如何提高服务的优先级，防止被杀？"><a href="#如何提高服务的优先级，防止被杀？" class="headerlink" title="如何提高服务的优先级，防止被杀？"></a>如何提高服务的优先级，防止被杀？</h3><p>​     内存不足的时候,Android会回收一些后台应用;所以Service中提供了</p><p>startForeground(int id, Notification notification)类似的方法,使得将后台应用</p><p>关闭的权利交给用户.利用类似后台更新前台ui的方式，可以提高服务的优先级。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;StartService&quot;&gt;&lt;a href=&quot;#StartService&quot; class=&quot;headerlink&quot; title=&quot;StartService&quot;&gt;&lt;/a&gt;StartService&lt;/h2&gt;&lt;h3 id=&quot;时序图&quot;&gt;&lt;a href=&quot;#时序图&quot; class
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>StatusBar源码解读</title>
    <link href="http://jinjian.info/2017/11/18/statusBar%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/11/18/statusBar源码解读/</id>
    <published>2017-11-17T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>​      状态栏属于SystemUI的管理范畴,虽然app界面的UI会受到SystemUI的影响，但是app并没有权限去直接绘制SystemUI的权限.所以还是需要通过更改一些SystemUI暴露出来的方法进行属性的修改,然后最终操纵的还是自己的View,来达到预期的效果</p><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><h3 id="StatusBarWindowView-java"><a href="#StatusBarWindowView-java" class="headerlink" title="StatusBarWindowView.java"></a>StatusBarWindowView.java</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- StatusBar的最外层--&gt;</span><br><span class="line"></span><br><span class="line">&lt;com.android.systemui.statusbar.phone.StatusBarWindowView</span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:systemui=<span class="string">"http://schemas.android.com/apk/res/com.android.systemui"</span></span><br><span class="line">    android:focusable=<span class="string">"true"</span></span><br><span class="line">    android:descendantFocusability=<span class="string">"afterDescendants"</span></span><br><span class="line">    android:fitsSystemWindows=<span class="string">"true"</span></span><br><span class="line">    android:background=<span class="string">"@android:color/transparent"</span></span><br><span class="line">    &gt;</span><br><span class="line">&lt;!--状态栏通常的显示状态--&gt;</span><br><span class="line">    &lt;include layout=<span class="string">"@layout/status_bar"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"@*android:dimen/status_bar_height"</span></span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--状态栏下拉展开状态--&gt;</span><br><span class="line">    &lt;com.android.systemui.statusbar.phone.PanelHolder</span><br><span class="line">        android:id=<span class="string">"@+id/panel_holder"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;include layout=<span class="string">"@layout/status_bar_expanded"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">            /&gt;</span><br><span class="line">        &lt;ViewStub android:id=<span class="string">"@+id/quick_settings_stub"</span></span><br><span class="line">            android:layout=<span class="string">"@layout/quick_settings"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">            /&gt;</span><br><span class="line">    &lt;/com.android.systemui.statusbar.phone.PanelHolder&gt;</span><br><span class="line"></span><br><span class="line">&lt;/com.android.systemui.statusbar.phone.StatusBarWindowView&gt;</span><br></pre></td></tr></table></figure><h3 id="PhoneStatusBarView-java"><a href="#PhoneStatusBarView-java" class="headerlink" title="PhoneStatusBarView.java"></a>PhoneStatusBarView.java</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--对应<span class="meta">@layout</span>/status_bar,是StatusBar的核心功能展示部分--&gt;</span><br><span class="line">  </span><br><span class="line">&lt;com.android.systemui.statusbar.phone.PhoneStatusBarView</span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:systemui=<span class="string">"http://schemas.android.com/apk/res/com.android.systemui"</span></span><br><span class="line">    android:id=<span class="string">"@+id/status_bar"</span></span><br><span class="line">    android:background=<span class="string">"@drawable/system_bar_background"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:focusable=<span class="string">"true"</span></span><br><span class="line">    android:descendantFocusability=<span class="string">"afterDescendants"</span></span><br><span class="line">    android:fitsSystemWindows=<span class="string">"true"</span></span><br><span class="line">    &gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">"@+id/notification_lights_out"</span></span><br><span class="line">        android:layout_width=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        android:paddingStart=<span class="string">"6dip"</span></span><br><span class="line">        android:paddingBottom=<span class="string">"2dip"</span></span><br><span class="line">        android:src=<span class="string">"@drawable/ic_sysbar_lights_out_dot_small"</span></span><br><span class="line">        android:scaleType=<span class="string">"center"</span></span><br><span class="line">        android:visibility=<span class="string">"gone"</span></span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 通常StatusBar的显示样式--&gt;</span><br><span class="line">    &lt;LinearLayout android:id=<span class="string">"@+id/status_bar_contents"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        android:paddingStart=<span class="string">"6dip"</span></span><br><span class="line">        android:paddingEnd=<span class="string">"6dip"</span></span><br><span class="line">        android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">        &gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:id=<span class="string">"@+id/notification_icon_area"</span></span><br><span class="line">            android:layout_width=<span class="string">"0dip"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_weight=<span class="string">"1"</span></span><br><span class="line">            android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">            &gt;</span><br><span class="line">            &lt;com.android.systemui.statusbar.StatusBarIconView android:id=<span class="string">"@+id/moreIcon"</span></span><br><span class="line">                android:layout_width=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:src=<span class="string">"@drawable/stat_notify_more"</span></span><br><span class="line">                android:visibility=<span class="string">"gone"</span></span><br><span class="line">                /&gt;</span><br><span class="line"></span><br><span class="line">            &lt;com.android.systemui.statusbar.phone.IconMerger android:id=<span class="string">"@+id/notificationIcons"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_alignParentStart=<span class="string">"true"</span></span><br><span class="line">                android:gravity=<span class="string">"center_vertical"</span></span><br><span class="line">                android:orientation=<span class="string">"horizontal"</span>/&gt;  </span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout android:id=<span class="string">"@+id/system_icon_area"</span></span><br><span class="line">            android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">            android:orientation=<span class="string">"horizontal"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;LinearLayout android:id=<span class="string">"@+id/statusIcons"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:gravity=<span class="string">"center_vertical"</span></span><br><span class="line">                android:orientation=<span class="string">"horizontal"</span>/&gt;    </span><br><span class="line">    </span><br><span class="line">            &lt;LinearLayout</span><br><span class="line">                android:id=<span class="string">"@+id/signal_battery_cluster"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:paddingStart=<span class="string">"2dp"</span></span><br><span class="line">                android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">                android:gravity=<span class="string">"center"</span></span><br><span class="line">                &gt;</span><br><span class="line">                &lt;include layout=<span class="string">"@layout/signal_cluster_view"</span> </span><br><span class="line">                    android:id=<span class="string">"@+id/signal_cluster"</span></span><br><span class="line">                    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                    /&gt;</span><br><span class="line">                &lt;!-- battery must be padded below to match assets --&gt;</span><br><span class="line">                &lt;com.android.systemui.BatteryMeterView</span><br><span class="line">                    android:id=<span class="string">"@+id/battery"</span></span><br><span class="line">                    android:layout_height=<span class="string">"16dp"</span></span><br><span class="line">                    android:layout_width=<span class="string">"10.5dp"</span></span><br><span class="line">                    android:layout_marginBottom=<span class="string">"0.33dp"</span></span><br><span class="line">                    android:layout_marginStart=<span class="string">"4dip"</span></span><br><span class="line">                    /&gt;</span><br><span class="line">            &lt;/LinearLayout&gt;</span><br><span class="line">    </span><br><span class="line">            &lt;com.android.systemui.statusbar.policy.Clock</span><br><span class="line">                android:id=<span class="string">"@+id/clock"</span></span><br><span class="line">                android:textAppearance=<span class="string">"@style/TextAppearance.StatusBar.Clock"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:singleLine=<span class="string">"true"</span></span><br><span class="line">                android:paddingStart=<span class="string">"6dip"</span></span><br><span class="line">                android:gravity=<span class="string">"center_vertical|start"</span></span><br><span class="line">                /&gt;</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;!--当有notification到达的时候显示的样式--&gt;</span><br><span class="line">    &lt;LinearLayout android:id=<span class="string">"@+id/ticker"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        android:paddingStart=<span class="string">"6dip"</span></span><br><span class="line">        android:animationCache=<span class="string">"false"</span></span><br><span class="line">        android:orientation=<span class="string">"horizontal"</span> &gt;</span><br><span class="line">        &lt;ImageSwitcher android:id=<span class="string">"@+id/tickerIcon"</span></span><br><span class="line">            android:layout_width=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">            android:layout_height=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">            android:layout_marginEnd=<span class="string">"4dip"</span></span><br><span class="line">            &gt;</span><br><span class="line">            &lt;com.android.systemui.statusbar.AnimatedImageView</span><br><span class="line">                android:layout_width=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">                android:layout_height=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">                android:scaleType=<span class="string">"center"</span></span><br><span class="line">                /&gt;</span><br><span class="line">            &lt;com.android.systemui.statusbar.AnimatedImageView</span><br><span class="line">                android:layout_width=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">                android:layout_height=<span class="string">"@dimen/status_bar_icon_size"</span></span><br><span class="line">                android:scaleType=<span class="string">"center"</span></span><br><span class="line">                /&gt;</span><br><span class="line">        &lt;/ImageSwitcher&gt;</span><br><span class="line">        &lt;com.android.systemui.statusbar.phone.TickerView android:id=<span class="string">"@+id/tickerText"</span></span><br><span class="line">            android:layout_width=<span class="string">"0dip"</span></span><br><span class="line">            android:layout_weight=<span class="string">"1"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:paddingTop=<span class="string">"2dip"</span></span><br><span class="line">            android:paddingEnd=<span class="string">"10dip"</span>&gt;</span><br><span class="line">            &lt;TextView</span><br><span class="line">                android:textAppearance=<span class="string">"@style/TextAppearance.StatusBar.PhoneTicker"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                android:singleLine=<span class="string">"true"</span></span><br><span class="line">                /&gt;</span><br><span class="line">            &lt;TextView</span><br><span class="line">                android:textAppearance=<span class="string">"@style/TextAppearance.StatusBar.PhoneTicker"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                android:singleLine=<span class="string">"true"</span></span><br><span class="line">                /&gt;</span><br><span class="line">        &lt;/com.android.systemui.statusbar.phone.TickerView&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/com.android.systemui.statusbar.phone.PhoneStatusBarView&gt;</span><br></pre></td></tr></table></figure><h3 id="PhoneStatusBar"><a href="#PhoneStatusBar" class="headerlink" title="PhoneStatusBar"></a>PhoneStatusBar</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//as a View Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PhoneStatusBar</span> <span class="keyword">extends</span> <span class="title">BaseStatusBar</span> <span class="keyword">implements</span> <span class="title">DemoMode</span>,</span></span><br><span class="line"><span class="class">        <span class="title">DragDownHelper</span>.<span class="title">DragDownCallback</span>, <span class="title">ActivityStarter</span>, <span class="title">OnUnlockMethodChangedListener</span>,</span></span><br><span class="line"><span class="class">        <span class="title">HeadsUpManager</span>.<span class="title">OnHeadsUpChangedListener</span> </span>&#123;</span><br><span class="line">        <span class="comment">//......</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="沉浸式属性"><a href="#沉浸式属性" class="headerlink" title="沉浸式属性"></a>沉浸式属性</h2><h3 id="android-windowTranslucentStatus"><a href="#android-windowTranslucentStatus" class="headerlink" title="android:windowTranslucentStatus"></a>android:windowTranslucentStatus</h3><ul><li>目的:设置SystemUI中的statusBar的背景色为透明</li><li>ApiLevel: Android 4.4/ApiLevel 19</li></ul><h3 id="android-windowTranslucentNavigation"><a href="#android-windowTranslucentNavigation" class="headerlink" title="android:windowTranslucentNavigation"></a>android:windowTranslucentNavigation</h3><ul><li>目的:设置SystemUI中的Navigation背景为透明</li><li>ApiLevel:Android 4.4/ApiLevel 19</li></ul><h3 id="android-statusBarColor"><a href="#android-statusBarColor" class="headerlink" title="android:statusBarColor"></a>android:statusBarColor</h3><ul><li>目的:暴露接口设置statueBar的颜色</li><li>ApiLevel:Android 5.x/ApiLevel 21</li></ul><h3 id="android-fitsSystemWindows-”true”"><a href="#android-fitsSystemWindows-”true”" class="headerlink" title="android:fitsSystemWindows=”true”"></a>android:fitsSystemWindows=”true”</h3><ul><li>目的:和systemUI和谐共处,所以不会占用systemUI空间,用上下左右的padding值进行填充,以保持和SystemUi和谐共处.</li></ul><h3 id="android-clipToPadding-”true”"><a href="#android-clipToPadding-”true”" class="headerlink" title="android:clipToPadding=”true”"></a>android:clipToPadding=”true”</h3><ul><li>目的:和padding值交集的部分是否采用clip的显示方式</li></ul><h2 id="显示流程"><a href="#显示流程" class="headerlink" title="显示流程"></a>显示流程</h2><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><p>通过Zygote启动SystemServer最终启动SystemUIServer</p><p><img src="/images/StatusBar_Init.png" alt="StatusBar_Init"></p><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><h4 id="BaseStatusBar-start"><a href="#BaseStatusBar-start" class="headerlink" title="BaseStatusBar.start()"></a>BaseStatusBar.start()</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.register systerm bar manager service</span></span><br><span class="line"><span class="comment"> * 2.createAndAddWindows() install views/  PhoneStatusBar makeStatusBarView</span></span><br><span class="line"><span class="comment"> * 3.addIcon List</span></span><br><span class="line"><span class="comment"> * 4.register notifcation</span></span><br><span class="line"><span class="comment"> * 5.register broadcast</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mWindowManager = (WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line">    mWindowManagerService = WindowManagerGlobal.getWindowManagerService();</span><br><span class="line">    mDisplay = mWindowManager.getDefaultDisplay();</span><br><span class="line">    mDevicePolicyManager = (DevicePolicyManager)mContext.getSystemService(</span><br><span class="line">            Context.DEVICE_POLICY_SERVICE);</span><br><span class="line">  <span class="comment">//step 1</span></span><br><span class="line">    mNotificationColorUtil = NotificationColorUtil.getInstance(mContext);</span><br><span class="line"></span><br><span class="line">    mNotificationData = <span class="keyword">new</span> NotificationData(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    mAccessibilityManager = (AccessibilityManager)</span><br><span class="line">            mContext.getSystemService(Context.ACCESSIBILITY_SERVICE);</span><br><span class="line"></span><br><span class="line">    mDreamManager = IDreamManager.Stub.asInterface(</span><br><span class="line">            ServiceManager.checkService(DreamService.DREAM_SERVICE));</span><br><span class="line">    mPowerManager = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);</span><br><span class="line"></span><br><span class="line">    mContext.getContentResolver().registerContentObserver(</span><br><span class="line">            Settings.Global.getUriFor(Settings.Global.DEVICE_PROVISIONED), <span class="keyword">true</span>,</span><br><span class="line">            mSettingsObserver);</span><br><span class="line">    mContext.getContentResolver().registerContentObserver(</span><br><span class="line">            Settings.Global.getUriFor(Settings.Global.ZEN_MODE), <span class="keyword">false</span>,</span><br><span class="line">            mSettingsObserver);</span><br><span class="line">    mContext.getContentResolver().registerContentObserver(</span><br><span class="line">            Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_SHOW_NOTIFICATIONS), <span class="keyword">false</span>,</span><br><span class="line">            mSettingsObserver,</span><br><span class="line">            UserHandle.USER_ALL);</span><br><span class="line"></span><br><span class="line">    mContext.getContentResolver().registerContentObserver(</span><br><span class="line">            Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_ALLOW_PRIVATE_NOTIFICATIONS),</span><br><span class="line">            <span class="keyword">true</span>,</span><br><span class="line">            mLockscreenSettingsObserver,</span><br><span class="line">            UserHandle.USER_ALL);</span><br><span class="line"></span><br><span class="line">    mBarService = IStatusBarService.Stub.asInterface(</span><br><span class="line">            ServiceManager.getService(Context.STATUS_BAR_SERVICE));</span><br><span class="line"></span><br><span class="line">    mRecents = getComponent(Recents.class);</span><br><span class="line">    mRecents.setCallback(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Configuration currentConfig = mContext.getResources().getConfiguration();</span><br><span class="line">    mLocale = currentConfig.locale;</span><br><span class="line">    mLayoutDirection = TextUtils.getLayoutDirectionFromLocale(mLocale);</span><br><span class="line">    mFontScale = currentConfig.fontScale;</span><br><span class="line"></span><br><span class="line">    mUserManager = (UserManager) mContext.getSystemService(Context.USER_SERVICE);</span><br><span class="line"></span><br><span class="line">    mLinearOutSlowIn = AnimationUtils.loadInterpolator(mContext,</span><br><span class="line">            android.R.interpolator.linear_out_slow_in);</span><br><span class="line">    mFastOutLinearIn = AnimationUtils.loadInterpolator(mContext,</span><br><span class="line">            android.R.interpolator.fast_out_linear_in);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Connect in to the status bar manager service</span></span><br><span class="line">    StatusBarIconList iconList = <span class="keyword">new</span> StatusBarIconList();</span><br><span class="line">    mCommandQueue = <span class="keyword">new</span> CommandQueue(<span class="keyword">this</span>, iconList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] switches = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">8</span>];</span><br><span class="line">    ArrayList&lt;IBinder&gt; binders = <span class="keyword">new</span> ArrayList&lt;IBinder&gt;();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        mBarService.registerStatusBar(mCommandQueue, iconList, switches, binders);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException ex) &#123;</span><br><span class="line">        <span class="comment">// If the system process isn't there we're doomed anyway.</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">//step 2 </span></span><br><span class="line">    createAndAddWindows();</span><br><span class="line"></span><br><span class="line">    mSettingsObserver.onChange(<span class="keyword">false</span>); <span class="comment">// set up</span></span><br><span class="line">    disable(switches[<span class="number">0</span>], switches[<span class="number">6</span>], <span class="keyword">false</span> <span class="comment">/* animate */</span>);</span><br><span class="line">    setSystemUiVisibility(switches[<span class="number">1</span>], <span class="number">0xffffffff</span>);</span><br><span class="line">    topAppWindowChanged(switches[<span class="number">2</span>] != <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// StatusBarManagerService has a back up of IME token and it's restored here.</span></span><br><span class="line">    setImeWindowStatus(binders.get(<span class="number">0</span>), switches[<span class="number">3</span>], switches[<span class="number">4</span>], switches[<span class="number">5</span>] != <span class="number">0</span>);</span><br><span class="line">  <span class="comment">//step 3</span></span><br><span class="line">    <span class="comment">// Set up the initial icon state</span></span><br><span class="line">    <span class="keyword">int</span> N = iconList.size();</span><br><span class="line">    <span class="keyword">int</span> viewIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;N; i++) &#123;</span><br><span class="line">        StatusBarIcon icon = iconList.getIcon(i);</span><br><span class="line">        <span class="keyword">if</span> (icon != <span class="keyword">null</span>) &#123;</span><br><span class="line">            addIcon(iconList.getSlot(i), i, viewIndex, icon);</span><br><span class="line">            viewIndex++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">//step 4</span></span><br><span class="line">    <span class="comment">// Set up the initial notification state.</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        mNotificationListener.registerAsSystemService(mContext,</span><br><span class="line">                <span class="keyword">new</span> ComponentName(mContext.getPackageName(), getClass().getCanonicalName()),</span><br><span class="line">                UserHandle.USER_ALL);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        Log.e(TAG, <span class="string">"Unable to register notification listener"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (DEBUG) &#123;</span><br><span class="line">        Log.d(TAG, String.format(</span><br><span class="line">                <span class="string">"init: icons=%d disabled=0x%08x lights=0x%08x menu=0x%08x imeButton=0x%08x"</span>,</span><br><span class="line">               iconList.size(),</span><br><span class="line">               switches[<span class="number">0</span>],</span><br><span class="line">               switches[<span class="number">1</span>],</span><br><span class="line">               switches[<span class="number">2</span>],</span><br><span class="line">               switches[<span class="number">3</span>]</span><br><span class="line">               ));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mCurrentUserId = ActivityManager.getCurrentUser();</span><br><span class="line">    setHeadsUpUser(mCurrentUserId);</span><br><span class="line">   <span class="comment">//step 5</span></span><br><span class="line">    IntentFilter filter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">    filter.addAction(Intent.ACTION_USER_SWITCHED);</span><br><span class="line">    filter.addAction(Intent.ACTION_USER_ADDED);</span><br><span class="line">    filter.addAction(Intent.ACTION_USER_PRESENT);</span><br><span class="line">    filter.addAction(BANNER_ACTION_CANCEL);</span><br><span class="line">    filter.addAction(BANNER_ACTION_SETUP);</span><br><span class="line">    mContext.registerReceiver(mBroadcastReceiver, filter);</span><br><span class="line"></span><br><span class="line">    IntentFilter allUsersFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">    allUsersFilter.addAction(</span><br><span class="line">            DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED);</span><br><span class="line">    mContext.registerReceiverAsUser(mAllUsersReceiver, UserHandle.ALL, allUsersFilter,</span><br><span class="line">            <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    updateCurrentProfilesCache();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="开源框架（SystemBarTint）"><a href="#开源框架（SystemBarTint）" class="headerlink" title="开源框架（SystemBarTint）"></a>开源框架（SystemBarTint）</h2><p>一个工具式的开源框架</p><h3 id="initBar"><a href="#initBar" class="headerlink" title="initBar"></a>initBar</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">1.make systemUI transparent</span></span><br><span class="line"><span class="comment">2.add View own at the same place and then you can control the performance of your own View</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SystemBarTintManager</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Window win = activity.getWindow();</span><br><span class="line">        ViewGroup decorViewGroup = (ViewGroup) win.getDecorView();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//android 4.4</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">            <span class="comment">// check theme attrs</span></span><br><span class="line">            <span class="keyword">int</span>[] attrs = &#123;android.R.attr.windowTranslucentStatus,</span><br><span class="line">                    android.R.attr.windowTranslucentNavigation&#125;;</span><br><span class="line">            TypedArray a = activity.obtainStyledAttributes(attrs);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mStatusBarAvailable = a.getBoolean(<span class="number">0</span>, <span class="keyword">false</span>);</span><br><span class="line">                mNavBarAvailable = a.getBoolean(<span class="number">1</span>, <span class="keyword">false</span>);</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                a.recycle();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// check window flags</span></span><br><span class="line">            WindowManager.LayoutParams winParams = win.getAttributes();</span><br><span class="line">            <span class="keyword">int</span> bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS;</span><br><span class="line">            <span class="keyword">if</span> ((winParams.flags &amp; bits) != <span class="number">0</span>) &#123;</span><br><span class="line">                mStatusBarAvailable = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            bits = WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION;</span><br><span class="line">            <span class="keyword">if</span> ((winParams.flags &amp; bits) != <span class="number">0</span>) &#123;</span><br><span class="line">                mNavBarAvailable = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mConfig = <span class="keyword">new</span> SystemBarConfig(activity, mStatusBarAvailable, mNavBarAvailable);</span><br><span class="line">        <span class="comment">// device might not have virtual navigation keys</span></span><br><span class="line">        <span class="keyword">if</span> (!mConfig.hasNavigtionBar()) &#123;</span><br><span class="line">            mNavBarAvailable = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mStatusBarAvailable) &#123;</span><br><span class="line">            setupStatusBarView(activity, decorViewGroup);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mNavBarAvailable) &#123;</span><br><span class="line">            setupNavBarView(activity, decorViewGroup);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="SystemBarConfig"><a href="#SystemBarConfig" class="headerlink" title="SystemBarConfig"></a>SystemBarConfig</h3><p>Class which describes system bar sizing and other characteristics for the current device configuration</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemBarConfig</span> </span>&#123;</span><br><span class="line">       <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> mTranslucentStatusBar;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> mTranslucentNavBar;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> mStatusBarHeight;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> mActionBarHeight;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> mHasNavigationBar;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> mNavigationBarHeight;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> mNavigationBarWidth;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> mInPortrait;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">float</span> mSmallestWidthDp;</span><br><span class="line">       <span class="comment">//......</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="setupStatusBarView-amp-amp-setStatusBarAlpha"><a href="#setupStatusBarView-amp-amp-setStatusBarAlpha" class="headerlink" title="setupStatusBarView&amp;&amp;setStatusBarAlpha"></a>setupStatusBarView&amp;&amp;setStatusBarAlpha</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupStatusBarView</span><span class="params">(Context context, ViewGroup decorViewGroup)</span> </span>&#123;</span><br><span class="line">    mStatusBarTintView = <span class="keyword">new</span> View(context);</span><br><span class="line">    LayoutParams params = <span class="keyword">new</span> LayoutParams(LayoutParams.MATCH_PARENT, mConfig.getStatusBarHeight());</span><br><span class="line">    params.gravity = Gravity.TOP;</span><br><span class="line">    <span class="keyword">if</span> (mNavBarAvailable &amp;&amp; !mConfig.isNavigationAtBottom()) &#123;</span><br><span class="line">        params.rightMargin = mConfig.getNavigationBarWidth();</span><br><span class="line">    &#125;</span><br><span class="line">    mStatusBarTintView.setLayoutParams(params);</span><br><span class="line">    mStatusBarTintView.setBackgroundColor(DEFAULT_TINT_COLOR);</span><br><span class="line">    mStatusBarTintView.setVisibility(View.GONE);</span><br><span class="line">    decorViewGroup.addView(mStatusBarTintView);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Apply the specified alpha to the system status bar.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> alpha The alpha to use</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TargetApi</span>(<span class="number">11</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatusBarAlpha</span><span class="params">(<span class="keyword">float</span> alpha)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mStatusBarAvailable &amp;&amp; Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) &#123;</span><br><span class="line">        mStatusBarTintView.setAlpha(alpha);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;​      状态栏属于SystemUI的管理范畴,虽然app界面的UI会受到SystemUI的影响，但是app并没有权限去直接绘制Syst
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>Broadcaster源码解读</title>
    <link href="http://jinjian.info/2017/11/11/Broadcaster%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/11/11/Broadcaster源码解读/</id>
    <published>2017-11-10T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注册广播"><a href="#注册广播" class="headerlink" title="注册广播"></a>注册广播</h2><h3 id="动态注册"><a href="#动态注册" class="headerlink" title="动态注册"></a>动态注册</h3><h4 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h4><p><img src="/images/BroadCaster_Register.png" alt="register"></p><h4 id="广播的存储"><a href="#广播的存储" class="headerlink" title="广播的存储"></a>广播的存储</h4><p><img src="/images/BroadCaster_How_TO.png" alt="BroadCaster_How_TO"></p><h3 id="静态注册"><a href="#静态注册" class="headerlink" title="静态注册"></a>静态注册</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  ResolveInfo has member ActivityInfo,witch</span></span><br><span class="line"><span class="comment"> The activity or broadcast receiver that corresponds to this resolution</span></span><br><span class="line"><span class="comment"> match, if this resolution is for an activity or broadcast receiver. </span></span><br><span class="line"><span class="comment"> **/</span> </span><br><span class="line">Route:</span><br><span class="line">ActivityManagerService collectReceiverComponents -&gt; </span><br><span class="line">PackageManagerService queryIntentReceivers:List&lt;ResolveInfo&gt;</span><br></pre></td></tr></table></figure><h2 id="发送广播"><a href="#发送广播" class="headerlink" title="发送广播"></a>发送广播</h2><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">context sendBroadcast-&gt; </span><br><span class="line">contextImpl sendBroadcast -&gt; </span><br><span class="line">ActivityManagerService broadcastIntent[src] -&gt; </span><br><span class="line">ActivityManagerService broadcastIntentLocked [src]-&gt; </span><br><span class="line">BroadcastQueue.scheduleBroadcastsLocked()-&gt;</span><br><span class="line">BroadcastQueue.processNextBroadcast -&gt;</span><br><span class="line">BroadcastQueue.deliverToRegisteredReceiverLocked-&gt;</span><br><span class="line">BroadcastQueue.performReceiveLocked -&gt; <span class="comment">//two ways </span></span><br><span class="line">app.thread.scheduleRegisteredReceiver(receiver, intent, resultCode,data, extras, ordered, sticky,    sendingUser, app.repProcState)[here app.thread = activityThread.ApplicationThread ; receiver =  LoadApk.IIntentReceiver receiver] -&gt;</span><br><span class="line">LoadApk.performReceive()-&gt;</span><br><span class="line">LoadApk.Args.run()-&gt;</span><br><span class="line">receiver.onReceive(mContext, intent)</span><br></pre></td></tr></table></figure><h3 id="broadcastIntent"><a href="#broadcastIntent" class="headerlink" title="broadcastIntent"></a>broadcastIntent</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * callingPid:// process indetify. </span></span><br><span class="line"><span class="comment"> * callingUid:// for indetify the same user ,use this id to read and write share datas cross     multify app;</span></span><br><span class="line"><span class="comment"> *             // if uid is same ,first your should use the same signature</span></span><br><span class="line"><span class="comment"> * -------------</span></span><br><span class="line"><span class="comment"> * pid simply used by if(pid == MY_PID)</span></span><br><span class="line"><span class="comment"> *  ------------</span></span><br><span class="line"><span class="comment"> * uid = userId * 100000  + appId</span></span><br><span class="line"><span class="comment"> * -------------</span></span><br><span class="line"><span class="comment"> * Relative Method:</span></span><br><span class="line"><span class="comment"> * isSameUser    比较两个uid的userId是否相同</span></span><br><span class="line"><span class="comment"> * isSameApp    比较两个uid的appId是否相同</span></span><br><span class="line"><span class="comment"> * isApp        appId是否属于区间[10000,19999]</span></span><br><span class="line"><span class="comment"> * isIsolated    appId是否属于区间[99000,99999]</span></span><br><span class="line"><span class="comment"> * getIdentifier获取UserHandle所对应的userId</span></span><br><span class="line"><span class="comment"> * -------------</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> caller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> intent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resolvedType</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resultTo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resultCode</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resultData</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resultExtras</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> requiredPermissions</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> appOp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> options</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> serialized</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sticky</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">broadcastIntent</span><span class="params">(IApplicationThread caller,</span></span></span><br><span class="line"><span class="function"><span class="params">        Intent intent, String resolvedType, IIntentReceiver resultTo,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> resultCode, String resultData, Bundle resultExtras,</span></span></span><br><span class="line"><span class="function"><span class="params">        String[] requiredPermissions, <span class="keyword">int</span> appOp, Bundle options,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">boolean</span> serialized, <span class="keyword">boolean</span> sticky, <span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">    enforceNotIsolatedCaller(<span class="string">"broadcastIntent"</span>);</span><br><span class="line">    <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">        intent = verifyBroadcastLocked(intent);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ProcessRecord callerApp = getRecordForAppLocked(caller);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> callingPid = Binder.getCallingPid();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> callingUid = Binder.getCallingUid();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">long</span> origId = Binder.clearCallingIdentity();</span><br><span class="line">        <span class="keyword">int</span> res = broadcastIntentLocked(callerApp,</span><br><span class="line">                callerApp != <span class="keyword">null</span> ? callerApp.info.packageName : <span class="keyword">null</span>,</span><br><span class="line">                intent, resolvedType, resultTo, resultCode, resultData, resultExtras,</span><br><span class="line">                requiredPermissions, appOp, <span class="keyword">null</span>, serialized, sticky,</span><br><span class="line">                callingPid, callingUid, userId);</span><br><span class="line">        Binder.restoreCallingIdentity(origId);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="broadcastIntentLocked"><a href="#broadcastIntentLocked" class="headerlink" title="broadcastIntentLocked"></a>broadcastIntentLocked</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Things to do:</span></span><br><span class="line"><span class="comment">     * 1.addFlags(Intent.FLAG_EXCLUDE_STOPPED_PACKAGES) protected the app which is not running even or kill the</span></span><br><span class="line"><span class="comment">     * process by user control</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 2.deal with protection () uid,phoneid or isProtectedBroadcast(eg:screen on ,screen off )</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 3.deal with package BroadCast(eg: remove ,add etc.) and systerm BroadCast (eg:Intent.ACTION_TIMEZONE_CHANGED )</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 4.update stick broadcast.record the broadcast if it is not start</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 5.queue.enqueueParallelBroadcastLocked(r);//add</span></span><br><span class="line"><span class="comment">     *   queue.scheduleBroadcastsLocked();//deliver[ruler comes into BroadcastQueue.processNextBroadcast()]</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callerApp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callerPackage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> intent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resolvedType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultTo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultCode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultData</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultExtras</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> requiredPermissions</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> appOp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> options</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ordered</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sticky</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callingPid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callingUid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">broadcastIntentLocked</span><span class="params">(ProcessRecord callerApp,</span></span></span><br><span class="line"><span class="function"><span class="params">            String callerPackage, Intent intent, String resolvedType,</span></span></span><br><span class="line"><span class="function"><span class="params">            IIntentReceiver resultTo, <span class="keyword">int</span> resultCode, String resultData,</span></span></span><br><span class="line"><span class="function"><span class="params">            Bundle resultExtras, String[] requiredPermissions, <span class="keyword">int</span> appOp, Bundle options,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">boolean</span> ordered, <span class="keyword">boolean</span> sticky, <span class="keyword">int</span> callingPid, <span class="keyword">int</span> callingUid, <span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">        intent = <span class="keyword">new</span> Intent(intent);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1.addFlags(Intent.FLAG_EXCLUDE_STOPPED_PACKAGES) protected the app which is not running  e ven or kill the process by user control</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment">// By default broadcasts do not go to stopped apps.</span></span><br><span class="line">        intent.addFlags(Intent.FLAG_EXCLUDE_STOPPED_PACKAGES);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If we have not finished booting, don't allow this to launch new processes.</span></span><br><span class="line">        <span class="keyword">if</span> (!mProcessesReady &amp;&amp; (intent.getFlags()&amp;Intent.FLAG_RECEIVER_BOOT_UPGRADE) == <span class="number">0</span>) &#123;</span><br><span class="line">            intent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (DEBUG_BROADCAST_LIGHT) Slog.v(TAG_BROADCAST,</span><br><span class="line">                (sticky ? <span class="string">"Broadcast sticky: "</span>: <span class="string">"Broadcast: "</span>) + intent</span><br><span class="line">                + <span class="string">" ordered="</span> + ordered + <span class="string">" userid="</span> + userId);</span><br><span class="line">        <span class="keyword">if</span> ((resultTo != <span class="keyword">null</span>) &amp;&amp; !ordered) &#123;</span><br><span class="line">            Slog.w(TAG, <span class="string">"Broadcast "</span> + intent + <span class="string">" not ordered but result callback requested!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        userId = handleIncomingUser(callingPid, callingUid, userId,</span><br><span class="line">                <span class="keyword">true</span>, ALLOW_NON_FULL, <span class="string">"broadcast"</span>, callerPackage);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make sure that the user who is receiving this broadcast is running.</span></span><br><span class="line">        <span class="comment">// If not, we will just skip it. Make an exception for shutdown broadcasts</span></span><br><span class="line">        <span class="comment">// and upgrade steps.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (userId != UserHandle.USER_ALL &amp;&amp; !isUserRunningLocked(userId, <span class="keyword">false</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((callingUid != Process.SYSTEM_UID</span><br><span class="line">                    || (intent.getFlags() &amp; Intent.FLAG_RECEIVER_BOOT_UPGRADE) == <span class="number">0</span>)</span><br><span class="line">                    &amp;&amp; !Intent.ACTION_SHUTDOWN.equals(intent.getAction())) &#123;</span><br><span class="line">                Slog.w(TAG, <span class="string">"Skipping broadcast of "</span> + intent</span><br><span class="line">                        + <span class="string">": user "</span> + userId + <span class="string">" is stopped"</span>);</span><br><span class="line">                <span class="keyword">return</span> ActivityManager.BROADCAST_FAILED_USER_STOPPED;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     <span class="comment">//2.deal with protection () uid,phoneid or isProtectedBroadcast(eg:screen on ,screen off )</span></span><br><span class="line">        BroadcastOptions brOptions = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (options != <span class="keyword">null</span>) &#123;</span><br><span class="line">            brOptions = <span class="keyword">new</span> BroadcastOptions(options);</span><br><span class="line">            <span class="keyword">if</span> (brOptions.getTemporaryAppWhitelistDuration() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// See if the caller is allowed to do this.  Note we are checking against</span></span><br><span class="line">                <span class="comment">// the actual real caller (not whoever provided the operation as say a</span></span><br><span class="line">                <span class="comment">// PendingIntent), because that who is actually supplied the arguments.</span></span><br><span class="line">                <span class="keyword">if</span> (checkComponentPermission(</span><br><span class="line">                        android.Manifest.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST,</span><br><span class="line">                        Binder.getCallingPid(), Binder.getCallingUid(), -<span class="number">1</span>, <span class="keyword">true</span>)</span><br><span class="line">                        != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    String msg = <span class="string">"Permission Denial: "</span> + intent.getAction()</span><br><span class="line">                            + <span class="string">" broadcast from "</span> + callerPackage + <span class="string">" (pid="</span> + callingPid</span><br><span class="line">                            + <span class="string">", uid="</span> + callingUid + <span class="string">")"</span></span><br><span class="line">                            + <span class="string">" requires "</span></span><br><span class="line">                            + android.Manifest.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST;</span><br><span class="line">                    Slog.w(TAG, msg);</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(msg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Prevent non-system code (defined here to be non-persistent</span></span><br><span class="line"><span class="comment">         * processes) from sending protected broadcasts.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> callingAppId = UserHandle.getAppId(callingUid);</span><br><span class="line">        <span class="keyword">if</span> (callingAppId == Process.SYSTEM_UID || callingAppId == Process.PHONE_UID</span><br><span class="line">            || callingAppId == Process.SHELL_UID || callingAppId == Process.BLUETOOTH_UID</span><br><span class="line">            || callingAppId == Process.NFC_UID || callingUid == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// Always okay.</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (callerApp == <span class="keyword">null</span> || !callerApp.persistent) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (AppGlobals.getPackageManager().isProtectedBroadcast(</span><br><span class="line">                        intent.getAction())) &#123;</span><br><span class="line">                    String msg = <span class="string">"Permission Denial: not allowed to send broadcast "</span></span><br><span class="line">                            + intent.getAction() + <span class="string">" from pid="</span></span><br><span class="line">                            + callingPid + <span class="string">", uid="</span> + callingUid;</span><br><span class="line">                    Slog.w(TAG, msg);</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(msg);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (AppWidgetManager.ACTION_APPWIDGET_CONFIGURE.equals(intent.getAction())) &#123;</span><br><span class="line">                    <span class="comment">// Special case for compatibility: we don't want apps to send this,</span></span><br><span class="line">                    <span class="comment">// but historically it has not been protected and apps may be using it</span></span><br><span class="line">                    <span class="comment">// to poke their own app widget.  So, instead of making it protected,</span></span><br><span class="line">                    <span class="comment">// just limit it to the caller.</span></span><br><span class="line">                    <span class="keyword">if</span> (callerApp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        String msg = <span class="string">"Permission Denial: not allowed to send broadcast "</span></span><br><span class="line">                                + intent.getAction() + <span class="string">" from unknown caller."</span>;</span><br><span class="line">                        Slog.w(TAG, msg);</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(msg);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (intent.getComponent() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// They are good enough to send to an explicit component...  verify</span></span><br><span class="line">                        <span class="comment">// it is being sent to the calling app.</span></span><br><span class="line">                        <span class="keyword">if</span> (!intent.getComponent().getPackageName().equals(</span><br><span class="line">                                callerApp.info.packageName)) &#123;</span><br><span class="line">                            String msg = <span class="string">"Permission Denial: not allowed to send broadcast "</span></span><br><span class="line">                                    + intent.getAction() + <span class="string">" to "</span></span><br><span class="line">                                    + intent.getComponent().getPackageName() + <span class="string">" from "</span></span><br><span class="line">                                    + callerApp.info.packageName;</span><br><span class="line">                            Slog.w(TAG, msg);</span><br><span class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(msg);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// Limit broadcast to their own package.</span></span><br><span class="line">                        intent.setPackage(callerApp.info.packageName);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                Slog.w(TAG, <span class="string">"Remote exception"</span>, e);</span><br><span class="line">                <span class="keyword">return</span> ActivityManager.BROADCAST_SUCCESS;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//3.deal with package BroadCast(eg: remove ,add etc.) and systerm BroadCast (eg:Intent.ACTION_TIMEZONE_CHANGED )</span></span><br><span class="line">        <span class="keyword">final</span> String action = intent.getAction();</span><br><span class="line">        <span class="keyword">if</span> (action != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_UID_REMOVED:</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_PACKAGE_REMOVED:</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_PACKAGE_CHANGED:</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE:</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE:</span><br><span class="line">                    <span class="comment">// Handle special intents: if this broadcast is from the package</span></span><br><span class="line">                    <span class="comment">// manager about a package being removed, we need to remove all of</span></span><br><span class="line">                    <span class="comment">// its activities from the history stack.</span></span><br><span class="line">                    <span class="keyword">if</span> (checkComponentPermission(</span><br><span class="line">                            android.Manifest.permission.BROADCAST_PACKAGE_REMOVED,</span><br><span class="line">                            callingPid, callingUid, -<span class="number">1</span>, <span class="keyword">true</span>)</span><br><span class="line">                            != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                        String msg = <span class="string">"Permission Denial: "</span> + intent.getAction()</span><br><span class="line">                                + <span class="string">" broadcast from "</span> + callerPackage + <span class="string">" (pid="</span> + callingPid</span><br><span class="line">                                + <span class="string">", uid="</span> + callingUid + <span class="string">")"</span></span><br><span class="line">                                + <span class="string">" requires "</span></span><br><span class="line">                                + android.Manifest.permission.BROADCAST_PACKAGE_REMOVED;</span><br><span class="line">                        Slog.w(TAG, msg);</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(msg);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">                        <span class="keyword">case</span> Intent.ACTION_UID_REMOVED:</span><br><span class="line">                            <span class="keyword">final</span> Bundle intentExtras = intent.getExtras();</span><br><span class="line">                            <span class="keyword">final</span> <span class="keyword">int</span> uid = intentExtras != <span class="keyword">null</span></span><br><span class="line">                                    ? intentExtras.getInt(Intent.EXTRA_UID) : -<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">if</span> (uid &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                                mBatteryStatsService.removeUid(uid);</span><br><span class="line">                                mAppOpsService.uidRemoved(uid);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> Intent.ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE:</span><br><span class="line">                            <span class="comment">// If resources are unavailable just force stop all those packages</span></span><br><span class="line">                            <span class="comment">// and flush the attribute cache as well.</span></span><br><span class="line">                            String list[] =</span><br><span class="line">                                    intent.getStringArrayExtra(Intent.EXTRA_CHANGED_PACKAGE_LIST);</span><br><span class="line">                            <span class="keyword">if</span> (list != <span class="keyword">null</span> &amp;&amp; list.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">                                    forceStopPackageLocked(list[i], -<span class="number">1</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">true</span>,</span><br><span class="line">                                            <span class="keyword">false</span>, <span class="keyword">false</span>, userId, <span class="string">"storage unmount"</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                                mRecentTasks.cleanupLocked(UserHandle.USER_ALL);</span><br><span class="line">                                sendPackageBroadcastLocked(</span><br><span class="line">                                        IApplicationThread.EXTERNAL_STORAGE_UNAVAILABLE, list,</span><br><span class="line">                                        userId);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> Intent.ACTION_EXTERNAL_APPLICATIONS_AVAILABLE:</span><br><span class="line">                            mRecentTasks.cleanupLocked(UserHandle.USER_ALL);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> Intent.ACTION_PACKAGE_REMOVED:</span><br><span class="line">                        <span class="keyword">case</span> Intent.ACTION_PACKAGE_CHANGED:</span><br><span class="line">                            Uri data = intent.getData();</span><br><span class="line">                            String ssp;</span><br><span class="line">                            <span class="keyword">if</span> (data != <span class="keyword">null</span> &amp;&amp; (ssp=data.getSchemeSpecificPart()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                                <span class="keyword">boolean</span> removed = Intent.ACTION_PACKAGE_REMOVED.equals(action);</span><br><span class="line">                                <span class="keyword">boolean</span> fullUninstall = removed &amp;&amp;</span><br><span class="line">                                        !intent.getBooleanExtra(Intent.EXTRA_REPLACING, <span class="keyword">false</span>);</span><br><span class="line">                                <span class="keyword">if</span> (!intent.getBooleanExtra(Intent.EXTRA_DONT_KILL_APP, <span class="keyword">false</span>)) &#123;</span><br><span class="line">                                    forceStopPackageLocked(ssp, UserHandle.getAppId(</span><br><span class="line">                                            intent.getIntExtra(Intent.EXTRA_UID, -<span class="number">1</span>)),</span><br><span class="line">                                            <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, fullUninstall, userId,</span><br><span class="line">                                            removed ? <span class="string">"pkg removed"</span> : <span class="string">"pkg changed"</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">if</span> (removed) &#123;</span><br><span class="line">                                    sendPackageBroadcastLocked(IApplicationThread.PACKAGE_REMOVED,</span><br><span class="line">                                            <span class="keyword">new</span> String[] &#123;ssp&#125;, userId);</span><br><span class="line">                                    <span class="keyword">if</span> (fullUninstall) &#123;</span><br><span class="line">                                        mAppOpsService.packageRemoved(</span><br><span class="line">                                                intent.getIntExtra(Intent.EXTRA_UID, -<span class="number">1</span>), ssp);</span><br><span class="line"></span><br><span class="line">                                        <span class="comment">// Remove all permissions granted from/to this package</span></span><br><span class="line">                                        removeUriPermissionsForPackageLocked(ssp, userId, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                                        removeTasksByPackageNameLocked(ssp, userId);</span><br><span class="line">                                        mBatteryStatsService.notePackageUninstalled(ssp);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    cleanupDisabledPackageComponentsLocked(ssp, userId,</span><br><span class="line">                                            intent.getStringArrayExtra(</span><br><span class="line">                                                    Intent.EXTRA_CHANGED_COMPONENT_NAME_LIST));</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_PACKAGE_ADDED:</span><br><span class="line">                    <span class="comment">// Special case for adding a package: by default turn on compatibility mode.</span></span><br><span class="line">                    Uri data = intent.getData();</span><br><span class="line">                    String ssp;</span><br><span class="line">                    <span class="keyword">if</span> (data != <span class="keyword">null</span> &amp;&amp; (ssp = data.getSchemeSpecificPart()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">final</span> <span class="keyword">boolean</span> replacing =</span><br><span class="line">                                intent.getBooleanExtra(Intent.EXTRA_REPLACING, <span class="keyword">false</span>);</span><br><span class="line">                        mCompatModePackages.handlePackageAddedLocked(ssp, replacing);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            ApplicationInfo ai = AppGlobals.getPackageManager().</span><br><span class="line">                                    getApplicationInfo(ssp, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                            mBatteryStatsService.notePackageInstalled(ssp,</span><br><span class="line">                                    ai != <span class="keyword">null</span> ? ai.versionCode : <span class="number">0</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_TIMEZONE_CHANGED:</span><br><span class="line">                    <span class="comment">// If this is the time zone changed action, queue up a message that will reset</span></span><br><span class="line">                    <span class="comment">// the timezone of all currently running processes. This message will get</span></span><br><span class="line">                    <span class="comment">// queued up before the broadcast happens.</span></span><br><span class="line">                    mHandler.sendEmptyMessage(UPDATE_TIME_ZONE);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_TIME_CHANGED:</span><br><span class="line">                    <span class="comment">// If the user set the time, let all running processes know.</span></span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> is24Hour =</span><br><span class="line">                            intent.getBooleanExtra(Intent.EXTRA_TIME_PREF_24_HOUR_FORMAT, <span class="keyword">false</span>) ? <span class="number">1</span></span><br><span class="line">                                    : <span class="number">0</span>;</span><br><span class="line">                    mHandler.sendMessage(mHandler.obtainMessage(UPDATE_TIME, is24Hour, <span class="number">0</span>));</span><br><span class="line">                    BatteryStatsImpl stats = mBatteryStatsService.getActiveStatistics();</span><br><span class="line">                    <span class="keyword">synchronized</span> (stats) &#123;</span><br><span class="line">                        stats.noteCurrentTimeChangedLocked();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Intent.ACTION_CLEAR_DNS_CACHE:</span><br><span class="line">                    mHandler.sendEmptyMessage(CLEAR_DNS_CACHE_MSG);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Proxy.PROXY_CHANGE_ACTION:</span><br><span class="line">                    ProxyInfo proxy = intent.getParcelableExtra(Proxy.EXTRA_PROXY_INFO);</span><br><span class="line">                    mHandler.sendMessage(mHandler.obtainMessage(UPDATE_HTTP_PROXY_MSG, proxy));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Add to the sticky list if requested.</span></span><br><span class="line">      <span class="comment">//4.update stick broadcast.record the broadcast if it is not start</span></span><br><span class="line">       <span class="comment">//.......</span></span><br><span class="line">        <span class="keyword">int</span>[] users;</span><br><span class="line">        <span class="keyword">if</span> (userId == UserHandle.USER_ALL) &#123;</span><br><span class="line">            <span class="comment">// Caller wants broadcast to go to all started users.</span></span><br><span class="line">            users = mStartedUserArray;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Caller wants broadcast to go to one specific user.</span></span><br><span class="line">            users = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;userId&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Figure out who all will receive this broadcast.</span></span><br><span class="line">        List receivers = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;BroadcastFilter&gt; registeredReceivers = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// Need to resolve the intent to interested receivers...</span></span><br><span class="line">        <span class="keyword">if</span> ((intent.getFlags()&amp;Intent.FLAG_RECEIVER_REGISTERED_ONLY)</span><br><span class="line">                 == <span class="number">0</span>) &#123;</span><br><span class="line">            receivers = collectReceiverComponents(intent, resolvedType, callingUid, users);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (intent.getComponent() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (userId == UserHandle.USER_ALL &amp;&amp; callingUid == Process.SHELL_UID) &#123;</span><br><span class="line">                <span class="comment">// Query one target user at a time, excluding shell-restricted users</span></span><br><span class="line">                UserManagerService ums = getUserManagerLocked();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; users.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (ums.hasUserRestriction(</span><br><span class="line">                            UserManager.DISALLOW_DEBUGGING_FEATURES, users[i])) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    List&lt;BroadcastFilter&gt; registeredReceiversForUser =</span><br><span class="line">                            mReceiverResolver.queryIntent(intent,</span><br><span class="line">                                    resolvedType, <span class="keyword">false</span>, users[i]);</span><br><span class="line">                    <span class="keyword">if</span> (registeredReceivers == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        registeredReceivers = registeredReceiversForUser;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (registeredReceiversForUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        registeredReceivers.addAll(registeredReceiversForUser);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                registeredReceivers = mReceiverResolver.queryIntent(intent,</span><br><span class="line">                        resolvedType, <span class="keyword">false</span>, userId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//5.delivery to broadcasteQueue</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> replacePending =</span><br><span class="line">                (intent.getFlags()&amp;Intent.FLAG_RECEIVER_REPLACE_PENDING) != <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (DEBUG_BROADCAST) Slog.v(TAG_BROADCAST, <span class="string">"Enqueing broadcast: "</span> + intent.getAction()</span><br><span class="line">                + <span class="string">" replacePending="</span> + replacePending);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> NR = registeredReceivers != <span class="keyword">null</span> ? registeredReceivers.size() : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!ordered &amp;&amp; NR &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// If we are not serializing this broadcast, then send the</span></span><br><span class="line">            <span class="comment">// registered receivers separately so they don't wait for the</span></span><br><span class="line">            <span class="comment">// components to be launched.</span></span><br><span class="line">            <span class="keyword">final</span> BroadcastQueue queue = broadcastQueueForIntent(intent);</span><br><span class="line">            BroadcastRecord r = <span class="keyword">new</span> BroadcastRecord(queue, intent, callerApp,</span><br><span class="line">                    callerPackage, callingPid, callingUid, resolvedType, requiredPermissions,</span><br><span class="line">                    appOp, brOptions, registeredReceivers, resultTo, resultCode, resultData,</span><br><span class="line">                    resultExtras, ordered, sticky, <span class="keyword">false</span>, userId);</span><br><span class="line">            <span class="keyword">if</span> (DEBUG_BROADCAST) Slog.v(TAG_BROADCAST, <span class="string">"Enqueueing parallel broadcast "</span> + r);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> replaced = replacePending &amp;&amp; queue.replaceParallelBroadcastLocked(r);</span><br><span class="line">            <span class="keyword">if</span> (!replaced) &#123;</span><br><span class="line">                queue.enqueueParallelBroadcastLocked(r);<span class="comment">// insert has native iiReceiverDispatch .</span></span><br><span class="line">                queue.scheduleBroadcastsLocked(); <span class="comment">//</span></span><br><span class="line">            &#125;</span><br><span class="line">            registeredReceivers = <span class="keyword">null</span>;</span><br><span class="line">            NR = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ActivityManager.BROADCAST_SUCCESS;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="performReceiveLocked"><a href="#performReceiveLocked" class="headerlink" title="performReceiveLocked"></a>performReceiveLocked</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">1. ActivityThread'ApplicationThread to wrok for the result</span></span><br><span class="line"><span class="comment">2. LoadApk.ReceiverDispatcher to wrok for the result</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">performReceiveLocked</span><span class="params">(ProcessRecord app, IIntentReceiver receiver,</span></span></span><br><span class="line"><span class="function"><span class="params">            Intent intent, <span class="keyword">int</span> resultCode, String data, Bundle extras,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">boolean</span> ordered, <span class="keyword">boolean</span> sticky, <span class="keyword">int</span> sendingUser)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        <span class="comment">// Send the intent to the receiver asynchronously using one-way binder calls.</span></span><br><span class="line">        <span class="keyword">if</span> (app != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (app.thread != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// If we have an app thread, do the call through that so it is</span></span><br><span class="line">                <span class="comment">// correctly ordered with other one-way calls.</span></span><br><span class="line">                app.thread.scheduleRegisteredReceiver(receiver, intent, resultCode,</span><br><span class="line">                        data, extras, ordered, sticky, sendingUser, app.repProcState);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Application has died. Receiver doesn't exist.</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RemoteException(<span class="string">"app.thread must not be null"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            receiver.performReceive(intent, resultCode, data, extras, ordered,</span><br><span class="line">                    sticky, sendingUser);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="LoadApk-ReceiverDispatcher-performReceive"><a href="#LoadApk-ReceiverDispatcher-performReceive" class="headerlink" title="LoadApk.ReceiverDispatcher:performReceive"></a>LoadApk.ReceiverDispatcher:performReceive</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">performReceive</span><span class="params">(Intent intent, <span class="keyword">int</span> resultCode, String data,</span></span></span><br><span class="line"><span class="function"><span class="params">        Bundle extras, <span class="keyword">boolean</span> ordered, <span class="keyword">boolean</span> sticky, <span class="keyword">int</span> sendingUser)</span> </span>&#123;</span><br><span class="line">    LoadedApk.ReceiverDispatcher rd = mDispatcher.get();</span><br><span class="line">    <span class="keyword">if</span> (ActivityThread.DEBUG_BROADCAST) &#123;</span><br><span class="line">        <span class="keyword">int</span> seq = intent.getIntExtra(<span class="string">"seq"</span>, -<span class="number">1</span>);</span><br><span class="line">        Slog.i(ActivityThread.TAG, <span class="string">"Receiving broadcast "</span> + intent.getAction() + <span class="string">" seq="</span> + seq</span><br><span class="line">                + <span class="string">" to "</span> + (rd != <span class="keyword">null</span> ? rd.mReceiver : <span class="keyword">null</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rd != <span class="keyword">null</span>) &#123;</span><br><span class="line">        rd.performReceive(intent, resultCode, data, extras,</span><br><span class="line">                ordered, sticky, sendingUser);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// The activity manager dispatched a broadcast to a registered</span></span><br><span class="line">        <span class="comment">// receiver in this process, but before it could be delivered the</span></span><br><span class="line">        <span class="comment">// receiver was unregistered.  Acknowledge the broadcast on its</span></span><br><span class="line">        <span class="comment">// behalf so that the system's broadcast sequence can continue.</span></span><br><span class="line">        <span class="keyword">if</span> (ActivityThread.DEBUG_BROADCAST) Slog.i(ActivityThread.TAG,</span><br><span class="line">                <span class="string">"Finishing broadcast to unregistered receiver"</span>);</span><br><span class="line">        IActivityManager mgr = ActivityManagerNative.getDefault();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (extras != <span class="keyword">null</span>) &#123;</span><br><span class="line">                extras.setAllowFds(<span class="keyword">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            mgr.finishReceiver(<span class="keyword">this</span>, resultCode, data, extras, <span class="keyword">false</span>, intent.getFlags());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            Slog.w(ActivityThread.TAG, <span class="string">"Couldn't finish broadcast to unregistered receiver"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LoadApk-ReceiverDispatcher-Args-run"><a href="#LoadApk-ReceiverDispatcher-Args-run" class="headerlink" title="LoadApk.ReceiverDispatcher.Args:run"></a>LoadApk.ReceiverDispatcher.Args:run</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> BroadcastReceiver receiver = mReceiver;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> ordered = mOrdered;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (ActivityThread.DEBUG_BROADCAST) &#123;</span><br><span class="line">            <span class="keyword">int</span> seq = mCurIntent.getIntExtra(<span class="string">"seq"</span>, -<span class="number">1</span>);</span><br><span class="line">            Slog.i(ActivityThread.TAG, <span class="string">"Dispatching broadcast "</span> + mCurIntent.getAction()</span><br><span class="line">                    + <span class="string">" seq="</span> + seq + <span class="string">" to "</span> + mReceiver);</span><br><span class="line">            Slog.i(ActivityThread.TAG, <span class="string">"  mRegistered="</span> + mRegistered</span><br><span class="line">                    + <span class="string">" mOrderedHint="</span> + ordered);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">final</span> IActivityManager mgr = ActivityManagerNative.getDefault();</span><br><span class="line">        <span class="keyword">final</span> Intent intent = mCurIntent;</span><br><span class="line">        mCurIntent = <span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (receiver == <span class="keyword">null</span> || mForgotten) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mRegistered &amp;&amp; ordered) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ActivityThread.DEBUG_BROADCAST) Slog.i(ActivityThread.TAG,</span><br><span class="line">                        <span class="string">"Finishing null broadcast to "</span> + mReceiver);</span><br><span class="line">                sendFinished(mgr);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, <span class="string">"broadcastReceiveReg"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ClassLoader cl =  mReceiver.getClass().getClassLoader();</span><br><span class="line">            intent.setExtrasClassLoader(cl);</span><br><span class="line">            setExtrasClassLoader(cl);</span><br><span class="line">            receiver.setPendingResult(<span class="keyword">this</span>);</span><br><span class="line">            receiver.onReceive(mContext, intent);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mRegistered &amp;&amp; ordered) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ActivityThread.DEBUG_BROADCAST) Slog.i(ActivityThread.TAG,</span><br><span class="line">                        <span class="string">"Finishing failed broadcast to "</span> + mReceiver);</span><br><span class="line">                sendFinished(mgr);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mInstrumentation == <span class="keyword">null</span> ||</span><br><span class="line">                    !mInstrumentation.onException(mReceiver, e)) &#123;</span><br><span class="line">                Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                    <span class="string">"Error receiving broadcast "</span> + intent</span><br><span class="line">                    + <span class="string">" in "</span> + mReceiver, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (receiver.getPendingResult() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            finish();</span><br><span class="line">        &#125;</span><br><span class="line">        Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全校验"><a href="#安全校验" class="headerlink" title="安全校验"></a>安全校验</h2><h3 id="等级"><a href="#等级" class="headerlink" title="等级"></a>等级</h3><p>uid = userId * 100000  + appId</p><p>uid//进程功能的一种标识</p><h4 id="ID的区间"><a href="#ID的区间" class="headerlink" title="ID的区间"></a>ID的区间</h4><h5 id="uid"><a href="#uid" class="headerlink" title="uid"></a>uid</h5><p>有root, system,radio,media等都属于系统uid定义在在Process.java文件，如下：</p><table><thead><tr><th>uid</th><th>值</th><th>含义</th></tr></thead><tbody><tr><td>ROOT_UID</td><td>0</td><td>root uid</td></tr><tr><td>SYSTEM_UID</td><td>1000</td><td>用于systemserver进程</td></tr><tr><td>PHONE_UID</td><td>1001</td><td>telephony所属的uid</td></tr><tr><td>BLUETOOTH_UID</td><td>1002</td><td>蓝牙所属的uid</td></tr><tr><td>LOG_UID</td><td>1007</td><td>log所属的uid</td></tr><tr><td>WIFI_UID</td><td>1008</td><td></td></tr><tr><td>MEDIA_UID</td><td>1013</td><td>用于mediaserver进程</td></tr><tr><td>VPN_UID</td><td>1016</td><td></td></tr><tr><td>DRM_UID</td><td>1019</td><td></td></tr><tr><td>MEDIA_RW_GID</td><td>1023</td><td>具有写内部媒体存储权限的uid</td></tr><tr><td>……</td><td>……</td><td>……..</td></tr></tbody></table><p>对于非systerm的uid会进行权限的检查</p><h5 id="userId"><a href="#userId" class="headerlink" title="userId"></a>userId</h5><table><thead><tr><th>userId</th><th>赋值</th><th>含义</th></tr></thead><tbody><tr><td>USER_OWNER</td><td>0</td><td>拥有者</td></tr><tr><td>USER_ALL</td><td>-1</td><td>所有用户</td></tr><tr><td>USER_CURRENT</td><td>-2</td><td>当前活动用户</td></tr><tr><td>USER_CURRENT_OR_SELF</td><td>-3</td><td>当前用户或者调用者所在用户</td></tr><tr><td>USER_NULL</td><td>-1000</td><td>未定义用户</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//reference code      </span></span><br><span class="line"><span class="keyword">if</span> (!allow) &#123;</span><br><span class="line">                <span class="keyword">if</span> (userId == UserHandle.USER_CURRENT_OR_SELF) &#123;</span><br><span class="line">                    <span class="comment">// In this case, they would like to just execute as their</span></span><br><span class="line">                    <span class="comment">// owner user instead of failing.</span></span><br><span class="line">                    targetUserId = callingUserId;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//......</span></span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(msg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h5 id="appId"><a href="#appId" class="headerlink" title="appId"></a>appId</h5><ul><li>system appid: [1000, 9999]</li><li>application appid:[10000, 19999]</li><li>Shared AppGid: [50000, 59999]</li><li>isolated appid: [99000, 99999]</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//reference code</span></span><br><span class="line"><span class="keyword">int</span> callingAppId = UserHandle.getAppId(callingUid);</span><br><span class="line">       <span class="keyword">if</span> (callingAppId == Process.SYSTEM_UID || callingAppId == Process.PHONE_UID</span><br><span class="line">           || callingAppId == Process.SHELL_UID || callingAppId == Process.BLUETOOTH_UID</span><br><span class="line">           || callingAppId == Process.NFC_UID || callingUid == <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="comment">// Always okay.</span></span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> &#123;</span><br><span class="line">           <span class="comment">//.......</span></span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><h4 id="发送广播-1"><a href="#发送广播-1" class="headerlink" title="发送广播"></a>发送广播</h4><ul><li>intentfilter进行一部分广播的过滤</li><li>sendBroadcast(Intent, String)的接口在发送广播时指定接收者必须具备的permission</li><li>通过Intent.setPackage设置广播仅对某个程序有效</li><li>protectionLevel 可以设置到签名等级，防止反编译后被第三方应用模拟相同的权限</li></ul><h4 id="注册广播-1"><a href="#注册广播-1" class="headerlink" title="注册广播"></a>注册广播</h4><ul><li>registerReceiver(BroadcastReceiver, IntentFilter, String, android.os.Handler)的接口指定发送者必须具备的permission</li><li>对于静态注册的广播可以通过android:exported=”false”属性表示接收者对外部应用程序不可用</li><li>protectionLevel可以设置到签名等级，防止反编译后被第三方应用模拟相同的权限</li></ul><h2 id="开源框架-EventBus"><a href="#开源框架-EventBus" class="headerlink" title="开源框架 EventBus"></a>开源框架 EventBus</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><h4 id="广播的缺点"><a href="#广播的缺点" class="headerlink" title="广播的缺点"></a>广播的缺点</h4><ul><li><p>它是重量级的，费时的一种方式；</p></li><li><p>可以接受各种系统的通知包括电量变化，系统设置，短信等等，所以就决定了它需要基于android的</p><p>sdk，而且它支持跨进程通信，决定了它必须通过AMS做一次judge.</p></li></ul><h4 id="EventBus的优点"><a href="#EventBus的优点" class="headerlink" title="EventBus的优点"></a>EventBus的优点</h4><ul><li>它是轻量，快速的一种方式；</li><li>使用简单。register注册,post发送,onEvent进行事件的处理；</li><li>提供了观察者所没有的粘滞,优先级的处理逻辑,对齐了broadcastRecevicer;</li></ul><h3 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h3><p><img src="/images/BroadCaster_EventBus.png" alt="EventBus"></p><h3 id="流程步骤"><a href="#流程步骤" class="headerlink" title="流程步骤"></a>流程步骤</h3><h4 id="注册与注销"><a href="#注册与注销" class="headerlink" title="注册与注销"></a>注册与注销</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.param</span><br><span class="line">key:消息类型(注册类和回调方法) or 注册类(消息类型)</span><br><span class="line">  Map&lt;Class&lt;?&gt;, CopyOnWriteArrayList&lt;Subscription&gt;&gt; subscriptionsByEventType;<span class="comment">//根据消息类型找(类，方法)</span></span><br><span class="line">Map&lt;Object, List&lt;Class&lt;?&gt;&gt;&gt; typesBySubscriber;<span class="comment">//根据类找消息类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.register:</span><br><span class="line"><span class="number">2.1</span></span><br><span class="line">  <span class="comment">//类－&gt;方法-&gt;消息类型 store in subscriptionsByEventType</span></span><br><span class="line">subscriptionsByEventType.put(eventType, subscriptions);<span class="comment">//eg:subscriptionsByEventType.put(MessageEvent ,new Subscriptions(activity,@method))</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.2</span></span><br><span class="line">  <span class="comment">//类，消息类型 store in typesBySubscriber</span></span><br><span class="line"> typesBySubscriber.put(subscriber,  subscribedEvents);<span class="comment">//eg:typesBySubscriber.put(activity,MessageEvent)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>.unregister:</span><br><span class="line"><span class="number">3.1</span></span><br><span class="line">  <span class="comment">//类-&gt;消息类型 delete from subscriptionsByEventType</span></span><br><span class="line"><span class="number">3.2</span></span><br><span class="line">  <span class="comment">//类 delete from typesBySubscriber</span></span><br></pre></td></tr></table></figure><h4 id="发送"><a href="#发送" class="headerlink" title="发送"></a>发送</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">post(Object event)</span><br><span class="line">[</span><br><span class="line">  eventQueue.add(event)</span><br><span class="line">  <span class="keyword">while</span> (!eventQueue.isEmpty()) </span><br><span class="line">]-&gt;</span><br><span class="line">postSingleEvent()-&gt;</span><br><span class="line">postSingleEventForEventType()-&gt;</span><br><span class="line">postToSubscription</span><br><span class="line">[</span><br><span class="line">Poster.equeue() <span class="comment">//async,background,main...... </span></span><br><span class="line">PendingPost.obtainPendingPost</span><br><span class="line">eventBus.getExecutorService().execute()       </span><br><span class="line">eventBus.invokeSubscriber</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="优先级与粘滞消息的处理"><a href="#优先级与粘滞消息的处理" class="headerlink" title="优先级与粘滞消息的处理"></a>优先级与粘滞消息的处理</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;注册广播&quot;&gt;&lt;a href=&quot;#注册广播&quot; class=&quot;headerlink&quot; title=&quot;注册广播&quot;&gt;&lt;/a&gt;注册广播&lt;/h2&gt;&lt;h3 id=&quot;动态注册&quot;&gt;&lt;a href=&quot;#动态注册&quot; class=&quot;headerlink&quot; title=&quot;动态注册&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>ImageView源码解读</title>
    <link href="http://jinjian.info/2017/11/05/ImageView%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/11/05/ImageView源码解读/</id>
    <published>2017-11-04T16:00:00.000Z</published>
    <updated>2017-12-23T17:50:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Qusetions"><a href="#Qusetions" class="headerlink" title="Qusetions"></a>Qusetions</h2><h3 id="How-setScaleType？"><a href="#How-setScaleType？" class="headerlink" title="How setScaleType？"></a>How setScaleType？</h3><p>setScaleType in conjunction with setFrame</p><h4 id="setScaleType"><a href="#setScaleType" class="headerlink" title="setScaleType"></a>setScaleType</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Controls how the image should be resized or moved to match the size</span></span><br><span class="line"><span class="comment"> * of this ImageView.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> scaleType The desired scaling mode.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#ImageView_scaleType</span></span><br><span class="line"><span class="comment"> * normal step</span></span><br><span class="line"><span class="comment"> * 1.store mScaleType</span></span><br><span class="line"><span class="comment"> * 2.setWillNotCacheDrawing//how to work this method</span></span><br><span class="line"><span class="comment">    /##</span></span><br><span class="line"><span class="comment">    v.setDrawingCacheEnabled(true);</span></span><br><span class="line"><span class="comment">    v.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),</span></span><br><span class="line"><span class="comment">    MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));//this is the important code</span></span><br><span class="line"><span class="comment">    Without it the view will have a dimension of 0,0 and the bitmap will be null</span></span><br><span class="line"><span class="comment">    v.layout(0, 0, v.getMeasuredWidth(), v.getMeasuredHeight());</span></span><br><span class="line"><span class="comment">    v.buildDrawingCache(true);</span></span><br><span class="line"><span class="comment">    Bitmap b = Bitmap.createBitmap(v.getDrawingCache());</span></span><br><span class="line"><span class="comment">    v.setDrawingCacheEnabled(false); // clear drawing cache</span></span><br><span class="line"><span class="comment">    ##/</span></span><br><span class="line"><span class="comment">   <span class="doctag">@seeNext</span> View.draw()-&gt;View.getDrawingCache()</span></span><br><span class="line"><span class="comment">   <span class="doctag">@seeNext</span> View.buildDrawingCacheImpl()</span></span><br><span class="line"><span class="comment"> * 3.requestLayout and invalidate</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScaleType</span><span class="params">(ScaleType scaleType)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (scaleType == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mScaleType != scaleType) &#123;</span><br><span class="line">        mScaleType = scaleType;</span><br><span class="line"></span><br><span class="line">        setWillNotCacheDrawing(mScaleType == ScaleType.CENTER);            </span><br><span class="line"></span><br><span class="line">        requestLayout();</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method is called by ViewGroup.drawChild() to have each child view draw itself.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This is where the View specializes rendering behavior based on layer type,</span></span><br><span class="line"><span class="comment"> * and hardware acceleration.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">draw</span><span class="params">(Canvas canvas, ViewGroup parent, <span class="keyword">long</span> drawingTime)</span> </span>&#123;</span><br><span class="line">   ......</span><br><span class="line">    Bitmap cache = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> layerType = getLayerType(); <span class="comment">// <span class="doctag">TODO:</span> signify cache state with just 'cache' local</span></span><br><span class="line">    <span class="keyword">if</span> (layerType == LAYER_TYPE_SOFTWARE</span><br><span class="line">            || (!drawingWithRenderNode &amp;&amp; layerType != LAYER_TYPE_NONE)) &#123;</span><br><span class="line">        <span class="comment">// If not drawing with RenderNode, treat HW layers as SW</span></span><br><span class="line">        layerType = LAYER_TYPE_SOFTWARE;</span><br><span class="line">        buildDrawingCache(<span class="keyword">true</span>);</span><br><span class="line">        cache = getDrawingCache(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!drawingWithDrawingCache) &#123;</span><br><span class="line">    ......</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cache != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mPrivateFlags &amp;= ~PFLAG_DIRTY_MASK;</span><br><span class="line">        <span class="keyword">if</span> (layerType == LAYER_TYPE_NONE) &#123;</span><br><span class="line">            <span class="comment">// no layer paint, use temporary paint to draw bitmap</span></span><br><span class="line">            Paint cachePaint = parent.mCachePaint;</span><br><span class="line">            <span class="keyword">if</span> (cachePaint == <span class="keyword">null</span>) &#123;</span><br><span class="line">                cachePaint = <span class="keyword">new</span> Paint();</span><br><span class="line">                cachePaint.setDither(<span class="keyword">false</span>);</span><br><span class="line">                parent.mCachePaint = cachePaint;</span><br><span class="line">            &#125;</span><br><span class="line">            cachePaint.setAlpha((<span class="keyword">int</span>) (alpha * <span class="number">255</span>));</span><br><span class="line">            canvas.drawBitmap(cache, <span class="number">0.0f</span>, <span class="number">0.0f</span>, cachePaint);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// use layer paint to draw the bitmap, merging the two alphas, but also restore</span></span><br><span class="line">            <span class="keyword">int</span> layerPaintAlpha = mLayerPaint.getAlpha();</span><br><span class="line">            mLayerPaint.setAlpha((<span class="keyword">int</span>) (alpha * layerPaintAlpha));</span><br><span class="line">            canvas.drawBitmap(cache, <span class="number">0.0f</span>, <span class="number">0.0f</span>, mLayerPaint);</span><br><span class="line">            mLayerPaint.setAlpha(layerPaintAlpha);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Returns the bitmap in which this view drawing is cached. The returned bitmap</span></span><br><span class="line"><span class="comment"> * is null when caching is disabled. If caching is enabled and the cache is not ready,</span></span><br><span class="line"><span class="comment"> * this method will create it. Calling &#123;<span class="doctag">@link</span> #draw(android.graphics.Canvas)&#125; will not</span></span><br><span class="line"><span class="comment"> * draw from the cache when the cache is enabled. To benefit from the cache, you must</span></span><br><span class="line"><span class="comment"> * request the drawing cache by calling this method and draw it on screen if the</span></span><br><span class="line"><span class="comment"> * returned bitmap is not null.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Note about auto scaling in compatibility mode: When auto scaling is not enabled,</span></span><br><span class="line"><span class="comment"> * this method will create a bitmap of the same size as this view. Because this bitmap</span></span><br><span class="line"><span class="comment"> * will be drawn scaled by the parent ViewGroup, the result on screen might show</span></span><br><span class="line"><span class="comment"> * scaling artifacts. To avoid such artifacts, you should call this method by setting</span></span><br><span class="line"><span class="comment"> * the auto scaling to true. Doing so, however, will generate a bitmap of a different</span></span><br><span class="line"><span class="comment"> * size than the view. This implies that your application must be able to handle this</span></span><br><span class="line"><span class="comment"> * size.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> autoScale Indicates whether the generated bitmap should be scaled based on</span></span><br><span class="line"><span class="comment"> *        the current density of the screen when the application is in compatibility</span></span><br><span class="line"><span class="comment"> *        mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> A bitmap representing this view or null if cache is disabled.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #setDrawingCacheEnabled(boolean)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #isDrawingCacheEnabled()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #buildDrawingCache(boolean)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> #destroyDrawingCache()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Bitmap <span class="title">getDrawingCache</span><span class="params">(<span class="keyword">boolean</span> autoScale)</span> </span>&#123;</span><br><span class="line">  <span class="comment">//setScaleType funtion here</span></span><br><span class="line">    <span class="keyword">if</span> ((mViewFlags &amp; WILL_NOT_CACHE_DRAWING) == WILL_NOT_CACHE_DRAWING) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((mViewFlags &amp; DRAWING_CACHE_ENABLED) == DRAWING_CACHE_ENABLED) &#123;</span><br><span class="line">        buildDrawingCache(autoScale);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> autoScale ? mDrawingCache : mUnscaledDrawingCache;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * private, internal implementation of buildDrawingCache, used to enable tracing</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">buildDrawingCacheImpl</span><span class="params">(<span class="keyword">boolean</span> autoScale)</span> </span>&#123;</span><br><span class="line">    mCachingFailed = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> width = mRight - mLeft;</span><br><span class="line">    <span class="keyword">int</span> height = mBottom - mTop;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> AttachInfo attachInfo = mAttachInfo;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> scalingRequired = attachInfo != <span class="keyword">null</span> &amp;&amp; attachInfo.mScalingRequired;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (autoScale &amp;&amp; scalingRequired) &#123;</span><br><span class="line">        width = (<span class="keyword">int</span>) ((width * attachInfo.mApplicationScale) + <span class="number">0.5f</span>);</span><br><span class="line">        height = (<span class="keyword">int</span>) ((height * attachInfo.mApplicationScale) + <span class="number">0.5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> drawingCacheBackgroundColor = mDrawingCacheBackgroundColor;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> opaque = drawingCacheBackgroundColor != <span class="number">0</span> || isOpaque();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> use32BitCache = attachInfo != <span class="keyword">null</span> &amp;&amp; attachInfo.mUse32BitDrawingCache;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> projectedBitmapSize = width * height * (opaque &amp;&amp; !use32BitCache ? <span class="number">2</span> : <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> drawingCacheSize =</span><br><span class="line">            ViewConfiguration.get(mContext).getScaledMaximumDrawingCacheSize();</span><br><span class="line">    <span class="keyword">if</span> (width &lt;= <span class="number">0</span> || height &lt;= <span class="number">0</span> || projectedBitmapSize &gt; drawingCacheSize) &#123;</span><br><span class="line">        <span class="keyword">if</span> (width &gt; <span class="number">0</span> &amp;&amp; height &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Log.w(VIEW_LOG_TAG, getClass().getSimpleName() + <span class="string">" not displayed because it is"</span></span><br><span class="line">                    + <span class="string">" too large to fit into a software layer (or drawing cache), needs "</span></span><br><span class="line">                    + projectedBitmapSize + <span class="string">" bytes, only "</span></span><br><span class="line">                    + drawingCacheSize + <span class="string">" available"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        destroyDrawingCache();</span><br><span class="line">        mCachingFailed = <span class="keyword">true</span>;</span><br><span class="line">      <span class="comment">// if view is not Measured ,return here</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="setFrame"><a href="#setFrame" class="headerlink" title="setFrame"></a>setFrame</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">setFrame</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> t, <span class="keyword">int</span> r, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> changed = <span class="keyword">super</span>.setFrame(l, t, r, b);</span><br><span class="line">    mHaveFrame = <span class="keyword">true</span>;</span><br><span class="line">    configureBounds();<span class="comment">//imageView core method</span></span><br><span class="line">    <span class="keyword">return</span> changed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="How-setSrc-and-setBackground"><a href="#How-setSrc-and-setBackground" class="headerlink" title="How setSrc and setBackground?"></a>How setSrc and setBackground?</h3><ul><li><p>setBackGround:  same as View</p></li><li><p>setSrc: add a new parameter mDrawable and provider the four methods </p><p>setImageResource</p><p>setImageURI<br>setImageDrawable<br>setImageBitmap</p><p>above all use the method configureBounds and then come to our slight by onDraw.</p><p>give “setImageDrawable” as an Example.</p></li></ul><h4 id="setImageResource"><a href="#setImageResource" class="headerlink" title="setImageResource"></a>setImageResource</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Sets a drawable as the content of this ImageView.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p class="note"&gt;This does Bitmap reading and decoding on the UI</span></span><br><span class="line"><span class="comment">   * thread, which can cause a latency hiccup.  If that's a concern,</span></span><br><span class="line"><span class="comment">   * consider using &#123;<span class="doctag">@link</span> #setImageDrawable(android.graphics.drawable.Drawable)&#125; or</span></span><br><span class="line"><span class="comment">   * &#123;<span class="doctag">@link</span> #setImageBitmap(android.graphics.Bitmap)&#125; and</span></span><br><span class="line"><span class="comment">   * &#123;<span class="doctag">@link</span> android.graphics.BitmapFactory&#125; instead.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> resId the resource identifier of the drawable</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@attr</span> ref android.R.styleable#ImageView_src</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * ##normal  steps</span></span><br><span class="line"><span class="comment">   * 1.store the oldWidth oldHeight</span></span><br><span class="line"><span class="comment">   * 2.updateDrawable (eg:callback,level ,bounds ,scaleType etc.)</span></span><br><span class="line"><span class="comment">   * 3.maybe you have to resolveUri which to decode the res</span></span><br><span class="line"><span class="comment">   * 4.at last requestLayout and then invalidate</span></span><br><span class="line"><span class="comment">   *<span class="doctag">@seeNext</span> updateDrawable()-&gt;configureBounds()</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@android</span>.view.RemotableViewMethod</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImageResource</span><span class="params">(@DrawableRes <span class="keyword">int</span> resId)</span> </span>&#123;</span><br><span class="line">      <span class="comment">// The resource configuration may have changed, so we should always</span></span><br><span class="line">      <span class="comment">// try to load the resource even if the resId hasn't changed.</span></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> oldWidth = mDrawableWidth;</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> oldHeight = mDrawableHeight;</span><br><span class="line"></span><br><span class="line">      updateDrawable(<span class="keyword">null</span>);</span><br><span class="line">      mResource = resId;</span><br><span class="line">      mUri = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      resolveUri();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (oldWidth != mDrawableWidth || oldHeight != mDrawableHeight) &#123;</span><br><span class="line">          requestLayout();</span><br><span class="line">      &#125;</span><br><span class="line">      invalidate();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="updateDrawable"><a href="#updateDrawable" class="headerlink" title="updateDrawable"></a>updateDrawable</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateDrawable</span><span class="params">(Drawable d)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (d != mRecycleableBitmapDrawable &amp;&amp; mRecycleableBitmapDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">          mRecycleableBitmapDrawable.setBitmap(<span class="keyword">null</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">          mDrawable.setCallback(<span class="keyword">null</span>);</span><br><span class="line">          unscheduleDrawable(mDrawable);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      mDrawable = d;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (d != <span class="keyword">null</span>) &#123;</span><br><span class="line">          d.setCallback(<span class="keyword">this</span>);</span><br><span class="line">          d.setLayoutDirection(getLayoutDirection());</span><br><span class="line">          <span class="keyword">if</span> (d.isStateful()) &#123;</span><br><span class="line">              d.setState(getDrawableState());</span><br><span class="line">          &#125;</span><br><span class="line">          d.setVisible(getVisibility() == VISIBLE, <span class="keyword">true</span>);</span><br><span class="line">          d.setLevel(mLevel);</span><br><span class="line">          mDrawableWidth = d.getIntrinsicWidth();</span><br><span class="line">          mDrawableHeight = d.getIntrinsicHeight();</span><br><span class="line">          applyImageTint();</span><br><span class="line">          applyColorMod();</span><br><span class="line"></span><br><span class="line">          configureBounds();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          mDrawableWidth = mDrawableHeight = -<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="configBounds"><a href="#configBounds" class="headerlink" title="configBounds"></a>configBounds</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">configureBounds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (mDrawable == <span class="keyword">null</span> || !mHaveFrame) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> dwidth = mDrawableWidth;</span><br><span class="line">      <span class="keyword">int</span> dheight = mDrawableHeight;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> vwidth = getWidth() - mPaddingLeft - mPaddingRight;</span><br><span class="line">      <span class="keyword">int</span> vheight = getHeight() - mPaddingTop - mPaddingBottom;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">boolean</span> fits = (dwidth &lt; <span class="number">0</span> || vwidth == dwidth) &amp;&amp;</span><br><span class="line">                     (dheight &lt; <span class="number">0</span> || vheight == dheight);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//type 1 :fit_xy = just fill our entire view</span></span><br><span class="line">      <span class="keyword">if</span> (dwidth &lt;= <span class="number">0</span> || dheight &lt;= <span class="number">0</span> || ScaleType.FIT_XY == mScaleType) &#123;</span><br><span class="line">          <span class="comment">/* If the drawable has no intrinsic size, or we're told to</span></span><br><span class="line"><span class="comment">              scaletofit, then we just fill our entire view.</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">          mDrawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, vwidth, vheight);</span><br><span class="line">          mDrawMatrix = <span class="keyword">null</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// We need to do the scaling ourself, so have the drawable</span></span><br><span class="line">          <span class="comment">// use its native size.</span></span><br><span class="line">          mDrawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, dwidth, dheight);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//type 2 :matrix =  use special matrix</span></span><br><span class="line">          <span class="keyword">if</span> (ScaleType.MATRIX == mScaleType) &#123;</span><br><span class="line">              <span class="comment">// Use the specified matrix as-is.</span></span><br><span class="line">              <span class="keyword">if</span> (mMatrix.isIdentity()) &#123;</span><br><span class="line">                  mDrawMatrix = <span class="keyword">null</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  mDrawMatrix = mMatrix;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fits) &#123;</span><br><span class="line">              <span class="comment">// The bitmap fits exactly, no transform needed.</span></span><br><span class="line">              mDrawMatrix = <span class="keyword">null</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ScaleType.CENTER == mScaleType) &#123;</span><br><span class="line">              <span class="comment">//type 3: center = move  the src center to the view center</span></span><br><span class="line">              <span class="comment">// Center bitmap in view, no scaling.</span></span><br><span class="line">              mDrawMatrix = mMatrix;</span><br><span class="line">              mDrawMatrix.setTranslate(Math.round((vwidth - dwidth) * <span class="number">0.5f</span>),</span><br><span class="line">                                       Math.round((vheight - dheight) * <span class="number">0.5f</span>));</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ScaleType.CENTER_CROP == mScaleType) &#123;</span><br><span class="line">              <span class="comment">//type 4:center_crop=scale and the move the src center to the view center</span></span><br><span class="line">              <span class="comment">//</span></span><br><span class="line">              mDrawMatrix = mMatrix;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">float</span> scale;</span><br><span class="line">              <span class="keyword">float</span> dx = <span class="number">0</span>, dy = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// other: if(vheihgt/dheight &gt; vwidth/dwidth) chos max</span></span><br><span class="line">              <span class="keyword">if</span> (dwidth * vheight &gt; vwidth * dheight) &#123;</span><br><span class="line">                  scale = (<span class="keyword">float</span>) vheight / (<span class="keyword">float</span>) dheight; </span><br><span class="line">                  dx = (vwidth - dwidth * scale) * <span class="number">0.5f</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  scale = (<span class="keyword">float</span>) vwidth / (<span class="keyword">float</span>) dwidth;</span><br><span class="line">                  dy = (vheight - dheight * scale) * <span class="number">0.5f</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              mDrawMatrix.setScale(scale, scale);</span><br><span class="line">              mDrawMatrix.postTranslate(Math.round(dx), Math.round(dy));</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ScaleType.CENTER_INSIDE == mScaleType) &#123;</span><br><span class="line">              mDrawMatrix = mMatrix;</span><br><span class="line">              <span class="keyword">float</span> scale;</span><br><span class="line">              <span class="keyword">float</span> dx;</span><br><span class="line">              <span class="keyword">float</span> dy;</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">if</span> (dwidth &lt;= vwidth &amp;&amp; dheight &lt;= vheight) &#123;</span><br><span class="line">                  scale = <span class="number">1.0f</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="comment">//other : choose min</span></span><br><span class="line">                  scale = Math.min((<span class="keyword">float</span>) vwidth / (<span class="keyword">float</span>) dwidth,</span><br><span class="line">                          (<span class="keyword">float</span>) vheight / (<span class="keyword">float</span>) dheight);</span><br><span class="line">              &#125;</span><br><span class="line">              </span><br><span class="line">              dx = Math.round((vwidth - dwidth * scale) * <span class="number">0.5f</span>);</span><br><span class="line">              dy = Math.round((vheight - dheight * scale) * <span class="number">0.5f</span>);</span><br><span class="line"></span><br><span class="line">              mDrawMatrix.setScale(scale, scale);</span><br><span class="line">              mDrawMatrix.postTranslate(dx, dy);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">// Generate the required transform.</span></span><br><span class="line">              mTempSrc.set(<span class="number">0</span>, <span class="number">0</span>, dwidth, dheight);</span><br><span class="line">              mTempDst.set(<span class="number">0</span>, <span class="number">0</span>, vwidth, vheight);</span><br><span class="line">              </span><br><span class="line">              mDrawMatrix = mMatrix;</span><br><span class="line">              mDrawMatrix.setRectToRect(mTempSrc, mTempDst, scaleTypeToScaleToFit(mScaleType));</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="onDraw"><a href="#onDraw" class="headerlink" title="onDraw"></a>onDraw</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*simply apply mDrawMatrix(set by setImageMatrix) and then draw the canvas</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mDrawable == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>; <span class="comment">// couldn't resolve the URI</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mDrawableWidth == <span class="number">0</span> || mDrawableHeight == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;     <span class="comment">// nothing to draw (empty bounds)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mDrawMatrix == <span class="keyword">null</span> &amp;&amp; mPaddingTop == <span class="number">0</span> &amp;&amp; mPaddingLeft == <span class="number">0</span>) &#123;</span><br><span class="line">            mDrawable.draw(canvas);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> saveCount = canvas.getSaveCount();</span><br><span class="line">            canvas.save();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (mCropToPadding) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> scrollX = mScrollX;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> scrollY = mScrollY;</span><br><span class="line">                canvas.clipRect(scrollX + mPaddingLeft, scrollY + mPaddingTop,</span><br><span class="line">                        scrollX + mRight - mLeft - mPaddingRight,</span><br><span class="line">                        scrollY + mBottom - mTop - mPaddingBottom);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            canvas.translate(mPaddingLeft, mPaddingTop);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// here to effect the final slight</span></span><br><span class="line">            <span class="keyword">if</span> (mDrawMatrix != <span class="keyword">null</span>) &#123;</span><br><span class="line">                canvas.concat(mDrawMatrix);</span><br><span class="line">            &#125;</span><br><span class="line">            mDrawable.draw(canvas);</span><br><span class="line">            canvas.restoreToCount(saveCount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Qusetions&quot;&gt;&lt;a href=&quot;#Qusetions&quot; class=&quot;headerlink&quot; title=&quot;Qusetions&quot;&gt;&lt;/a&gt;Qusetions&lt;/h2&gt;&lt;h3 id=&quot;How-setScaleType？&quot;&gt;&lt;a href=&quot;#How-setS
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>ListView源码解读</title>
    <link href="http://jinjian.info/2017/11/04/ListView%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/11/04/ListView源码解读/</id>
    <published>2017-11-03T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ListView的测量"><a href="#ListView的测量" class="headerlink" title="ListView的测量"></a>ListView的测量</h2><h3 id="onMeasure"><a href="#onMeasure" class="headerlink" title="onMeasure"></a>onMeasure</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *   onMeasure four step</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   1. getWidthMode and getWidthSize etc.</span></span><br><span class="line"><span class="comment"> *   2. widthSize if(unspcified)</span></span><br><span class="line"><span class="comment"> *       use (position of 0' child width + paddingRight + paddingLeft + scrollBarWidth)</span></span><br><span class="line"><span class="comment"> *      else</span></span><br><span class="line"><span class="comment"> *       modify measureState by childSate</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   3.heightSize if(unspecified)</span></span><br><span class="line"><span class="comment"> *         use(0'child height +paddingBottom+paddingTop+verticalScrollPadding)</span></span><br><span class="line"><span class="comment"> *      else if(At_Most)</span></span><br><span class="line"><span class="comment"> *         use the givend heightSize as max and compared with the inclusive size of children,</span></span><br><span class="line"><span class="comment"> *      also should add paddings</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   4.setMeasuredDimension()</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> widthMeasureSpec</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> heightMeasureSpec</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Sets up mListPadding by view's Padding</span></span><br><span class="line">    <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line">    <span class="keyword">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">    <span class="keyword">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> childWidth = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> childHeight = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> childState = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    mItemCount = mAdapter == <span class="keyword">null</span> ? <span class="number">0</span> : mAdapter.getCount();</span><br><span class="line">    <span class="keyword">if</span> (mItemCount &gt; <span class="number">0</span> &amp;&amp; (widthMode == MeasureSpec.UNSPECIFIED</span><br><span class="line">            || heightMode == MeasureSpec.UNSPECIFIED)) &#123;</span><br><span class="line">        <span class="keyword">final</span> View child = obtainView(<span class="number">0</span>, mIsScrap);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Lay out child directly against the parent measure spec so that</span></span><br><span class="line">        <span class="comment">// we can obtain exected minimum width and height.</span></span><br><span class="line">        measureScrapChild(child, <span class="number">0</span>, widthMeasureSpec, heightSize);</span><br><span class="line"></span><br><span class="line">        childWidth = child.getMeasuredWidth();</span><br><span class="line">        childHeight = child.getMeasuredHeight();</span><br><span class="line">        childState = combineMeasuredStates(childState, child.getMeasuredState());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (recycleOnMeasure() &amp;&amp; mRecycler.shouldRecycleViewType(</span><br><span class="line">                ((LayoutParams) child.getLayoutParams()).viewType)) &#123;</span><br><span class="line">            mRecycler.addScrapView(child, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (widthMode == MeasureSpec.UNSPECIFIED) &#123;</span><br><span class="line">      <span class="comment">//use (position of 0' child width + paddingRight + paddingLeft + scrollBarWidth)</span></span><br><span class="line">        widthSize = mListPadding.left + mListPadding.right + childWidth +</span><br><span class="line">                getVerticalScrollbarWidth();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//modify measureState by childSate</span></span><br><span class="line">        widthSize |= (childState &amp; MEASURED_STATE_MASK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (heightMode == MeasureSpec.UNSPECIFIED) &#123;</span><br><span class="line">      <span class="comment">//use(0'child height +paddingBottom+paddingTop+verticalScrollPadding)</span></span><br><span class="line">        heightSize = mListPadding.top + mListPadding.bottom + childHeight +</span><br><span class="line">                getVerticalFadingEdgeLength() * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (heightMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> after first layout we should maybe start at the first visible position, not 0</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">// use the givend heightSize as max and compared with the inclusive size of children,</span></span><br><span class="line">      <span class="comment">// also should add paddings</span></span><br><span class="line">        heightSize = measureHeightOfChildren(widthMeasureSpec, <span class="number">0</span>, NO_POSITION, heightSize, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//often here heightMode  AT_MOST or EXCACTLY</span></span><br><span class="line">    setMeasuredDimension(widthSize, heightSize);</span><br><span class="line"></span><br><span class="line">    mWidthMeasureSpec = widthMeasureSpec;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="measureHeightofChildren"><a href="#measureHeightofChildren" class="headerlink" title="measureHeightofChildren"></a>measureHeightofChildren</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Measures the height of the given range of children (inclusive) and</span></span><br><span class="line"><span class="comment">  * returns the height with this ListView's padding and divider heights</span></span><br><span class="line"><span class="comment">  * included. If maxHeight is provided, the measuring will stop when the</span></span><br><span class="line"><span class="comment">  * current height reaches maxHeight.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> widthMeasureSpec The width measure spec to be given to a child's</span></span><br><span class="line"><span class="comment">  *            &#123;<span class="doctag">@link</span> View#measure(int, int)&#125;.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> startPosition The position of the first child to be shown.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> endPosition The (inclusive) position of the last child to be</span></span><br><span class="line"><span class="comment">  *            shown. Specify &#123;<span class="doctag">@link</span> #NO_POSITION&#125; if the last child should be</span></span><br><span class="line"><span class="comment">  *            the last available child from the adapter.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> maxHeight The maximum height that will be returned (if all the</span></span><br><span class="line"><span class="comment">  *            children don't fit in this value, this value will be</span></span><br><span class="line"><span class="comment">  *            returned).</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> disallowPartialChildPosition In general, whether the returned</span></span><br><span class="line"><span class="comment">  *            height should only contain entire children. This is more</span></span><br><span class="line"><span class="comment">  *            powerful--it is the first inclusive position at which partial</span></span><br><span class="line"><span class="comment">  *            children will not be allowed. Example: it looks nice to have</span></span><br><span class="line"><span class="comment">  *            at least 3 completely visible children, and in portrait this</span></span><br><span class="line"><span class="comment">  *            will most likely fit; but in landscape there could be times</span></span><br><span class="line"><span class="comment">  *            when even 2 children can not be completely shown, so a value</span></span><br><span class="line"><span class="comment">  *            of 2 (remember, inclusive) would be good (assuming</span></span><br><span class="line"><span class="comment">  *            startPosition is 0).</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> The height of this ListView with the given children.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">measureHeightOfChildren</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> startPosition, <span class="keyword">int</span> endPosition,</span></span></span><br><span class="line"><span class="function"><span class="params">         <span class="keyword">int</span> maxHeight, <span class="keyword">int</span> disallowPartialChildPosition)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> ListAdapter adapter = mAdapter;</span><br><span class="line">     <span class="keyword">if</span> (adapter == <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> mListPadding.top + mListPadding.bottom;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Include the padding of the list</span></span><br><span class="line">     <span class="keyword">int</span> returnedHeight = mListPadding.top + mListPadding.bottom;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> dividerHeight = ((mDividerHeight &gt; <span class="number">0</span>) &amp;&amp; mDivider != <span class="keyword">null</span>) ? mDividerHeight : <span class="number">0</span>;</span><br><span class="line">     <span class="comment">// The previous height value that was less than maxHeight and contained</span></span><br><span class="line">     <span class="comment">// no partial children</span></span><br><span class="line">     <span class="keyword">int</span> prevHeightWithoutPartialChild = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">int</span> i;</span><br><span class="line">     View child;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// mItemCount - 1 since endPosition parameter is inclusive</span></span><br><span class="line">     endPosition = (endPosition == NO_POSITION) ? adapter.getCount() - <span class="number">1</span> : endPosition;</span><br><span class="line">     <span class="keyword">final</span> AbsListView.RecycleBin recycleBin = mRecycler;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> recyle = recycleOnMeasure();</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span>[] isScrap = mIsScrap;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">for</span> (i = startPosition; i &lt;= endPosition; ++i) &#123;</span><br><span class="line">       <span class="comment">//obtain view and add to the scrapList</span></span><br><span class="line">         child = obtainView(i, isScrap);</span><br><span class="line">       <span class="comment">//measure the child </span></span><br><span class="line">         measureScrapChild(child, i, widthMeasureSpec, maxHeight);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">             <span class="comment">// Count the divider for all but one child</span></span><br><span class="line">             returnedHeight += dividerHeight;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Recycle the view before we possibly return from the method</span></span><br><span class="line">         <span class="keyword">if</span> (recyle &amp;&amp; recycleBin.shouldRecycleViewType(</span><br><span class="line">                 ((LayoutParams) child.getLayoutParams()).viewType)) &#123;</span><br><span class="line">             recycleBin.addScrapView(child, -<span class="number">1</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         returnedHeight += child.getMeasuredHeight();</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (returnedHeight &gt;= maxHeight) &#123;</span><br><span class="line">             <span class="comment">// We went over, figure out which height to return.  If returnedHeight &gt; maxHeight,</span></span><br><span class="line">             <span class="comment">// then the i'th position did not fit completely.</span></span><br><span class="line">             <span class="keyword">return</span> (disallowPartialChildPosition &gt;= <span class="number">0</span>) <span class="comment">// Disallowing is enabled (&gt; -1)</span></span><br><span class="line">                         &amp;&amp; (i &gt; disallowPartialChildPosition) <span class="comment">// We've past the min pos</span></span><br><span class="line">                         &amp;&amp; (prevHeightWithoutPartialChild &gt; <span class="number">0</span>) <span class="comment">// We have a prev height</span></span><br><span class="line">                         &amp;&amp; (returnedHeight != maxHeight) <span class="comment">// i'th child did not fit completely</span></span><br><span class="line">                     ? prevHeightWithoutPartialChild</span><br><span class="line">                     : maxHeight;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> ((disallowPartialChildPosition &gt;= <span class="number">0</span>) &amp;&amp; (i &gt;= disallowPartialChildPosition)) &#123;</span><br><span class="line">             prevHeightWithoutPartialChild = returnedHeight;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// At this point, we went through the range of children, and they each</span></span><br><span class="line">     <span class="comment">// completely fit, so return the returnedHeight</span></span><br><span class="line">     <span class="keyword">return</span> returnedHeight;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="ListView的生成"><a href="#ListView的生成" class="headerlink" title="ListView的生成"></a>ListView的生成</h2><h3 id="一般流程"><a href="#一般流程" class="headerlink" title="一般流程"></a>一般流程</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">abslistView:onLayout-&gt;</span><br><span class="line">ListView:layoutChildren-&gt;</span><br><span class="line">ListView:fillFromTop-&gt;</span><br><span class="line">ListView:fillDown-&gt;</span><br><span class="line">ListView:makeAndAddView-&gt;</span><br><span class="line">mRecycler.getActiveView(position) <span class="function">or <span class="title">obtainView</span><span class="params">(position, mIsScrap)</span>［has adapter 的 getview］</span></span><br><span class="line"><span class="function">and then</span></span><br><span class="line"><span class="function"><span class="title">setupChild</span><span class="params">(child, position, y, flow, childrenLeft, selected, mIsScrap[<span class="number">0</span>])</span>［has addViewInLayout ］</span></span><br></pre></td></tr></table></figure><h4 id="onLayout"><a href="#onLayout" class="headerlink" title="onLayout"></a>onLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Subclasses should NOT override this method but</span></span><br><span class="line"><span class="comment"> *  &#123;<span class="doctag">@link</span> #layoutChildren()&#125; instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> l, <span class="keyword">int</span> t, <span class="keyword">int</span> r, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onLayout(changed, l, t, r, b);</span><br><span class="line"></span><br><span class="line">    mInLayout = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> childCount = getChildCount();</span><br><span class="line">    <span class="keyword">if</span> (changed) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; childCount; i++) &#123;</span><br><span class="line">            getChildAt(i).forceLayout();</span><br><span class="line">        &#125;</span><br><span class="line">        mRecycler.markChildrenDirty();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//here:diff from ListView to GrideView</span></span><br><span class="line">    layoutChildren();</span><br><span class="line">    mInLayout = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    mOverscrollMax = (b - t) / OVERSCROLL_LIMIT_DIVISOR;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Move somewhere sane. This doesn't belong in onLayout().</span></span><br><span class="line">    <span class="keyword">if</span> (mFastScroll != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mFastScroll.onItemCountChanged(getChildCount(), mItemCount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="layoutChildren"><a href="#layoutChildren" class="headerlink" title="layoutChildren"></a>layoutChildren</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  do with focus or aceessibility or other stuff style etc.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   1.IMPORTANT ROUTE:</span></span><br><span class="line"><span class="comment"> *   ListView:fillFromTop-&gt;</span></span><br><span class="line"><span class="comment"> *   ListView:fillDown-&gt;</span></span><br><span class="line"><span class="comment"> *   ListView:makeAndAddView-&gt;</span></span><br><span class="line"><span class="comment"> *   mRecycler.getActiveView(position) or obtainView(position, mIsScrap)［has adapter 的 getview］ and then setupChild(child, position, y, flow, childrenLeft, selected, mIsScrap[0])</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  // input startTop and startPos then to caculate</span></span><br><span class="line"><span class="comment"> *  while (List.top &gt; List.end)</span></span><br><span class="line"><span class="comment"> *  &#123;</span></span><br><span class="line"><span class="comment"> *  position +List.Top -&gt; nextChild'Bottom -&gt;nextChild'Bottom +divider height as next List.Top</span></span><br><span class="line"><span class="comment"> *  &#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  // also in setupChild() to add the views into view trees</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">layoutChildren</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> blockLayoutRequests = mBlockLayoutRequests;</span><br><span class="line">    <span class="keyword">if</span> (blockLayoutRequests) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mBlockLayoutRequests = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.layoutChildren();</span><br><span class="line"></span><br><span class="line">        invalidate();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mAdapter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            resetList();</span><br><span class="line">            invokeOnItemScrollListener();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> childrenTop = mListPadding.top;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> childrenBottom = mBottom - mTop - mListPadding.bottom;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> childCount = getChildCount();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> delta = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        View sel;</span><br><span class="line">        View oldSel = <span class="keyword">null</span>;</span><br><span class="line">        View oldFirst = <span class="keyword">null</span>;</span><br><span class="line">        View newSel = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Remember stuff we will need down below</span></span><br><span class="line">        <span class="keyword">switch</span> (mLayoutMode) &#123;</span><br><span class="line">        <span class="comment">//...........</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="comment">// Remember the previously selected view</span></span><br><span class="line">            index = mSelectedPosition - mFirstPosition;</span><br><span class="line">            <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; childCount) &#123;</span><br><span class="line">                oldSel = getChildAt(index);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Remember the previous first child</span></span><br><span class="line">            oldFirst = getChildAt(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mNextSelectedPosition &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                delta = mNextSelectedPosition - mSelectedPosition;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Caution: newSel might be null</span></span><br><span class="line">            newSel = getChildAt(index + delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> dataChanged = mDataChanged;</span><br><span class="line">        <span class="keyword">if</span> (dataChanged) &#123;</span><br><span class="line">            handleDataChanged();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Handle the empty set by removing all views that are visible</span></span><br><span class="line">        <span class="comment">// and calling it a day</span></span><br><span class="line">        <span class="keyword">if</span> (mItemCount == <span class="number">0</span>) &#123;</span><br><span class="line">            resetList();</span><br><span class="line">            invokeOnItemScrollListener();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mItemCount != mAdapter.getCount()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"The content of the adapter has changed but "</span></span><br><span class="line">                    + <span class="string">"ListView did not receive a notification. Make sure the content of "</span></span><br><span class="line">                    + <span class="string">"your adapter is not modified from a background thread, but only from "</span></span><br><span class="line">                    + <span class="string">"the UI thread. Make sure your adapter calls notifyDataSetChanged() "</span></span><br><span class="line">                    + <span class="string">"when its content changes. [in ListView("</span> + getId() + <span class="string">", "</span> + getClass()</span><br><span class="line">                    + <span class="string">") with Adapter("</span> + mAdapter.getClass() + <span class="string">")]"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        setSelectedPositionInt(mNextSelectedPosition);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//..................</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Pull all children into the RecycleBin.</span></span><br><span class="line">        <span class="comment">// These views will be reused if possible</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> firstPosition = mFirstPosition;</span><br><span class="line">        <span class="keyword">final</span> RecycleBin recycleBin = mRecycler;</span><br><span class="line">        <span class="keyword">if</span> (dataChanged) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; childCount; i++) &#123;</span><br><span class="line">                recycleBin.addScrapView(getChildAt(i), firstPosition+i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            recycleBin.fillActiveViews(childCount, firstPosition);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Clear out old views</span></span><br><span class="line">        detachAllViewsFromParent();</span><br><span class="line">        recycleBin.removeSkippedScrap();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (mLayoutMode) &#123;</span><br><span class="line">        <span class="keyword">case</span> LAYOUT_SET_SELECTION:</span><br><span class="line">            <span class="keyword">if</span> (newSel != <span class="keyword">null</span>) &#123;</span><br><span class="line">                sel = fillFromSelection(newSel.getTop(), childrenTop, childrenBottom);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sel = fillFromMiddle(childrenTop, childrenBottom);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LAYOUT_SYNC:</span><br><span class="line">            sel = fillSpecific(mSyncPosition, mSpecificTop);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LAYOUT_FORCE_BOTTOM:</span><br><span class="line">            sel = fillUp(mItemCount - <span class="number">1</span>, childrenBottom);</span><br><span class="line">            adjustViewsUpOrDown();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LAYOUT_FORCE_TOP:</span><br><span class="line">            mFirstPosition = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//Here:to fill the list..</span></span><br><span class="line">            sel = fillFromTop(childrenTop);</span><br><span class="line">         <span class="comment">//..................</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Flush any cached views that did not get reused above</span></span><br><span class="line">        recycleBin.scrapActiveViews();</span><br><span class="line"></span><br><span class="line">      <span class="comment">//.................</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Tell focus view we are done mucking with it, if it is still in</span></span><br><span class="line">        <span class="comment">// our view hierarchy.</span></span><br><span class="line">     <span class="comment">//............</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mItemCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            checkSelectionChanged();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        invokeOnItemScrollListener();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!blockLayoutRequests) &#123;</span><br><span class="line">            mBlockLayoutRequests = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fillFromTop"><a href="#fillFromTop" class="headerlink" title="fillFromTop"></a>fillFromTop</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Fills the list from top to bottom, starting with mFirstPosition</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> nextTop The location where the top of the first item should be</span></span><br><span class="line"><span class="comment">  *        drawn</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> The view that is currently selected</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> View <span class="title">fillFromTop</span><span class="params">(<span class="keyword">int</span> nextTop)</span> </span>&#123;</span><br><span class="line">     mFirstPosition = Math.min(mFirstPosition, mSelectedPosition);</span><br><span class="line">     mFirstPosition = Math.min(mFirstPosition, mItemCount - <span class="number">1</span>);</span><br><span class="line">     <span class="keyword">if</span> (mFirstPosition &lt; <span class="number">0</span>) &#123;</span><br><span class="line">         mFirstPosition = <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   <span class="comment">// the first nextTop is listpadding.top</span></span><br><span class="line">     <span class="keyword">return</span> fillDown(mFirstPosition, nextTop);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="fillDown"><a href="#fillDown" class="headerlink" title="fillDown"></a>fillDown</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Fills the list from pos down to the end of the list view.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pos The first position to put in the list</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> nextTop The location where the top of the item associated with pos</span></span><br><span class="line"><span class="comment"> *        should be drawn</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> The view that is currently selected, if it happens to be in the</span></span><br><span class="line"><span class="comment"> *         range that we draw.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> View <span class="title">fillDown</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> nextTop)</span> </span>&#123;</span><br><span class="line">    View selectedView = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> end = (mBottom - mTop);</span><br><span class="line">    <span class="keyword">if</span> ((mGroupFlags &amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) &#123;</span><br><span class="line">        end -= mListPadding.bottom;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">//the condition to break the while</span></span><br><span class="line">    <span class="keyword">while</span> (nextTop &lt; end &amp;&amp; pos &lt; mItemCount) &#123;</span><br><span class="line">        <span class="comment">// is this the selected item?</span></span><br><span class="line">        <span class="keyword">boolean</span> selected = pos == mSelectedPosition;</span><br><span class="line">        View child = makeAndAddView(pos, nextTop, <span class="keyword">true</span>, mListPadding.left, selected);</span><br><span class="line">       <span class="comment">// caculate the nextTop </span></span><br><span class="line">        nextTop = child.getBottom() + mDividerHeight;</span><br><span class="line">        <span class="keyword">if</span> (selected) &#123;</span><br><span class="line">            selectedView = child;</span><br><span class="line">        &#125;</span><br><span class="line">        pos++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setVisibleRangeHint(mFirstPosition, mFirstPosition + getChildCount() - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> selectedView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="makeAndAddView"><a href="#makeAndAddView" class="headerlink" title="makeAndAddView"></a>makeAndAddView</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Obtain the view and add it to our list of children. The view can be made</span></span><br><span class="line"><span class="comment">  * fresh, converted from an unused view, or used as is if it was in the</span></span><br><span class="line"><span class="comment">  * recycle bin.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> position Logical position in the list</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> y Top or bottom edge of the view to add</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> flow If flow is true, align top edge to y. If false, align bottom</span></span><br><span class="line"><span class="comment">  *        edge to y.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> childrenLeft Left edge where children should be positioned</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> selected Is this position selected?</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> View that was added</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> View <span class="title">makeAndAddView</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">int</span> y, <span class="keyword">boolean</span> flow, <span class="keyword">int</span> childrenLeft,</span></span></span><br><span class="line"><span class="function"><span class="params">         <span class="keyword">boolean</span> selected)</span> </span>&#123;</span><br><span class="line">     View child;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (!mDataChanged) &#123;</span><br><span class="line">         <span class="comment">// Try to use an existing view for this position</span></span><br><span class="line">         child = mRecycler.getActiveView(position);</span><br><span class="line">         <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">             <span class="comment">// Found it -- we're using an existing child</span></span><br><span class="line">             <span class="comment">// This just needs to be positioned</span></span><br><span class="line">             setupChild(child, position, y, flow, childrenLeft, selected, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">             <span class="keyword">return</span> child;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Make a new view for this position, or convert an unused view if possible</span></span><br><span class="line">     child = obtainView(position, mIsScrap);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// This needs to be positioned and measured</span></span><br><span class="line">     setupChild(child, position, y, flow, childrenLeft, selected, mIsScrap[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> child;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="setupChild"><a href="#setupChild" class="headerlink" title="setupChild"></a>setupChild</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add a view as a child and make sure it is measured (if necessary) and</span></span><br><span class="line"><span class="comment"> * positioned properly.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> child The view to add</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> position The position of this child</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> y The y position relative to which this view will be positioned</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> flowDown If true, align top edge to y. If false, align bottom</span></span><br><span class="line"><span class="comment"> *        edge to y.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> childrenLeft Left edge where children should be positioned</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> selected Is this position selected?</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> recycled Has this view been pulled from the recycle bin? If so it</span></span><br><span class="line"><span class="comment"> *        does not need to be remeasured.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupChild</span><span class="params">(View child, <span class="keyword">int</span> position, <span class="keyword">int</span> y, <span class="keyword">boolean</span> flowDown, <span class="keyword">int</span> childrenLeft,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">boolean</span> selected, <span class="keyword">boolean</span> recycled)</span> </span>&#123;</span><br><span class="line">     <span class="comment">//.............</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((recycled &amp;&amp; !p.forceAdd) || (p.recycledHeaderFooter</span><br><span class="line">            &amp;&amp; p.viewType == AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER)) &#123;</span><br><span class="line">        attachViewToParent(child, flowDown ? -<span class="number">1</span> : <span class="number">0</span>, p);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        p.forceAdd = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (p.viewType == AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER) &#123;</span><br><span class="line">            p.recycledHeaderFooter = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="comment">//HERE:</span></span><br><span class="line">        addViewInLayout(child, flowDown ? -<span class="number">1</span> : <span class="number">0</span>, p, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (updateChildSelected) &#123;</span><br><span class="line">        child.setSelected(isSelected);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (updateChildPressed) &#123;</span><br><span class="line">        child.setPressed(isPressed);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mChoiceMode != CHOICE_MODE_NONE &amp;&amp; mCheckStates != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (child <span class="keyword">instanceof</span> Checkable) &#123;</span><br><span class="line">            ((Checkable) child).setChecked(mCheckStates.get(position));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (getContext().getApplicationInfo().targetSdkVersion</span><br><span class="line">                &gt;= android.os.Build.VERSION_CODES.HONEYCOMB) &#123;</span><br><span class="line">            child.setActivated(mCheckStates.get(position));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// reMeasure..........</span></span><br><span class="line">    <span class="keyword">if</span> (needToMeasure) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> childWidthSpec = ViewGroup.getChildMeasureSpec(mWidthMeasureSpec,</span><br><span class="line">                mListPadding.left + mListPadding.right, p.width);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> lpHeight = p.height;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> childHeightSpec;</span><br><span class="line">        <span class="keyword">if</span> (lpHeight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            childHeightSpec = MeasureSpec.makeMeasureSpec(lpHeight, MeasureSpec.EXACTLY);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            childHeightSpec = MeasureSpec.makeSafeMeasureSpec(getMeasuredHeight(),</span><br><span class="line">                    MeasureSpec.UNSPECIFIED);</span><br><span class="line">        &#125;</span><br><span class="line">        child.measure(childWidthSpec, childHeightSpec);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cleanupLayoutState(child);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> w = child.getMeasuredWidth();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> h = child.getMeasuredHeight();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> childTop = flowDown ? y : y - h;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (needToMeasure) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> childRight = childrenLeft + w;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> childBottom = childTop + h;</span><br><span class="line">        child.layout(childrenLeft, childTop, childRight, childBottom);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        child.offsetLeftAndRight(childrenLeft - child.getLeft());</span><br><span class="line">        child.offsetTopAndBottom(childTop - child.getTop());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//........</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="addViewInLayout"><a href="#addViewInLayout" class="headerlink" title="addViewInLayout"></a>addViewInLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Adds a view during layout. This is useful if in your onLayout() method,</span></span><br><span class="line"><span class="comment">     * you need to add more views (as does the list view for example).</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * If index is negative, it means put it at the end of the list.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> child the view to add to the group</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index the index at which the child must be added or -1 to add last</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params the layout parameters to associate with the child</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> preventRequestLayout if true, calling this method will not trigger a</span></span><br><span class="line"><span class="comment">     *        layout request on child</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if the child was added, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">addViewInLayout</span><span class="params">(View child, <span class="keyword">int</span> index, LayoutParams params,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">boolean</span> preventRequestLayout)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (child == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Cannot add a null child view to a ViewGroup"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        child.mParent = <span class="keyword">null</span>;</span><br><span class="line">        addViewInner(child, index, params, preventRequestLayout);</span><br><span class="line">        child.mPrivateFlags = (child.mPrivateFlags &amp; ~PFLAG_DIRTY_MASK) | PFLAG_DRAWN;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*---------------Things to do ----------------</span></span><br><span class="line"><span class="comment">* addInArray</span></span><br><span class="line"><span class="comment">* assignPanrent</span></span><br><span class="line"><span class="comment">* requestFocus</span></span><br><span class="line"><span class="comment">* dispatchAttachInfo</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addViewInner</span><span class="params">(View child, <span class="keyword">int</span> index, LayoutParams params,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">boolean</span> preventRequestLayout)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//....</span></span><br><span class="line">        <span class="keyword">if</span> (!checkLayoutParams(params)) &#123;</span><br><span class="line">            params = generateLayoutParams(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (preventRequestLayout) &#123;</span><br><span class="line">            child.mLayoutParams = params;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            child.setLayoutParams(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            index = mChildrenCount;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        addInArray(child, index);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// tell our children</span></span><br><span class="line">        <span class="keyword">if</span> (preventRequestLayout) &#123;</span><br><span class="line">            child.assignParent(<span class="keyword">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            child.mParent = <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (child.hasFocus()) &#123;</span><br><span class="line">            requestChildFocus(child, child.findFocus());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        AttachInfo ai = mAttachInfo;</span><br><span class="line">        <span class="keyword">if</span> (ai != <span class="keyword">null</span> &amp;&amp; (mGroupFlags &amp; FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> lastKeepOn = ai.mKeepScreenOn;</span><br><span class="line">            ai.mKeepScreenOn = <span class="keyword">false</span>;</span><br><span class="line">            child.dispatchAttachedToWindow(mAttachInfo, (mViewFlags&amp;VISIBILITY_MASK));</span><br><span class="line">            <span class="keyword">if</span> (ai.mKeepScreenOn) &#123;</span><br><span class="line">                needGlobalAttributesUpdate(<span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            ai.mKeepScreenOn = lastKeepOn;</span><br><span class="line">   <span class="comment">//.............</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="回收机制"><a href="#回收机制" class="headerlink" title="回收机制"></a>回收机制</h3><h4 id="RecycleBin"><a href="#RecycleBin" class="headerlink" title="RecycleBin"></a>RecycleBin</h4><h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">       The RecycleBin facilitates reuse of views across layouts. The RecycleBin has two levels of</span><br><span class="line">storage: ActiveViews and ScrapViews. ActiveViews are those views which were onscreen at the</span><br><span class="line">start of a layout. By construction, they are displaying current information. At the end of layout, all views in ActiveViews are demoted to ScrapViews. ScrapViews are old views that</span><br><span class="line">could potentially be used by the adapter to avoid allocating views unnecessarily.</span><br></pre></td></tr></table></figure><h5 id="关键参数"><a href="#关键参数" class="headerlink" title="关键参数"></a>关键参数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The position of the first view stored in mActiveViews.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> mFirstActivePosition;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Views that were on screen at the start of layout. This array is populated at the start of layout, and at the end of layout all view in mActiveViews are moved to mScrapViews.Views in mActiveViews represent a contiguous range of Views, with position of the first view store in mFirstActivePosition.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> View[] mActiveViews = <span class="keyword">new</span> View[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unsorted views that can be used by the adapter as a convert view.</span></span><br><span class="line"><span class="comment"> * eg: ArrayList&lt;View&gt;[TYPE1]=......</span></span><br><span class="line"><span class="comment"> *     ArrayList&lt;View&gt;[TYPE2]=......</span></span><br><span class="line"><span class="comment"> *     ArrayList&lt;View&gt;[TYPE3]=...... </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> ArrayList&lt;View&gt;[] mScrapViews;</span><br></pre></td></tr></table></figure><h5 id="关键方法"><a href="#关键方法" class="headerlink" title="关键方法"></a>关键方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//usage:addToActiveViews</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> View <span class="title">retrieveFromScrap</span><span class="params">(ArrayList&lt;View&gt; scrapViews, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> size = scrapViews.size();</span><br><span class="line">            <span class="keyword">if</span> (size &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// See if we still have a view for this position or ID.</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">                    <span class="keyword">final</span> View view = scrapViews.get(i);</span><br><span class="line">                    <span class="keyword">final</span> AbsListView.LayoutParams params =</span><br><span class="line">                            (AbsListView.LayoutParams) view.getLayoutParams();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (mAdapterHasStableIds) &#123;</span><br><span class="line">                        <span class="keyword">final</span> <span class="keyword">long</span> id = mAdapter.getItemId(position);</span><br><span class="line">                        <span class="keyword">if</span> (id == params.itemId) &#123;</span><br><span class="line">                            <span class="keyword">return</span> scrapViews.remove(i);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (params.scrappedFromPosition == position) &#123;</span><br><span class="line">                        <span class="keyword">final</span> View scrap = scrapViews.remove(i);</span><br><span class="line">                        clearAccessibilityFromScrap(scrap);</span><br><span class="line">                        <span class="keyword">return</span> scrap;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">final</span> View scrap = scrapViews.remove(size - <span class="number">1</span>);</span><br><span class="line">                clearAccessibilityFromScrap(scrap);</span><br><span class="line">                <span class="keyword">return</span> scrap;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//usage:removeFromActiveViews</span></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Puts a view into the list of scrap views.</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;</span></span><br><span class="line"><span class="comment">         * If the list data hasn't changed or the adapter has stable IDs, views</span></span><br><span class="line"><span class="comment">         * with transient state will be preserved for later retrieval.</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> scrap The view to add</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> position The view's position within its parent</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">addScrapView</span><span class="params">(View scrap, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">final</span> AbsListView.LayoutParams lp = (AbsListView.LayoutParams) scrap.getLayoutParams();</span><br><span class="line">            <span class="keyword">if</span> (lp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// Can't recycle, but we don't know anything about the view.</span></span><br><span class="line">                <span class="comment">// Ignore it completely.</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            lp.scrappedFromPosition = position;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Remove but don't scrap header or footer views, or views that</span></span><br><span class="line">            <span class="comment">// should otherwise not be recycled.</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> viewType = lp.viewType;</span><br><span class="line">            <span class="keyword">if</span> (!shouldRecycleViewType(viewType)) &#123;</span><br><span class="line">                <span class="comment">// Can't recycle. If it's not a header or footer, which have</span></span><br><span class="line">                <span class="comment">// special handling and should be ignored, then skip the scrap</span></span><br><span class="line">                <span class="comment">// heap and we'll fully detach the view later.</span></span><br><span class="line">                <span class="keyword">if</span> (viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER) &#123;</span><br><span class="line">                    getSkippedScrap().add(scrap);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//................</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Don't scrap views that have transient state.</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> scrapHasTransientState = scrap.hasTransientState();</span><br><span class="line">            <span class="keyword">if</span> (scrapHasTransientState) &#123;</span><br><span class="line">            <span class="comment">//...............</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mViewTypeCount == <span class="number">1</span>) &#123;</span><br><span class="line">                    mCurrentScrap.add(scrap);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mScrapViews[viewType].add(scrap);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (mRecyclerListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mRecyclerListener.onMovedToScrapHeap(scrap);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h5 id="recycle模型"><a href="#recycle模型" class="headerlink" title="recycle模型"></a>recycle模型</h5><p><img src="/images/ListView_RecycleBin.png" alt="ListView_RecycleBin"></p><h2 id="onTouchEvent事件的处理"><a href="#onTouchEvent事件的处理" class="headerlink" title="onTouchEvent事件的处理"></a>onTouchEvent事件的处理</h2><h3 id="一般流程-1"><a href="#一般流程-1" class="headerlink" title="一般流程"></a>一般流程</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AbsListView:</span><br><span class="line">onTouchEvent-&gt;</span><br><span class="line">onTouchMove-&gt;</span><br><span class="line">scrollIfNeeded-&gt;</span><br><span class="line">trackMotionScroll</span><br></pre></td></tr></table></figure><h4 id="trackMotionScroll"><a href="#trackMotionScroll" class="headerlink" title="trackMotionScroll"></a>trackMotionScroll</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Track a motion scroll</span></span><br><span class="line"><span class="comment"> * 1.when the motion is moving,you should first addScrapView by inceamentDeltay</span></span><br><span class="line"><span class="comment"> * 2.detachViewsFromParent ,this method to modify the viewTree by motion</span></span><br><span class="line"><span class="comment"> * 3.fillGap</span></span><br><span class="line"><span class="comment"> *   if(incrementalDeltaY &lt; 0)&#123;</span></span><br><span class="line"><span class="comment"> *      //as down</span></span><br><span class="line"><span class="comment"> *      fillDown(int pos, int nextTop)</span></span><br><span class="line"><span class="comment"> *   &#125;else&#123;</span></span><br><span class="line"><span class="comment"> *       //as up</span></span><br><span class="line"><span class="comment"> *      fillUp(int pos, int nextBottom)</span></span><br><span class="line"><span class="comment"> *   &#125;</span></span><br><span class="line"><span class="comment"> * // also here by use the method  makeAndaddView,obtinView,setupView</span></span><br><span class="line"><span class="comment"> *   to reuse the view</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Here is the difference between deltaY and incrementalDeltaY.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> deltaY Amount to offset mMotionView. This is the accumulated delta since the motion</span></span><br><span class="line"><span class="comment"> *        began. Positive numbers mean the user's finger is moving down the screen.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> incrementalDeltaY Change in deltaY from the previous event.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true if we're already at the beginning/end of the list and have nothing to do.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">trackMotionScroll</span><span class="params">(<span class="keyword">int</span> deltaY, <span class="keyword">int</span> incrementalDeltaY)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> height = getHeight() - mPaddingBottom - mPaddingTop;</span><br><span class="line">    <span class="keyword">if</span> (deltaY &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        deltaY = Math.max(-(height - <span class="number">1</span>), deltaY);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        deltaY = Math.min(height - <span class="number">1</span>, deltaY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (incrementalDeltaY &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        incrementalDeltaY = Math.max(-(height - <span class="number">1</span>), incrementalDeltaY);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        incrementalDeltaY = Math.min(height - <span class="number">1</span>, incrementalDeltaY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> down = incrementalDeltaY &lt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (down) &#123;</span><br><span class="line">        <span class="comment">//......</span></span><br><span class="line">      <span class="comment">//how to addScrapView by motion down</span></span><br><span class="line">                    mRecycler.addScrapView(child, position);</span><br><span class="line">   </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="comment">//......</span></span><br><span class="line">      <span class="comment">//how to addScrapView by motion up</span></span><br><span class="line">                    mRecycler.addScrapView(child, position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        detachViewsFromParent(start, count);</span><br><span class="line">        mRecycler.removeSkippedScrap();</span><br><span class="line">   <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> absIncrementalDeltaY = Math.abs(incrementalDeltaY);</span><br><span class="line">    <span class="keyword">if</span> (spaceAbove &lt; absIncrementalDeltaY || spaceBelow &lt; absIncrementalDeltaY) &#123;</span><br><span class="line">        fillGap(down);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fillGap"><a href="#fillGap" class="headerlink" title="fillGap"></a>fillGap</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* a interface method for the function with fillDown and fillUp </span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">fillGap</span><span class="params">(<span class="keyword">boolean</span> down)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">int</span> count = getChildCount();</span><br><span class="line">       <span class="keyword">if</span> (down) &#123;</span><br><span class="line">           <span class="keyword">int</span> paddingTop = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span> ((mGroupFlags &amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) &#123;</span><br><span class="line">               paddingTop = getListPaddingTop();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">final</span> <span class="keyword">int</span> startOffset = count &gt; <span class="number">0</span> ? getChildAt(count - <span class="number">1</span>).getBottom() + mDividerHeight :</span><br><span class="line">                   paddingTop;</span><br><span class="line">           fillDown(mFirstPosition + count, startOffset);</span><br><span class="line">           correctTooHigh(getChildCount());</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">int</span> paddingBottom = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span> ((mGroupFlags &amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) &#123;</span><br><span class="line">               paddingBottom = getListPaddingBottom();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">final</span> <span class="keyword">int</span> startOffset = count &gt; <span class="number">0</span> ? getChildAt(<span class="number">0</span>).getTop() - mDividerHeight :</span><br><span class="line">                   getHeight() - paddingBottom;</span><br><span class="line">           fillUp(mFirstPosition - <span class="number">1</span>, startOffset);</span><br><span class="line">           correctTooLow(getChildCount());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="velocityTracker"><a href="#velocityTracker" class="headerlink" title="velocityTracker"></a>velocityTracker</h3><h4 id="背景-1"><a href="#背景-1" class="headerlink" title="背景"></a>背景</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">手势速度判断的工具类。</span><br><span class="line">用obtain来获取velocityTracker对象；</span><br><span class="line">用addMoveMent来添加需要观察的motionEvent;</span><br><span class="line">用computerCurrentVelocity来计算速度；</span><br><span class="line">用getXVelocity和getYVelocity来做相应的定制化行为处理事件</span><br></pre></td></tr></table></figure><h4 id="obtain"><a href="#obtain" class="headerlink" title="obtain"></a>obtain</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SynchronizedPool&lt;VelocityTracker&gt; sPool =</span><br><span class="line">          <span class="keyword">new</span> SynchronizedPool&lt;VelocityTracker&gt;(<span class="number">2</span>);<span class="comment">//经常使用的耗资源对象 </span></span><br><span class="line"><span class="comment">//......</span></span><br><span class="line">     <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> VelocityTracker <span class="title">obtain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         VelocityTracker instance = sPool.acquire();</span><br><span class="line">         <span class="keyword">return</span> (instance != <span class="keyword">null</span>) ? instance : <span class="keyword">new</span> VelocityTracker(<span class="keyword">null</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="computerCureentVelocity"><a href="#computerCureentVelocity" class="headerlink" title="computerCureentVelocity"></a>computerCureentVelocity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">Compute the current velocity based on the points that have been collected. Only call this when you actually want to retrieve velocity information, as it is relatively expensive. You can then retrieve the velocity with getXVelocity() and getYVelocity().</span></span><br><span class="line"><span class="comment">Parameters:</span></span><br><span class="line"><span class="comment">units The units you would like the velocity in. A value of 1 provides pixels per millisecond, 1000 provides pixels per second, etc.</span></span><br><span class="line"><span class="comment">maxVelocity The maximum velocity that can be computed by this method. This value must be declared in the same unit as the units parameter. This value must be positive.</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">computeCurrentVelocity</span><span class="params">(<span class="keyword">int</span> units, <span class="keyword">float</span> maxVelocity)</span> </span>&#123;</span><br><span class="line">       nativeComputeCurrentVelocity(mPtr, units, maxVelocity);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="GestureDetector"><a href="#GestureDetector" class="headerlink" title="GestureDetector"></a>GestureDetector</h3><h4 id="背景-2"><a href="#背景-2" class="headerlink" title="背景"></a>背景</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MotionEevent分析工具类</span><br><span class="line">用new GestureDetector(Context context, OnGestureListener listener)的listener传入需要分析的操作类型</span><br><span class="line">用onTouchEvent(MotionEvent event)来分析具体的motion.eg onDoubleTap,onFling etc.</span><br></pre></td></tr></table></figure><h3 id="NestedScrolling"><a href="#NestedScrolling" class="headerlink" title="NestedScrolling"></a>NestedScrolling</h3><h4 id="背景-3"><a href="#背景-3" class="headerlink" title="背景"></a>背景</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">痛点:如果子view获得处理touch事件机会的时候，父view就再也没有机会去处理这个touch事件了，直到下一次手指再按下</span><br><span class="line">解决:定义了一套子view的滑动和父view的交互机制</span><br></pre></td></tr></table></figure><h4 id="关于ListView的处理"><a href="#关于ListView的处理" class="headerlink" title="关于ListView的处理"></a>关于ListView的处理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">View (rolePlayer as children)</span><br><span class="line">stopNestedScroll</span><br><span class="line">startNestedScroll</span><br><span class="line">dispatchNestedPreScroll</span><br><span class="line">dispatchNestedScroll</span><br><span class="line"></span><br><span class="line">AbsListView(rolePlayer as parent)</span><br><span class="line">onNestedScroll</span><br><span class="line">onNestedScrollAccepted</span><br><span class="line">onStartNestedScroll</span><br></pre></td></tr></table></figure><h4 id="google的再次抽象"><a href="#google的再次抽象" class="headerlink" title="google的再次抽象"></a>google的再次抽象</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">NestedScrollingParent 父容器实现接口</span><br><span class="line">NestedScrollingChild 子容器实现接口</span><br><span class="line">NestedScrollingChildHelper 子容器帮助类,主要作用找到父容器并传递相应参数</span><br><span class="line">NestedScrollingParentHelper 父容器帮助类,主要作用是接受与分发motion事件</span><br><span class="line"></span><br><span class="line">一般流程：</span><br><span class="line">子view的onTouchEvent()</span><br><span class="line"></span><br><span class="line">Motion.Down:</span><br><span class="line">————–Child startNestedScroll—————— </span><br><span class="line">—-Parent   onStartNestedScroll—————- </span><br><span class="line">—-Parent   onNestedScrollAccepted————— </span><br><span class="line"></span><br><span class="line">Motion.Move:</span><br><span class="line">———–Child 把总的滚动距离传给父布局 dispatchNestedPreScroll——– </span><br><span class="line">—-Parent  onNestedPreScroll—————- </span><br><span class="line">———–Child 把剩余的滚动距离传给父布局 dispatchNestedScroll——- </span><br><span class="line">—-Parent  onNestedScroll—————- </span><br><span class="line"></span><br><span class="line">Motion.Up</span><br><span class="line">———–Child 停止滚动 stopNestedScroll————— </span><br><span class="line">—-Parent  onStopNestedScroll—————-</span><br></pre></td></tr></table></figure><h3 id="Interpolator"><a href="#Interpolator" class="headerlink" title="Interpolator"></a>Interpolator</h3><h4 id="背景-4"><a href="#背景-4" class="headerlink" title="背景"></a>背景</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">matlab里有一个插值的概念，而在手机app中有很多加速或者减速的运动，需要再相同的时间间隔内获取不同的间距</span><br></pre></td></tr></table></figure><h4 id="getInterpolation"><a href="#getInterpolation" class="headerlink" title="getInterpolation"></a>getInterpolation</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//eg:DecelerateInterpolator</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * An interpolator where the rate of change starts out quickly and</span></span><br><span class="line"><span class="comment"> * and then decelerates.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> factor Degree to which the animation should be eased. Setting factor to 1.0f produces</span></span><br><span class="line"><span class="comment">     *        an upside-down y=x^2 parabola. Increasing factor above 1.0f makes exaggerates the</span></span><br><span class="line"><span class="comment">     *        ease-out effect (i.e., it starts even faster and ends evens slower)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DecelerateInterpolator</span><span class="params">(<span class="keyword">float</span> factor)</span> </span>&#123;</span><br><span class="line">        mFactor = factor;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//input 从0到1的匀速时间的百分比</span></span><br><span class="line"><span class="comment">//output 对应时间百分比下的value的百分比,有可能大于1或者小于0的情况.</span></span><br><span class="line"><span class="comment">//获得output值后根据自身的实际情况来更新视图</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getInterpolation</span><span class="params">(<span class="keyword">float</span> input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> result;</span><br><span class="line">        <span class="keyword">if</span> (mFactor == <span class="number">1.0f</span>) &#123;</span><br><span class="line">            result = (<span class="keyword">float</span>)(<span class="number">1.0f</span> - (<span class="number">1.0f</span> - input) * (<span class="number">1.0f</span> - input));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = (<span class="keyword">float</span>)(<span class="number">1.0f</span> - Math.pow((<span class="number">1.0f</span> - input), <span class="number">2</span> * mFactor));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//......</span></span><br></pre></td></tr></table></figure><h2 id="ListView点击事件"><a href="#ListView点击事件" class="headerlink" title="ListView点击事件"></a>ListView点击事件</h2><h3 id="为什么点击失效了"><a href="#为什么点击失效了" class="headerlink" title="为什么点击失效了"></a>为什么点击失效了</h3><ul><li><p>WHAT</p><p>在Listview的Item里面有一个Button,那么这个item的点击事件往往不会被触发到</p></li><li><p>HOW</p><p>在Item的根布局上增加,android:descendantFocusability=”blocksDescendants”</p></li><li><p>WHY</p><ol><li><p>Descendant</p><h5 id="焦点管理"><a href="#焦点管理" class="headerlink" title="焦点管理"></a>焦点管理</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">requestFocus -&gt; </span><br><span class="line">requestFocusNoSearch -&gt; </span><br><span class="line">handleFocusGainInternal -&gt; (dispatchOnGlobalFocusChange,onFocusChanged,refreshDrawableState)</span><br></pre></td></tr></table></figure><h5 id="requestFocusNoSearch"><a href="#requestFocusNoSearch" class="headerlink" title="requestFocusNoSearch"></a>requestFocusNoSearch</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">requestFocusNoSearch</span><span class="params">(<span class="keyword">int</span> direction, Rect previouslyFocusedRect)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// need to be focusable</span></span><br><span class="line">     <span class="keyword">if</span> ((mViewFlags &amp; FOCUSABLE_MASK) != FOCUSABLE ||</span><br><span class="line">             (mViewFlags &amp; VISIBILITY_MASK) != VISIBLE) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// need to be focusable in touch mode if in touch mode</span></span><br><span class="line">     <span class="keyword">if</span> (isInTouchMode() &amp;&amp;</span><br><span class="line">         (FOCUSABLE_IN_TOUCH_MODE != (mViewFlags &amp; FOCUSABLE_IN_TOUCH_MODE))) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//the xml tag works here</span></span><br><span class="line">     <span class="comment">// need to not have any parents blocking us</span></span><br><span class="line">     <span class="keyword">if</span> (hasAncestorThatBlocksDescendantFocus()) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     handleFocusGainInternal(direction, previouslyFocusedRect);</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="handleFocusGainInternal"><a href="#handleFocusGainInternal" class="headerlink" title="handleFocusGainInternal"></a>handleFocusGainInternal</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*Three things to do</span></span><br><span class="line"><span class="comment">* 1.onFocusChange</span></span><br><span class="line"><span class="comment">* 2.dispatchFocusChange</span></span><br><span class="line"><span class="comment">* 3.refreshDrawableState</span></span><br><span class="line"><span class="comment"> * Give this view focus. This will cause</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #onFocusChanged(boolean, int, android.graphics.Rect)&#125; to be called.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Note: this does not check whether this &#123;<span class="doctag">@link</span> View&#125; should get focus, it just</span></span><br><span class="line"><span class="comment"> * gives it focus no matter what.  It should only be called internally by framework</span></span><br><span class="line"><span class="comment"> * code that knows what it is doing, namely &#123;<span class="doctag">@link</span> #requestFocus(int, Rect)&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> direction values are &#123;<span class="doctag">@link</span> View#FOCUS_UP&#125;, &#123;<span class="doctag">@link</span> View#FOCUS_DOWN&#125;,</span></span><br><span class="line"><span class="comment"> *        &#123;<span class="doctag">@link</span> View#FOCUS_LEFT&#125; or &#123;<span class="doctag">@link</span> View#FOCUS_RIGHT&#125;. This is the direction which</span></span><br><span class="line"><span class="comment"> *        focus moved when requestFocus() is called. It may not always</span></span><br><span class="line"><span class="comment"> *        apply, in which case use the default View.FOCUS_DOWN.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> previouslyFocusedRect The rectangle of the view that had focus</span></span><br><span class="line"><span class="comment"> *        prior in this View's coordinate system.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleFocusGainInternal</span><span class="params">(@FocusRealDirection <span class="keyword">int</span> direction, Rect previouslyFocusedRect)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (DBG) &#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span> + <span class="string">" requestFocus()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((mPrivateFlags &amp; PFLAG_FOCUSED) == <span class="number">0</span>) &#123;</span><br><span class="line">        mPrivateFlags |= PFLAG_FOCUSED;</span><br><span class="line"></span><br><span class="line">        View oldFocus = (mAttachInfo != <span class="keyword">null</span>) ? getRootView().findFocus() : <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mParent != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mParent.requestChildFocus(<span class="keyword">this</span>, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mAttachInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mAttachInfo.mTreeObserver.dispatchOnGlobalFocusChange(oldFocus, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        onFocusChanged(<span class="keyword">true</span>, direction, previouslyFocusedRect);</span><br><span class="line">        refreshDrawableState();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>ItemOnClick事件</p><h5 id="处理流程"><a href="#处理流程" class="headerlink" title="处理流程"></a>处理流程</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">abslistView:onTouchEvent()</span><br><span class="line">-&gt;onTouchUp()</span><br><span class="line">-&gt;PerformClick.run()</span><br></pre></td></tr></table></figure><h5 id="onTouchUp"><a href="#onTouchUp" class="headerlink" title="onTouchUp"></a>onTouchUp</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onTouchUp</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">switch</span> (mTouchMode) &#123;</span><br><span class="line">      <span class="keyword">case</span> TOUCH_MODE_DOWN:</span><br><span class="line">      <span class="keyword">case</span> TOUCH_MODE_TAP:</span><br><span class="line">      <span class="keyword">case</span> TOUCH_MODE_DONE_WAITING:</span><br><span class="line">          <span class="keyword">final</span> <span class="keyword">int</span> motionPosition = mMotionPosition;</span><br><span class="line">          <span class="keyword">final</span> View child = getChildAt(motionPosition - mFirstPosition);</span><br><span class="line">          <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (mTouchMode != TOUCH_MODE_DOWN) &#123;</span><br><span class="line">                  child.setPressed(<span class="keyword">false</span>);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">float</span> x = ev.getX();</span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">boolean</span> inList = x &gt; mListPadding.left &amp;&amp; x &lt; getWidth() - mListPadding.right;</span><br><span class="line">              <span class="comment">// here to decide to invoke which child</span></span><br><span class="line">              <span class="keyword">if</span> (inList &amp;&amp; !child.hasFocusable()) &#123;</span><br><span class="line">              <span class="comment">//.......</span></span><br><span class="line">                 ｝</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> TOUCH_MODE_SCROLL:</span><br><span class="line">         <span class="comment">//......</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​</p></li></ol></li></ul><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="阻尼效果"><a href="#阻尼效果" class="headerlink" title="阻尼效果"></a>阻尼效果</h3><h4 id="背景-5"><a href="#背景-5" class="headerlink" title="背景"></a>背景</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ios 在系统层面上实现了触碰边缘的阻尼回弹效果,通知用户已经到达了边界。但是由于专利的问题，android在无法在系统层面上使用统一的效果，但是通过了一个渐变的颜色来告知用户已经到达了边界状态</span><br></pre></td></tr></table></figure><h4 id="How-to-Invoke"><a href="#How-to-Invoke" class="headerlink" title="How to Invoke"></a>How to Invoke</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AbsListView:onTouchEvent-&gt;</span><br><span class="line">AbsListView:onTouchMove-&gt;</span><br><span class="line">AbsListView:startScrollIfNeeded-&gt;</span><br><span class="line">AbsListView:scrollIfNeeded-&gt;//effect</span><br><span class="line">View:overScrollBy-&gt;//action</span><br><span class="line">View:onOverScrolled</span><br></pre></td></tr></table></figure><h4 id="overScrollBy"><a href="#overScrollBy" class="headerlink" title="overScrollBy"></a>overScrollBy</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.this is a method help for caculate the distance when overScroll has happened</span></span><br><span class="line"><span class="comment"> * 2.ListView,Webview,ScrollView,HorizontalScrollView has then same scource code</span></span><br><span class="line"><span class="comment"> * 3.when to peresent when overScroll,this is decided by the overridde method onOverScrolled</span></span><br><span class="line"><span class="comment"> * 4.ablistview input the valus maxOverScrollY = ViewConfiguration.mOverscrollDistance = 0;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Scroll the view with standard behavior for scrolling beyond the normal</span></span><br><span class="line"><span class="comment"> * content boundaries. Views that call this method should override</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #onOverScrolled(int, int, boolean, boolean)&#125; to respond to the</span></span><br><span class="line"><span class="comment"> * results of an over-scroll operation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Views can use this method to handle any touch or fling-based scrolling.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> deltaX Change in X in pixels</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> deltaY Change in Y in pixels</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> scrollX Current X scroll value in pixels before applying deltaX</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> scrollY Current Y scroll value in pixels before applying deltaY</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> scrollRangeX Maximum content scroll range along the X axis</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> scrollRangeY Maximum content scroll range along the Y axis</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> maxOverScrollX Number of pixels to overscroll by in either direction</span></span><br><span class="line"><span class="comment"> *          along the X axis.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> maxOverScrollY Number of pixels to overscroll by in either direction</span></span><br><span class="line"><span class="comment"> *          along the Y axis.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> isTouchEvent true if this scroll operation is the result of a touch event.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true if scrolling was clamped to an over-scroll boundary along either</span></span><br><span class="line"><span class="comment"> *          axis, false otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"UnusedParameters"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">overScrollBy</span><span class="params">(<span class="keyword">int</span> deltaX, <span class="keyword">int</span> deltaY,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> scrollX, <span class="keyword">int</span> scrollY,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> scrollRangeX, <span class="keyword">int</span> scrollRangeY,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> maxOverScrollX, <span class="keyword">int</span> maxOverScrollY,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">boolean</span> isTouchEvent)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> overScrollMode = mOverScrollMode;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> canScrollHorizontal =</span><br><span class="line">            computeHorizontalScrollRange() &gt; computeHorizontalScrollExtent();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> canScrollVertical =</span><br><span class="line">            computeVerticalScrollRange() &gt; computeVerticalScrollExtent();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> overScrollHorizontal = overScrollMode == OVER_SCROLL_ALWAYS ||</span><br><span class="line">            (overScrollMode == OVER_SCROLL_IF_CONTENT_SCROLLS &amp;&amp; canScrollHorizontal);</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> overScrollVertical = overScrollMode == OVER_SCROLL_ALWAYS ||</span><br><span class="line">            (overScrollMode == OVER_SCROLL_IF_CONTENT_SCROLLS &amp;&amp; canScrollVertical);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> newScrollX = scrollX + deltaX;</span><br><span class="line">    <span class="keyword">if</span> (!overScrollHorizontal) &#123;</span><br><span class="line">        maxOverScrollX = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> newScrollY = scrollY + deltaY;</span><br><span class="line">    <span class="keyword">if</span> (!overScrollVertical) &#123;</span><br><span class="line">        maxOverScrollY = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clamp values if at the limits and record</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> left = -maxOverScrollX;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> right = maxOverScrollX + scrollRangeX;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> top = -maxOverScrollY;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> bottom = maxOverScrollY + scrollRangeY;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> clampedX = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (newScrollX &gt; right) &#123;</span><br><span class="line">        newScrollX = right;</span><br><span class="line">        clampedX = <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (newScrollX &lt; left) &#123;</span><br><span class="line">        newScrollX = left;</span><br><span class="line">        clampedX = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> clampedY = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (newScrollY &gt; bottom) &#123;</span><br><span class="line">        newScrollY = bottom;</span><br><span class="line">        clampedY = <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (newScrollY &lt; top) &#123;</span><br><span class="line">        newScrollY = top;</span><br><span class="line">        clampedY = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    onOverScrolled(newScrollX, newScrollY, clampedX, clampedY);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> clampedX || clampedY;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Android的原生阻尼"><a href="#Android的原生阻尼" class="headerlink" title="Android的原生阻尼"></a>Android的原生阻尼</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * use </span></span><br><span class="line"><span class="comment">     * EdgeEffect mEdgeGlowTop;Tracks the state of the top edge glow.</span></span><br><span class="line"><span class="comment">     * EdgeEffect mEdgeGlowBottom;Tracks the state of the bottom edge glow.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vtev </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">scrollIfNeeded</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, MotionEvent vtev)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">                            <span class="keyword">final</span> <span class="keyword">int</span> overscrollMode = getOverScrollMode();</span><br><span class="line">                            <span class="keyword">if</span> (overscrollMode == OVER_SCROLL_ALWAYS ||</span><br><span class="line">                                    (overscrollMode == OVER_SCROLL_IF_CONTENT_SCROLLS &amp;&amp;</span><br><span class="line">                                            !contentFits())) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!atOverscrollEdge) &#123;</span><br><span class="line">                                    mDirection = <span class="number">0</span>; <span class="comment">// Reset when entering overscroll.</span></span><br><span class="line">                                    mTouchMode = TOUCH_MODE_OVERSCROLL;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">if</span> (incrementalDeltaY &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    mEdgeGlowTop.onPull((<span class="keyword">float</span>) -overscroll / getHeight(),</span><br><span class="line">                                            (<span class="keyword">float</span>) x / getWidth());</span><br><span class="line">                                    <span class="keyword">if</span> (!mEdgeGlowBottom.isFinished()) &#123;</span><br><span class="line">                                        mEdgeGlowBottom.onRelease();</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    invalidateTopGlow();</span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (incrementalDeltaY &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    mEdgeGlowBottom.onPull((<span class="keyword">float</span>) overscroll / getHeight(),</span><br><span class="line">                                            <span class="number">1</span>.f - (<span class="keyword">float</span>) x / getWidth());</span><br><span class="line">                                    <span class="keyword">if</span> (!mEdgeGlowTop.isFinished()) &#123;</span><br><span class="line">                                        mEdgeGlowTop.onRelease();</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    invalidateBottomGlow();</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    mMotionY = y + lastYCorrection + scrollOffsetCorrection;</span><br><span class="line">                &#125;</span><br><span class="line">                mLastY = y + lastYCorrection + scrollOffsetCorrection;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mTouchMode == TOUCH_MODE_OVERSCROLL) &#123;</span><br><span class="line">            <span class="keyword">if</span> (y != mLastY) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> oldScroll = mScrollY;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> newScroll = oldScroll - incrementalDeltaY;</span><br><span class="line">                <span class="keyword">int</span> newDirection = y &gt; mLastY ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (mDirection == <span class="number">0</span>) &#123;</span><br><span class="line">                    mDirection = newDirection;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> overScrollDistance = -incrementalDeltaY;</span><br><span class="line">                <span class="keyword">if</span> ((newScroll &lt; <span class="number">0</span> &amp;&amp; oldScroll &gt;= <span class="number">0</span>) || (newScroll &gt; <span class="number">0</span> &amp;&amp; oldScroll &lt;= <span class="number">0</span>)) &#123;</span><br><span class="line">                    overScrollDistance = -oldScroll;</span><br><span class="line">                    incrementalDeltaY += overScrollDistance;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    incrementalDeltaY = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (overScrollDistance != <span class="number">0</span>) &#123;</span><br><span class="line">                    overScrollBy(<span class="number">0</span>, overScrollDistance, <span class="number">0</span>, mScrollY, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">                            <span class="number">0</span>, mOverscrollDistance, <span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> overscrollMode = getOverScrollMode();</span><br><span class="line">                    <span class="keyword">if</span> (overscrollMode == OVER_SCROLL_ALWAYS ||</span><br><span class="line">                            (overscrollMode == OVER_SCROLL_IF_CONTENT_SCROLLS &amp;&amp;</span><br><span class="line">                                    !contentFits())) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (rawDeltaY &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            mEdgeGlowTop.onPull((<span class="keyword">float</span>) overScrollDistance / getHeight(),</span><br><span class="line">                                    (<span class="keyword">float</span>) x / getWidth());</span><br><span class="line">                            <span class="keyword">if</span> (!mEdgeGlowBottom.isFinished()) &#123;</span><br><span class="line">                                mEdgeGlowBottom.onRelease();</span><br><span class="line">                            &#125;</span><br><span class="line">                            invalidateTopGlow();</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rawDeltaY &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                            mEdgeGlowBottom.onPull((<span class="keyword">float</span>) overScrollDistance / getHeight(),</span><br><span class="line">                                    <span class="number">1</span>.f - (<span class="keyword">float</span>) x / getWidth());</span><br><span class="line">                            <span class="keyword">if</span> (!mEdgeGlowTop.isFinished()) &#123;</span><br><span class="line">                                mEdgeGlowTop.onRelease();</span><br><span class="line">                            &#125;</span><br><span class="line">                            invalidateBottomGlow();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">//.......</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="EdgeEeffect"><a href="#EdgeEeffect" class="headerlink" title="EdgeEeffect"></a>EdgeEeffect</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * update state</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> time = AnimationUtils.currentAnimationTimeMillis();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">float</span> t = Math.min((time - mStartTime) / mDuration, <span class="number">1</span>.f);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">float</span> interp = mInterpolator.getInterpolation(t);</span><br><span class="line"></span><br><span class="line">    mGlowAlpha = mGlowAlphaStart + (mGlowAlphaFinish - mGlowAlphaStart) * interp;</span><br><span class="line">    mGlowScaleY = mGlowScaleYStart + (mGlowScaleYFinish - mGlowScaleYStart) * interp;</span><br><span class="line">    mDisplacement = (mDisplacement + mTargetDisplacement) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t &gt;= <span class="number">1</span>.f - EPSILON) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (mState) &#123;</span><br><span class="line">            <span class="comment">//start to init parameter</span></span><br><span class="line">            <span class="keyword">case</span> STATE_ABSORB:</span><br><span class="line"></span><br><span class="line">                mState = STATE_RECEDE;</span><br><span class="line">                mStartTime = AnimationUtils.currentAnimationTimeMillis();</span><br><span class="line">                mDuration = RECEDE_TIME;</span><br><span class="line"></span><br><span class="line">                mGlowAlphaStart = mGlowAlpha;</span><br><span class="line">                mGlowScaleYStart = mGlowScaleY;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// After absorb, the glow should fade to nothing.</span></span><br><span class="line">                mGlowAlphaFinish = <span class="number">0</span>.f;</span><br><span class="line">                mGlowScaleYFinish = <span class="number">0</span>.f;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//the pull motivation</span></span><br><span class="line">            <span class="keyword">case</span> STATE_PULL:</span><br><span class="line">                mState = STATE_PULL_DECAY;</span><br><span class="line">                mStartTime = AnimationUtils.currentAnimationTimeMillis();</span><br><span class="line">                mDuration = PULL_DECAY_TIME;</span><br><span class="line"></span><br><span class="line">                mGlowAlphaStart = mGlowAlpha;</span><br><span class="line">                mGlowScaleYStart = mGlowScaleY;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// After pull, the glow should fade to nothing.</span></span><br><span class="line">                mGlowAlphaFinish = <span class="number">0</span>.f;</span><br><span class="line">                mGlowScaleYFinish = <span class="number">0</span>.f;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">             <span class="comment">// decay</span></span><br><span class="line">            <span class="keyword">case</span> STATE_PULL_DECAY:</span><br><span class="line">                mState = STATE_RECEDE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//finished</span></span><br><span class="line">            <span class="keyword">case</span> STATE_RECEDE:</span><br><span class="line">                mState = STATE_IDLE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SwipeRefreshLayout下拉刷新-上拉加载更多"><a href="#SwipeRefreshLayout下拉刷新-上拉加载更多" class="headerlink" title="SwipeRefreshLayout下拉刷新/上拉加载更多"></a>SwipeRefreshLayout下拉刷新/上拉加载更多</h3><h4 id="how-to-create"><a href="#how-to-create" class="headerlink" title="how to create"></a>how to create</h4><h5 id="contruction"><a href="#contruction" class="headerlink" title="contruction"></a>contruction</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SwipeRefreshLayout extends ViewGroup </span></span><br><span class="line"><span class="comment"> * Constructor that is called when inflating SwipeRefreshLayout from XML.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> attrs</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SwipeRefreshLayout</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context, attrs);</span><br><span class="line"></span><br><span class="line">    mTouchSlop = ViewConfiguration.get(context).getScaledTouchSlop();</span><br><span class="line"></span><br><span class="line">    mMediumAnimationDuration = getResources().getInteger(</span><br><span class="line">            android.R.integer.config_mediumAnimTime);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ViewGroup subClass call this,setWillNotDraw to forbidden the callback method onDraw()</span></span><br><span class="line">    setWillNotDraw(<span class="keyword">false</span>);</span><br><span class="line">    mDecelerateInterpolator = <span class="keyword">new</span> DecelerateInterpolator(DECELERATE_INTERPOLATION_FACTOR);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> TypedArray a = context.obtainStyledAttributes(attrs, LAYOUT_ATTRS);</span><br><span class="line">    setEnabled(a.getBoolean(<span class="number">0</span>, <span class="keyword">true</span>));</span><br><span class="line">    a.recycle();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> DisplayMetrics metrics = getResources().getDisplayMetrics();</span><br><span class="line">    mCircleWidth = (<span class="keyword">int</span>) (CIRCLE_DIAMETER * metrics.density);</span><br><span class="line">    mCircleHeight = (<span class="keyword">int</span>) (CIRCLE_DIAMETER * metrics.density);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//create the pull View,here use the progressView </span></span><br><span class="line">    createProgressView();</span><br><span class="line">    ViewCompat.setChildrenDrawingOrderEnabled(<span class="keyword">this</span>, <span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// the absolute offset has to take into account that the circle starts at an offset</span></span><br><span class="line">    <span class="comment">//max pull distance</span></span><br><span class="line">    mSpinnerFinalOffset = DEFAULT_CIRCLE_TARGET * metrics.density;</span><br><span class="line">    mTotalDragDistance = mSpinnerFinalOffset;</span><br><span class="line">    mNestedScrollingParentHelper = <span class="keyword">new</span> NestedScrollingParentHelper(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    mNestedScrollingChildHelper = <span class="keyword">new</span> NestedScrollingChildHelper(<span class="keyword">this</span>);</span><br><span class="line">    setNestedScrollingEnabled(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="onMeasure-1"><a href="#onMeasure-1" class="headerlink" title="onMeasure"></a>onMeasure</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.find the right target ,this is inside the swipeLayout by static xml;</span></span><br><span class="line"><span class="comment"> * 2.measure the target manually</span></span><br><span class="line"><span class="comment"> * 3.measure the added view which is inserted by the constructon method.here is the mCircleView</span></span><br><span class="line"><span class="comment"> * 4.initial the value mOriginalOffsetTop. stand on the mTargetView//negative value</span></span><br><span class="line"><span class="comment"> * 5.get the CircleIndex in parentView and store it in mCircleViewIndex</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> widthMeasureSpec</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> heightMeasureSpec</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">        ensureTarget();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mTarget.measure(MeasureSpec.makeMeasureSpec(</span><br><span class="line">            getMeasuredWidth() - getPaddingLeft() - getPaddingRight(),</span><br><span class="line">            MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(</span><br><span class="line">            getMeasuredHeight() - getPaddingTop() - getPaddingBottom(), MeasureSpec.EXACTLY));</span><br><span class="line">    mCircleView.measure(MeasureSpec.makeMeasureSpec(mCircleWidth, MeasureSpec.EXACTLY),</span><br><span class="line">            MeasureSpec.makeMeasureSpec(mCircleHeight, MeasureSpec.EXACTLY));</span><br><span class="line">    <span class="keyword">if</span> (!mUsingCustomStart &amp;&amp; !mOriginalOffsetCalculated) &#123;</span><br><span class="line">        mOriginalOffsetCalculated = <span class="keyword">true</span>;</span><br><span class="line">        mCurrentTargetOffsetTop = mOriginalOffsetTop = -mCircleView.getMeasuredHeight();<span class="comment">//stand on the mTargetView</span></span><br><span class="line">    &#125;</span><br><span class="line">    mCircleViewIndex = -<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// Get the index of the circleview.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; getChildCount(); index++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (getChildAt(index) == mCircleView) &#123;</span><br><span class="line">            mCircleViewIndex = index;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="onLayout-1"><a href="#onLayout-1" class="headerlink" title="onLayout"></a>onLayout</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. layout the target view</span></span><br><span class="line"><span class="comment"> * left = getPaddingLeft()</span></span><br><span class="line"><span class="comment"> * right = getPaddingLeft()+ [width - getPaddingLeft() - getPaddingRight()]</span></span><br><span class="line"><span class="comment"> * top = getPaddingTop()</span></span><br><span class="line"><span class="comment"> * bottom = getPaddingTop()+[height - getPaddingTop() - getPaddingBottom()]</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 2.layout the mCircleView</span></span><br><span class="line"><span class="comment"> * left = make the circleView centerX</span></span><br><span class="line"><span class="comment"> * right = make the circleView centerX</span></span><br><span class="line"><span class="comment"> * top = above targetView mCurrentTargetOffsetTop</span></span><br><span class="line"><span class="comment"> * bottom = alginTop of targetView</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> changed</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> left</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> top</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> right</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bottom</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> width = getMeasuredWidth();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> height = getMeasuredHeight();</span><br><span class="line">    <span class="keyword">if</span> (getChildCount() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">        ensureTarget();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> View child = mTarget;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> childLeft = getPaddingLeft();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> childTop = getPaddingTop();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> childWidth = width - getPaddingLeft() - getPaddingRight();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> childHeight = height - getPaddingTop() - getPaddingBottom();</span><br><span class="line">    child.layout(childLeft, childTop, childLeft + childWidth, childTop + childHeight);</span><br><span class="line">    <span class="keyword">int</span> circleWidth = mCircleView.getMeasuredWidth();</span><br><span class="line">    <span class="keyword">int</span> circleHeight = mCircleView.getMeasuredHeight();</span><br><span class="line">    mCircleView.layout((width / <span class="number">2</span> - circleWidth / <span class="number">2</span>), mCurrentTargetOffsetTop,</span><br><span class="line">            (width / <span class="number">2</span> + circleWidth / <span class="number">2</span>), mCurrentTargetOffsetTop + circleHeight);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="touchEvent-amp-amp-stateChange"><a href="#touchEvent-amp-amp-stateChange" class="headerlink" title="touchEvent&amp;&amp;stateChange"></a>touchEvent&amp;&amp;stateChange</h4><h5 id="onInterceptTouchEvent"><a href="#onInterceptTouchEvent" class="headerlink" title="onInterceptTouchEvent"></a>onInterceptTouchEvent</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * consider when to intercept</span></span><br><span class="line"><span class="comment"> * 1.reverse condition:canScrollUp,inRefreshState// not block</span></span><br><span class="line"><span class="comment"> * 2.and then sequence condition:moveDistance larger than touchSlop// block</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    ensureTarget();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> action = MotionEventCompat.getActionMasked(ev);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mReturningToStart &amp;&amp; action == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">        mReturningToStart = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!isEnabled() || mReturningToStart || canChildScrollUp() || mRefreshing) &#123;</span><br><span class="line">        <span class="comment">// Fail fast if we're not in a state where a swipe is possible</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            setTargetOffsetTopAndBottom(mOriginalOffsetTop - mCircleView.getTop(), <span class="keyword">true</span>);</span><br><span class="line">            mActivePointerId = MotionEventCompat.getPointerId(ev, <span class="number">0</span>);</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> initialDownY = getMotionEventY(ev, mActivePointerId);</span><br><span class="line">            <span class="keyword">if</span> (initialDownY == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mInitialDownY = initialDownY;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">            <span class="keyword">if</span> (mActivePointerId == INVALID_POINTER) &#123;</span><br><span class="line">                Log.e(LOG_TAG, <span class="string">"Got ACTION_MOVE event but don't have an active pointer id."</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> y = getMotionEventY(ev, mActivePointerId);</span><br><span class="line">            <span class="keyword">if</span> (y == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> yDiff = y - mInitialDownY;</span><br><span class="line">            <span class="keyword">if</span> (yDiff &gt; mTouchSlop &amp;&amp; !mIsBeingDragged) &#123;</span><br><span class="line">                mInitialMotionY = mInitialDownY + mTouchSlop;<span class="comment">// record startY</span></span><br><span class="line">                mIsBeingDragged = <span class="keyword">true</span>;</span><br><span class="line">                mProgress.setAlpha(STARTING_PROGRESS_ALPHA);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEventCompat.ACTION_POINTER_UP:</span><br><span class="line">            onSecondaryPointerUp(ev);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_CANCEL:</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            mActivePointerId = INVALID_POINTER;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mIsBeingDragged;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="onTouchEvent"><a href="#onTouchEvent" class="headerlink" title="onTouchEvent"></a>onTouchEvent</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> action = MotionEventCompat.getActionMasked(ev);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mReturningToStart &amp;&amp; action == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">        mReturningToStart = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!isEnabled() || mReturningToStart || canChildScrollUp()) &#123;</span><br><span class="line">        <span class="comment">// Fail fast if we're not in a state where a swipe is possible</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            mActivePointerId = MotionEventCompat.getPointerId(ev, <span class="number">0</span>);</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_MOVE: &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> pointerIndex = MotionEventCompat.findPointerIndex(ev, mActivePointerId);</span><br><span class="line">            <span class="keyword">if</span> (pointerIndex &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                Log.e(LOG_TAG, <span class="string">"Got ACTION_MOVE event but have an invalid active pointer id."</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> y = MotionEventCompat.getY(ev, pointerIndex);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> overscrollTop = (y - mInitialMotionY) * DRAG_RATE;</span><br><span class="line">            <span class="comment">//开始pull 并且超过了一半</span></span><br><span class="line">            <span class="keyword">if</span> (mIsBeingDragged) &#123;</span><br><span class="line">                <span class="keyword">if</span> (overscrollTop &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//do animation</span></span><br><span class="line">                    moveSpinner(overscrollTop);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> MotionEventCompat.ACTION_POINTER_DOWN: &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> index = MotionEventCompat.getActionIndex(ev);</span><br><span class="line">            mActivePointerId = MotionEventCompat.getPointerId(ev, index);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEventCompat.ACTION_POINTER_UP:</span><br><span class="line">            onSecondaryPointerUp(ev);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_CANCEL: &#123;</span><br><span class="line">            <span class="keyword">if</span> (mActivePointerId == INVALID_POINTER) &#123;</span><br><span class="line">                <span class="keyword">if</span> (action == MotionEvent.ACTION_UP) &#123;</span><br><span class="line">                    Log.e(LOG_TAG, <span class="string">"Got ACTION_UP event but don't have an active pointer id."</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> pointerIndex = MotionEventCompat.findPointerIndex(ev, mActivePointerId);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> y = MotionEventCompat.getY(ev, pointerIndex);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> overscrollTop = (y - mInitialMotionY) * DRAG_RATE;</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            finishSpinner(overscrollTop);<span class="comment">//cancel animation</span></span><br><span class="line">            mActivePointerId = INVALID_POINTER;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="add-header-and-footer-yourself"><a href="#add-header-and-footer-yourself" class="headerlink" title="add header and footer yourself"></a>add header and footer yourself</h4><p>用progressView一样的方式去添加</p><h5 id="construction"><a href="#construction" class="headerlink" title="construction"></a>construction</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SwipeRefreshLayout</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>(context, attrs);</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line">    addView(mHeadViewContainer);</span><br><span class="line">    ......</span><br><span class="line">    addView(mFooterViewContainer);</span><br><span class="line">    ......</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="onMeasure-2"><a href="#onMeasure-2" class="headerlink" title="onMeasure"></a>onMeasure</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        .......</span><br><span class="line">          <span class="comment">// measure Header</span></span><br><span class="line">        mHeadViewContainer.measure(MeasureSpec.makeMeasureSpec(</span><br><span class="line">                mHeaderViewWidth, MeasureSpec.EXACTLY), MeasureSpec</span><br><span class="line">                .makeMeasureSpec(mHeaderViewHeight, MeasureSpec.EXACTLY));</span><br><span class="line">         <span class="comment">// measure Footer</span></span><br><span class="line">        mFooterViewContainer.measure(MeasureSpec.makeMeasureSpec(</span><br><span class="line">                mFooterViewWidth, MeasureSpec.EXACTLY), MeasureSpec</span><br><span class="line">                .makeMeasureSpec(mFooterViewHeight, MeasureSpec.EXACTLY));</span><br><span class="line">        ......</span><br><span class="line">          <span class="comment">//record header index</span></span><br><span class="line">        mHeaderViewIndex = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; getChildCount(); index++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (getChildAt(index) == mHeadViewContainer) &#123;</span><br><span class="line">                mHeaderViewIndex = index;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="comment">//record footer index</span></span><br><span class="line">        mFooterViewIndex = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; getChildCount(); index++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (getChildAt(index) == mFooterViewContainer) &#123;</span><br><span class="line">                mFooterViewIndex = index;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="onLayout-2"><a href="#onLayout-2" class="headerlink" title="onLayout"></a>onLayout</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right,</span></span></span><br><span class="line"><span class="function"><span class="params">           <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">       ......</span><br><span class="line">       <span class="keyword">int</span> headViewWidth = mHeadViewContainer.getMeasuredWidth();</span><br><span class="line">       <span class="keyword">int</span> headViewHeight = mHeadViewContainer.getMeasuredHeight();</span><br><span class="line">       mHeadViewContainer.layout((width / <span class="number">2</span> - headViewWidth / <span class="number">2</span>),</span><br><span class="line">               mCurrentTargetOffsetTop, (width / <span class="number">2</span> + headViewWidth / <span class="number">2</span>),</span><br><span class="line">               mCurrentTargetOffsetTop + headViewHeight);</span><br><span class="line">       <span class="keyword">int</span> footViewWidth = mFooterViewContainer.getMeasuredWidth();</span><br><span class="line">       <span class="keyword">int</span> footViewHeight = mFooterViewContainer.getMeasuredHeight();</span><br><span class="line">       mFooterViewContainer.layout((width / <span class="number">2</span> - footViewWidth / <span class="number">2</span>), height</span><br><span class="line">               - pushDistance, (width / <span class="number">2</span> + footViewWidth / <span class="number">2</span>), height</span><br><span class="line">               + footViewHeight - pushDistance);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="notify-pull-and-push-Action"><a href="#notify-pull-and-push-Action" class="headerlink" title="notify pull and push Action"></a>notify pull and push Action</h5><p>如何判断到顶部或者底部</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   is at top</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isChildScrollToTop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (android.os.Build.VERSION.SDK_INT &lt; <span class="number">14</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> (mTarget <span class="keyword">instanceof</span> AbsListView) &#123;</span><br><span class="line">               <span class="keyword">final</span> AbsListView absListView = (AbsListView) mTarget;</span><br><span class="line">               <span class="keyword">return</span> !(absListView.getChildCount() &gt; <span class="number">0</span> &amp;&amp; (absListView</span><br><span class="line">                       .getFirstVisiblePosition() &gt; <span class="number">0</span> || absListView</span><br><span class="line">                       .getChildAt(<span class="number">0</span>).getTop() &lt; absListView.getPaddingTop()));</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">return</span> !(mTarget.getScrollY() &gt; <span class="number">0</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> !ViewCompat.canScrollVertically(mTarget, -<span class="number">1</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   is at bottom</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isChildScrollToBottom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (isChildScrollToTop()) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> (mTarget <span class="keyword">instanceof</span> RecyclerView) &#123;<span class="comment">//RecyclerView</span></span><br><span class="line">           RecyclerView recyclerView = (RecyclerView) mTarget;</span><br><span class="line">           LayoutManager layoutManager = recyclerView.getLayoutManager();</span><br><span class="line">           <span class="keyword">int</span> count = recyclerView.getAdapter().getItemCount();</span><br><span class="line">           <span class="keyword">if</span> (layoutManager <span class="keyword">instanceof</span> LinearLayoutManager &amp;&amp; count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">               LinearLayoutManager linearLayoutManager = (LinearLayoutManager) layoutManager;</span><br><span class="line">               <span class="keyword">if</span> (linearLayoutManager.findLastCompletelyVisibleItemPosition() == count - <span class="number">1</span>) &#123;</span><br><span class="line">                   <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (layoutManager <span class="keyword">instanceof</span> StaggeredGridLayoutManager) &#123;</span><br><span class="line">               StaggeredGridLayoutManager staggeredGridLayoutManager = (StaggeredGridLayoutManager) layoutManager;</span><br><span class="line">               <span class="keyword">int</span>[] lastItems = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">               staggeredGridLayoutManager</span><br><span class="line">                       .findLastCompletelyVisibleItemPositions(lastItems);</span><br><span class="line">               <span class="keyword">int</span> lastItem = Math.max(lastItems[<span class="number">0</span>], lastItems[<span class="number">1</span>]);</span><br><span class="line">               <span class="keyword">if</span> (lastItem == count - <span class="number">1</span>) &#123;</span><br><span class="line">                   <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mTarget <span class="keyword">instanceof</span> AbsListView) &#123;</span><br><span class="line">           <span class="keyword">final</span> AbsListView absListView = (AbsListView) mTarget;</span><br><span class="line">           <span class="keyword">int</span> count = absListView.getAdapter().getCount();</span><br><span class="line">           <span class="keyword">int</span> fristPos = absListView.getFirstVisiblePosition();</span><br><span class="line">           <span class="keyword">if</span> (fristPos == <span class="number">0</span></span><br><span class="line">                   &amp;&amp; absListView.getChildAt(<span class="number">0</span>).getTop() &gt;= absListView</span><br><span class="line">                           .getPaddingTop()) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">int</span> lastPos = absListView.getLastVisiblePosition();</span><br><span class="line">           <span class="keyword">if</span> (lastPos &gt; <span class="number">0</span> &amp;&amp; count &gt; <span class="number">0</span> &amp;&amp; lastPos == count - <span class="number">1</span>) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mTarget <span class="keyword">instanceof</span> ScrollView) &#123;</span><br><span class="line">           ScrollView scrollView = (ScrollView) mTarget;</span><br><span class="line">           View view = (View) scrollView</span><br><span class="line">                   .getChildAt(scrollView.getChildCount() - <span class="number">1</span>);</span><br><span class="line">           <span class="keyword">if</span> (view != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">int</span> diff = (view.getBottom() - (scrollView.getHeight() + scrollView</span><br><span class="line">                       .getScrollY()));</span><br><span class="line">               <span class="keyword">if</span> (diff == <span class="number">0</span>) &#123;</span><br><span class="line">                   <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  block event</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line"> ......</span><br><span class="line">       <span class="keyword">if</span> (!isEnabled() || mReturningToStart || mRefreshing || mLoadMore</span><br><span class="line">               || (!isChildScrollToTop() &amp;&amp; !isChildScrollToBottom())) &#123;</span><br><span class="line">         <span class="comment">// not at top ,not at bottom,not refresh ,not loadingMore</span></span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">       <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">       <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">       ......</span><br><span class="line">           <span class="keyword">float</span> yDiff = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span> (isChildScrollToBottom()) &#123;</span><br><span class="line">               yDiff = mInitialMotionY - y;<span class="comment">// pull distance</span></span><br><span class="line">               <span class="keyword">if</span> (yDiff &gt; mTouchSlop &amp;&amp; !mIsBeingDragged) &#123;</span><br><span class="line">                   mIsBeingDragged = <span class="keyword">true</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               yDiff = y - mInitialMotionY;<span class="comment">// push distance</span></span><br><span class="line">               <span class="keyword">if</span> (yDiff &gt; mTouchSlop &amp;&amp; !mIsBeingDragged) &#123;</span><br><span class="line">                   mIsBeingDragged = <span class="keyword">true</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">......</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> mIsBeingDragged;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   deal with touchEvent</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">int</span> action = MotionEventCompat.getActionMasked(ev);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (mReturningToStart &amp;&amp; action == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">           mReturningToStart = <span class="keyword">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> (!isEnabled() || mReturningToStart</span><br><span class="line">               || (!isChildScrollToTop() &amp;&amp; !isChildScrollToBottom())) &#123;</span><br><span class="line">           <span class="comment">// if childView could move,do nothing</span></span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (isChildScrollToBottom()) &#123;<span class="comment">// push</span></span><br><span class="line">           <span class="keyword">return</span> handlerPushTouchEvent(ev, action);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;<span class="comment">// pull</span></span><br><span class="line">           <span class="keyword">return</span> handlerPullTouchEvent(ev, action);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="add-secondFloor"><a href="#add-secondFloor" class="headerlink" title="add secondFloor"></a>add secondFloor</h4><ol><li><p>abstract the headerView</p><p>you can add other three states in the headerView .eg:readyEnter,startEnter,endEnter.</p><p>And use the headerView to manager all the states.</p></li><li><p>pull Action can be separated into two states</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">handlePullTouchEvent</span><span class="params">(MotionEvent ev, <span class="keyword">int</span> action)</span> </span>&#123;</span><br><span class="line">        ......</span><br><span class="line">       <span class="keyword">case</span> MotionEvent.ACTION_MOVE: &#123;</span><br><span class="line"></span><br><span class="line">     ......</span><br><span class="line">              <span class="keyword">if</span>(mIsBeingDragged) &#123;</span><br><span class="line">                  distance = (<span class="keyword">int</span>) (distance * mDragRate);</span><br><span class="line">......</span><br><span class="line">                  <span class="keyword">if</span> (distance &lt; mTotalDragDistance) &#123;</span><br><span class="line">                      <span class="comment">// do refresh action</span></span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 <span class="comment">//do second floor action</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      ......</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​</p></li></ol><h4 id="ultimate-struct"><a href="#ultimate-struct" class="headerlink" title="ultimate struct"></a>ultimate struct</h4><p><img src="/images/ListView_Struct.png" alt="ListView_Struct"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ListView的测量&quot;&gt;&lt;a href=&quot;#ListView的测量&quot; class=&quot;headerlink&quot; title=&quot;ListView的测量&quot;&gt;&lt;/a&gt;ListView的测量&lt;/h2&gt;&lt;h3 id=&quot;onMeasure&quot;&gt;&lt;a href=&quot;#onMeasur
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>TextLayoutBuilder源码解读</title>
    <link href="http://jinjian.info/2017/10/29/TextLayoutBuilder%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%20/"/>
    <id>http://jinjian.info/2017/10/29/TextLayoutBuilder源码解读 /</id>
    <published>2017-10-28T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>Canvas在drawText的时候，如果需要每次都计算字体的大小,边距之类的话，就会非常耗时，导致drawText时间会拉的很长，为了提高效率，android4.0之后引入了TextLayoutCache,使用了LRU缓存了字型，边距等数据，提升了drawText的速度，在4.4中,这个cache的大小是0.5m，全局使用，并且受到系统的控制会在Activity的configurationChanged, onResume, lowMemory, updateVisibility等时机，会调用Canvas.freeTextLayoutCache来释放这部分内存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /frameworks/minikin/libs/minikin/Layout.cpp中的LayoutCache</span></span><br><span class="line">class LayoutCache : private OnEntryRemoved&lt;LayoutCacheKey, Layout*&gt; &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    LayoutCache() : mCache(kMaxEntries) &#123;</span><br><span class="line">        mCache.setOnEntryRemovedListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mCache.clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Layout* get(LayoutCacheKey&amp; key, LayoutContext* ctx, <span class="keyword">const</span> FontCollection* collection) &#123;</span><br><span class="line">        Layout* layout = mCache.get(key);</span><br><span class="line">        <span class="keyword">if</span> (layout == NULL) &#123;</span><br><span class="line">            key.copyText();</span><br><span class="line">            layout = <span class="keyword">new</span> Layout();</span><br><span class="line">            key.doLayout(layout, ctx, collection);</span><br><span class="line">            mCache.put(key, layout);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> layout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// callback for OnEntryRemoved</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">(LayoutCacheKey&amp; key, Layout*&amp; value)</span> </span>&#123;</span><br><span class="line">        key.freeText();</span><br><span class="line">        delete value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    LruCache&lt;LayoutCacheKey, Layout*&gt; mCache;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//static const size_t kMaxEntries = LruCache&lt;LayoutCacheKey, Layout*&gt;::kUnlimitedCapacity;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> eviction based on memory footprint; for now, we just use a constant</span></span><br><span class="line">    <span class="comment">// number of strings</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> size_t kMaxEntries = <span class="number">5000</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//................</span></span><br><span class="line"><span class="comment">//cache的复用规则</span></span><br><span class="line"><span class="comment">//..................</span></span><br><span class="line">bool LayoutCacheKey::operator==(<span class="keyword">const</span> LayoutCacheKey&amp; other) <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mId == other.mId</span><br><span class="line">            &amp;&amp; mStart == other.mStart</span><br><span class="line">            &amp;&amp; mCount == other.mCount</span><br><span class="line">            &amp;&amp; mStyle == other.mStyle</span><br><span class="line">            &amp;&amp; mSize == other.mSize</span><br><span class="line">            &amp;&amp; mScaleX == other.mScaleX</span><br><span class="line">            &amp;&amp; mSkewX == other.mSkewX</span><br><span class="line">            &amp;&amp; mLetterSpacing == other.mLetterSpacing</span><br><span class="line">            &amp;&amp; mPaintFlags == other.mPaintFlags</span><br><span class="line">            &amp;&amp; mHyphenEdit == other.mHyphenEdit</span><br><span class="line">            &amp;&amp; mIsRtl == other.mIsRtl</span><br><span class="line">            &amp;&amp; mNchars == other.mNchars</span><br><span class="line">            &amp;&amp; !memcmp(mChars, other.mChars, mNchars * sizeof(uint16_t));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//............</span></span><br></pre></td></tr></table></figure><h3 id="setText"><a href="#setText" class="headerlink" title="setText"></a>setText</h3><p>从以下源码可知,假如textView的宽高是wrap_content的话，会重新触发requestLayout方法,从measure开始重新来一遍否则从layout开始重新来一遍，所以是非常耗时的一个过程.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(CharSequence text, BufferType type,</span></span></span><br><span class="line"><span class="function"><span class="params">                       <span class="keyword">boolean</span> notifyBefore, <span class="keyword">int</span> oldlen)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//.............</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mLayout != <span class="keyword">null</span>) &#123;</span><br><span class="line">          checkForRelayout();<span class="comment">//重点关注 1</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      sendOnTextChanged(text, <span class="number">0</span>, oldlen, textLength);</span><br><span class="line">      onTextChanged(text, <span class="number">0</span>, oldlen, textLength);</span><br><span class="line"></span><br><span class="line">      notifyViewAccessibilityStateChangedIfNeeded(AccessibilityEvent.CONTENT_CHANGE_TYPE_TEXT);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (needEditableForNotification) &#123;</span><br><span class="line">          sendAfterTextChanged((Editable) text);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//......</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Check whether entirely new text requires a new view layout(here from measure)</span></span><br><span class="line"><span class="comment">   * or merely a new text layout(here from layout).</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkForRelayout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">// If we have a fixed width, we can just swap in a new text layout</span></span><br><span class="line">      <span class="comment">// if the text height stays the same or if the view height is fixed.</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ((mLayoutParams.width != LayoutParams.WRAP_CONTENT ||</span><br><span class="line">              (mMaxWidthMode == mMinWidthMode &amp;&amp; mMaxWidth == mMinWidth)) &amp;&amp;</span><br><span class="line">              (mHint == <span class="keyword">null</span> || mHintLayout != <span class="keyword">null</span>) &amp;&amp;</span><br><span class="line">              (mRight - mLeft - getCompoundPaddingLeft() - getCompoundPaddingRight() &gt; <span class="number">0</span>)) &#123;</span><br><span class="line">          <span class="comment">// Static width, so try making a new text layout.</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">int</span> oldht = mLayout.getHeight();</span><br><span class="line">          <span class="keyword">int</span> want = mLayout.getWidth();</span><br><span class="line">          <span class="keyword">int</span> hintWant = mHintLayout == <span class="keyword">null</span> ? <span class="number">0</span> : mHintLayout.getWidth();</span><br><span class="line"></span><br><span class="line">          <span class="comment">/*</span></span><br><span class="line"><span class="comment">           * No need to bring the text into view, since the size is not</span></span><br><span class="line"><span class="comment">           * changing (unless we do the requestLayout(), in which case it</span></span><br><span class="line"><span class="comment">           * will happen at measure).</span></span><br><span class="line"><span class="comment">           */</span></span><br><span class="line">          makeNewLayout(want, hintWant, UNKNOWN_BORING, UNKNOWN_BORING,</span><br><span class="line">                        mRight - mLeft - getCompoundPaddingLeft() - getCompoundPaddingRight(),</span><br><span class="line">                        <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (mEllipsize != TextUtils.TruncateAt.MARQUEE) &#123;</span><br><span class="line">              <span class="comment">// In a fixed-height view, so use our new text layout.</span></span><br><span class="line">              <span class="keyword">if</span> (mLayoutParams.height != LayoutParams.WRAP_CONTENT &amp;&amp;</span><br><span class="line">                  mLayoutParams.height != LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                  invalidate();</span><br><span class="line">                  <span class="keyword">return</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// Dynamic height, but height has stayed the same,</span></span><br><span class="line">              <span class="comment">// so use our new text layout.</span></span><br><span class="line">              <span class="keyword">if</span> (mLayout.getHeight() == oldht &amp;&amp;</span><br><span class="line">                  (mHintLayout == <span class="keyword">null</span> || mHintLayout.getHeight() == oldht)) &#123;</span><br><span class="line">                  invalidate();</span><br><span class="line">                  <span class="keyword">return</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// We lose: the height has changed and we have a dynamic height.</span></span><br><span class="line">          <span class="comment">// Request a new view layout using our new text layout.</span></span><br><span class="line">          requestLayout();</span><br><span class="line">          invalidate();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// Dynamic width, so we have no choice but to request a new</span></span><br><span class="line">          <span class="comment">// view layout with a new text layout.</span></span><br><span class="line">          nullLayouts();</span><br><span class="line">          requestLayout();</span><br><span class="line">          invalidate();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="优化方向"><a href="#优化方向" class="headerlink" title="优化方向"></a>优化方向</h3><ul><li>我们可以在View这一层根据文字内容,文字大小等信息封装一个可复用的TextLayoutBuilder这样就不需要重新Layout相同的内容</li></ul><ul><li>根据4.0之后增加的LruCache原理,在子线程层创建一个warmUpHandler用于预热所要draw的Text，这样在ui线程真正要画它的时候，可以直接从cache中拿，起到加速的效果</li></ul><h2 id="TextLayoutBuilder"><a href="#TextLayoutBuilder" class="headerlink" title="TextLayoutBuilder"></a>TextLayoutBuilder</h2><p>根据上面的两个优化点,所以有了facebook开源的TextLayoutBuilder项目</p><h3 id="框架图"><a href="#框架图" class="headerlink" title="框架图"></a>框架图</h3><p><img src="/images/TextBuilderLayout.png" alt="TextBuilderLayout"></p><h3 id="部分源码"><a href="#部分源码" class="headerlink" title="部分源码"></a>部分源码</h3><h4 id="如何build一个Layout"><a href="#如何build一个Layout" class="headerlink" title="如何build一个Layout"></a>如何build一个Layout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> TextLayoutBuilder.build()处理逻辑</span></span><br><span class="line"><span class="comment"> * Builds and returns a &#123;<span class="doctag">@link</span> Layout&#125;.</span></span><br><span class="line"><span class="comment"> * //1.没有变化直接反馈</span></span><br><span class="line"><span class="comment"> * //2.like link span do not cache this layout,so they could not get from cache</span></span><br><span class="line"><span class="comment"> * //3.if numer ==1 使用boringlayout获得metric</span></span><br><span class="line"><span class="comment"> * //4.计算desiredwidth,然后传给bringLayout或者staticLayout去make</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> A &#123;<span class="doctag">@link</span> Layout&#125; based on the parameters set</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Layout <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Return the cached layout if no property changed.</span></span><br><span class="line">  <span class="keyword">if</span> (mShouldCacheLayout &amp;&amp; mSavedLayout != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> mSavedLayout;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (TextUtils.isEmpty(mParams.text)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">boolean</span> hasClickableSpans = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">int</span> hashCode = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mShouldCacheLayout &amp;&amp; mParams.text <span class="keyword">instanceof</span> Spannable) &#123;</span><br><span class="line">    ClickableSpan[] spans = ((Spannable) mParams.text).getSpans(</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        mParams.text.length() - <span class="number">1</span>,</span><br><span class="line">        ClickableSpan.class);</span><br><span class="line">    hasClickableSpans = spans.length &gt; <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If the text has ClickableSpans, it will be bound to different</span></span><br><span class="line">  <span class="comment">// click listeners each time. It is unsafe to cache these text Layouts.</span></span><br><span class="line">  <span class="comment">// Hence they will not be in cache.</span></span><br><span class="line">  <span class="keyword">if</span> (mShouldCacheLayout &amp;&amp; !hasClickableSpans) &#123;</span><br><span class="line">    hashCode = mParams.hashCode();</span><br><span class="line">    Layout cachedLayout = sCache.get(hashCode);</span><br><span class="line">    <span class="keyword">if</span> (cachedLayout != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> cachedLayout;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  BoringLayout.Metrics metrics = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> numLines = mParams.singleLine ? <span class="number">1</span> : mParams.maxLines;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Try creating a boring layout only if singleLine is requested.</span></span><br><span class="line">  <span class="keyword">if</span> (numLines == <span class="number">1</span>) &#123;</span><br><span class="line">    metrics = BoringLayout.isBoring(mParams.text, mParams.paint);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// getDesiredWidth here is used to ensure we layout text at the same size which it is measured.</span></span><br><span class="line">  <span class="comment">// If we used a large static value it would break RTL due to drawing text at the very end of the</span></span><br><span class="line">  <span class="comment">// large value.</span></span><br><span class="line">  <span class="keyword">int</span> width;</span><br><span class="line">  <span class="keyword">switch</span> (mParams.measureMode) &#123;</span><br><span class="line">    <span class="keyword">case</span> MEASURE_MODE_UNSPECIFIED:</span><br><span class="line">      width = (<span class="keyword">int</span>) Math.ceil(Layout.getDesiredWidth(mParams.text, mParams.paint));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> MEASURE_MODE_EXACTLY:</span><br><span class="line">      width = mParams.width;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> MEASURE_MODE_AT_MOST:</span><br><span class="line">      width =</span><br><span class="line">          Math.min(</span><br><span class="line">              (<span class="keyword">int</span>) Math.ceil(Layout.getDesiredWidth(mParams.text, mParams.paint)),</span><br><span class="line">              mParams.width);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Unexpected measure mode "</span> + mParams.measureMode);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="keyword">int</span> lineHeight = mParams.getLineHeight();</span><br><span class="line">  <span class="keyword">if</span> (mMaxWidthMode == EMS) &#123;</span><br><span class="line">    <span class="comment">//em是一个印刷排版的单位，表示字宽的单位。 em字面意思为：equal M   （和M字符一致的宽度为一个单位）简称em。ems是em的复数表达</span></span><br><span class="line">    <span class="comment">//mMaxWidth 使用的计量单位是行高</span></span><br><span class="line">    width = Math.min(width, mMaxWidth * lineHeight);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    width = Math.min(width, mMaxWidth);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mMinWidthMode == EMS) &#123;</span><br><span class="line">    width = Math.max(width, mMinWidth * lineHeight);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    width = Math.max(width, mMinWidth);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Layout layout;</span><br><span class="line">  <span class="keyword">if</span> (metrics != <span class="keyword">null</span>) &#123;</span><br><span class="line">    layout = BoringLayout.make(</span><br><span class="line">        mParams.text,</span><br><span class="line">        mParams.paint,</span><br><span class="line">        width,</span><br><span class="line">        mParams.alignment,</span><br><span class="line">        mParams.spacingMult,</span><br><span class="line">        mParams.spacingAdd,</span><br><span class="line">        metrics,</span><br><span class="line">        mParams.includePadding,</span><br><span class="line">        mParams.ellipsize,</span><br><span class="line">        width);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        layout = StaticLayoutHelper.make(</span><br><span class="line">            mParams.text,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            mParams.text.length(),</span><br><span class="line">            mParams.paint,</span><br><span class="line">            width,</span><br><span class="line">            mParams.alignment,</span><br><span class="line">            mParams.spacingMult,</span><br><span class="line">            mParams.spacingAdd,</span><br><span class="line">            mParams.includePadding,</span><br><span class="line">            mParams.ellipsize,</span><br><span class="line">            width,</span><br><span class="line">            numLines,</span><br><span class="line">            mParams.textDirection);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IndexOutOfBoundsException e) &#123;</span><br><span class="line">        <span class="comment">// Workaround for https://code.google.com/p/android/issues/detail?id=35412</span></span><br><span class="line">        <span class="keyword">if</span> (!(mParams.text <span class="keyword">instanceof</span> String)) &#123;</span><br><span class="line">          <span class="comment">// remove all Spannables and re-try</span></span><br><span class="line">          Log.e(<span class="string">"TextLayoutBuilder"</span>, <span class="string">"Hit bug #35412, retrying with Spannables removed"</span>, e);</span><br><span class="line">          mParams.text = mParams.text.toString();</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// If it still happens with all Spannables removed we'll bubble the exception up</span></span><br><span class="line">          <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Do not cache if the text has ClickableSpans.</span></span><br><span class="line">  <span class="keyword">if</span> (mShouldCacheLayout &amp;&amp; !hasClickableSpans) &#123;</span><br><span class="line">    mSavedLayout = layout;</span><br><span class="line">    sCache.put(hashCode, layout);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Force a new paint.</span></span><br><span class="line">  mParams.mForceNewPaint = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mShouldWarmText &amp;&amp; mGlyphWarmer != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="comment">// Draw the text in a background thread to warm the cache.</span></span><br><span class="line">    mGlyphWarmer.warmLayout(layout);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> layout;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="如何确定复用的规则"><a href="#如何确定复用的规则" class="headerlink" title="如何确定复用的规则"></a>如何确定复用的规则</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//cache的key值</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Typeface tf = getTypeface();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> hashCode = <span class="number">1</span>;</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + getColor();</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + Float.floatToIntBits(getTextSize());</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + (tf != <span class="keyword">null</span> ? tf.hashCode() : <span class="number">0</span>);</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + Float.floatToIntBits(mShadowDx);</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + Float.floatToIntBits(mShadowDy);</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + Float.floatToIntBits(mShadowRadius);</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + mShadowColor;</span><br><span class="line">      hashCode = <span class="number">31</span> * hashCode + linkColor;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Array.</span></span><br><span class="line">      <span class="keyword">if</span> (drawableState == <span class="keyword">null</span>) &#123;</span><br><span class="line">        hashCode = <span class="number">31</span> * hashCode + <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; drawableState.length; i++) &#123;</span><br><span class="line">          hashCode = <span class="number">31</span> * hashCode + drawableState[i];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> hashCode;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="疑惑解答"><a href="#疑惑解答" class="headerlink" title="疑惑解答"></a>疑惑解答</h2><h3 id="staticLayout不支持maxLine的构造函数"><a href="#staticLayout不支持maxLine的构造函数" class="headerlink" title="staticLayout不支持maxLine的构造函数"></a>staticLayout不支持maxLine的构造函数</h3><h4 id="faceBook的做法"><a href="#faceBook的做法" class="headerlink" title="faceBook的做法"></a>faceBook的做法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编译替换？TODO</span></span><br><span class="line"><span class="keyword">package</span> android.text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticLayout</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">StaticLayout</span><span class="params">(CharSequence source, <span class="keyword">int</span> bufstart, <span class="keyword">int</span> bufend,</span></span></span><br><span class="line"><span class="function"><span class="params">                      TextPaint paint, <span class="keyword">int</span> outerwidth,</span></span></span><br><span class="line"><span class="function"><span class="params">                      Layout.Alignment align, TextDirectionHeuristic textDir,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">float</span> spacingmult, <span class="keyword">float</span> spacingadd,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">boolean</span> includepad,</span></span></span><br><span class="line"><span class="function"><span class="params">                      TextUtils.TruncateAt ellipsize, <span class="keyword">int</span> ellipsizedWidth, <span class="keyword">int</span> maxLines)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Stub!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="反射构造函数"><a href="#反射构造函数" class="headerlink" title="反射构造函数"></a>反射构造函数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticLayoutWithMaxLines</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOGTAG = <span class="string">"StaticLayout"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEXT_DIR_CLASS = <span class="string">"android.text.TextDirectionHeuristic"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEXT_DIRS_CLASS = <span class="string">"android.text.TextDirectionHeuristics"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEXT_DIR_FIRSTSTRONG_LTR = <span class="string">"FIRSTSTRONG_LTR"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> sInitialized;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Constructor&lt;StaticLayout&gt; sConstructor;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object[] sConstructorArgs;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object sTextDirection;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">ensureInitialized</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sInitialized) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; textDirClass;</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">18</span>) &#123;</span><br><span class="line">                textDirClass = TextDirectionHeuristic.class;</span><br><span class="line">                sTextDirection = TextDirectionHeuristics.FIRSTSTRONG_LTR;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> ClassLoader loader = StaticLayoutWithMaxLines.class.getClassLoader();</span><br><span class="line">                textDirClass = loader.loadClass(TEXT_DIR_CLASS);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">final</span> Class&lt;?&gt; textDirsClass = loader.loadClass(TEXT_DIRS_CLASS);</span><br><span class="line">                sTextDirection = textDirsClass.getField(TEXT_DIR_FIRSTSTRONG_LTR)</span><br><span class="line">                        .get(textDirsClass);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt;[] signature = <span class="keyword">new</span> Class[] &#123;</span><br><span class="line">                    CharSequence.class,</span><br><span class="line">                    <span class="keyword">int</span>.class,</span><br><span class="line">                    <span class="keyword">int</span>.class,</span><br><span class="line">                    TextPaint.class,</span><br><span class="line">                    <span class="keyword">int</span>.class,</span><br><span class="line">                    Alignment.class,</span><br><span class="line">                    textDirClass,</span><br><span class="line">                    <span class="keyword">float</span>.class,</span><br><span class="line">                    <span class="keyword">float</span>.class,</span><br><span class="line">                    <span class="keyword">boolean</span>.class,</span><br><span class="line">                    TruncateAt.class,</span><br><span class="line">                    <span class="keyword">int</span>.class,</span><br><span class="line">                    <span class="keyword">int</span>.class</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Make the StaticLayout constructor with max lines public</span></span><br><span class="line">            sConstructor = StaticLayout.class.getDeclaredConstructor(signature);</span><br><span class="line">            sConstructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            sConstructorArgs = <span class="keyword">new</span> Object[signature.length];</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">            Log.e(LOGTAG, <span class="string">"StaticLayout constructor with max lines not found."</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            Log.e(LOGTAG, <span class="string">"TextDirectionHeuristic class not found."</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            Log.e(LOGTAG, <span class="string">"TextDirectionHeuristics.FIRSTSTRONG_LTR not found."</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            Log.e(LOGTAG, <span class="string">"TextDirectionHeuristics.FIRSTSTRONG_LTR not accessible."</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            sInitialized = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSupported</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; <span class="number">14</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ensureInitialized();</span><br><span class="line">        <span class="keyword">return</span> (sConstructor != <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> StaticLayout <span class="title">create</span><span class="params">(CharSequence source, <span class="keyword">int</span> bufstart, <span class="keyword">int</span> bufend,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                   TextPaint paint, <span class="keyword">int</span> outerWidth, Alignment align,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                   <span class="keyword">float</span> spacingMult, <span class="keyword">float</span> spacingAdd,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                   <span class="keyword">boolean</span> includePad, TruncateAt ellipsize,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                   <span class="keyword">int</span> ellipsisWidth, <span class="keyword">int</span> maxLines)</span> </span>&#123;</span><br><span class="line">        ensureInitialized();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sConstructorArgs[<span class="number">0</span>] = source;</span><br><span class="line">            sConstructorArgs[<span class="number">1</span>] = bufstart;</span><br><span class="line">            sConstructorArgs[<span class="number">2</span>] = bufend;</span><br><span class="line">            sConstructorArgs[<span class="number">3</span>] = paint;</span><br><span class="line">            sConstructorArgs[<span class="number">4</span>] = outerWidth;</span><br><span class="line">            sConstructorArgs[<span class="number">5</span>] = align;</span><br><span class="line">            sConstructorArgs[<span class="number">6</span>] = sTextDirection;</span><br><span class="line">            sConstructorArgs[<span class="number">7</span>] = spacingMult;</span><br><span class="line">            sConstructorArgs[<span class="number">8</span>] = spacingAdd;</span><br><span class="line">            sConstructorArgs[<span class="number">9</span>] = includePad;</span><br><span class="line">            sConstructorArgs[<span class="number">10</span>] = ellipsize;</span><br><span class="line">            sConstructorArgs[<span class="number">11</span>] = ellipsisWidth;</span><br><span class="line">            sConstructorArgs[<span class="number">12</span>] = maxLines;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> sConstructor.newInstance(sConstructorArgs);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Error creating StaticLayout with max lines: "</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LinkageError的异常原因"><a href="#LinkageError的异常原因" class="headerlink" title="LinkageError的异常原因"></a>LinkageError的异常原因</h3><p>//TODO 20171029</p><h2 id="实际运用"><a href="#实际运用" class="headerlink" title="实际运用"></a>实际运用</h2><h4 id="Layout复用管理"><a href="#Layout复用管理" class="headerlink" title="Layout复用管理"></a>Layout复用管理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.HandlerThread;</span><br><span class="line"><span class="keyword">import</span> android.os.Looper;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.util.LruCache;</span><br><span class="line"><span class="keyword">import</span> android.text.Layout;</span><br><span class="line"><span class="keyword">import</span> android.text.TextPaint;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicBoolean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextLayoutManager</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"TextLayoutManager"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_INIT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_EXECUTE = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LruCache&lt;String, Task&gt; mCache = <span class="keyword">new</span> LruCache&lt;String, Task&gt;(<span class="number">50</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;Task&gt; mTasks = <span class="keyword">new</span> ArrayList&lt;Task&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Handler mUIHandler;</span><br><span class="line">    <span class="keyword">private</span> HandlerThread mHandlerThread;</span><br><span class="line">    <span class="keyword">private</span> Handler mHandler;</span><br><span class="line">    <span class="keyword">private</span> Canvas mDummyCanvas;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextLayoutManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mUIHandler = <span class="keyword">new</span> Handler(Looper.getMainLooper());</span><br><span class="line"></span><br><span class="line">        mHandlerThread = <span class="keyword">new</span> HandlerThread(<span class="string">"TextLayout_Warm"</span>);</span><br><span class="line">        mHandlerThread.start();</span><br><span class="line">        mHandler = <span class="keyword">new</span> WarmHandler(mHandlerThread.getLooper());</span><br><span class="line">        mHandler.sendEmptyMessage(MSG_INIT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mUIHandler = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (mHandlerThread != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Looper looper = mHandlerThread.getLooper();</span><br><span class="line">            <span class="keyword">if</span> (looper != <span class="keyword">null</span>) &#123;</span><br><span class="line">                looper.quit();</span><br><span class="line">            &#125;</span><br><span class="line">            mHandlerThread = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mHandler = <span class="keyword">null</span>;</span><br><span class="line">        mCache.evictAll();</span><br><span class="line">        mTasks.clear();</span><br><span class="line">        mDummyCanvas = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getLayout</span><span class="params">(String textId, CharSequence text, <span class="keyword">int</span> width, TextPaint textPaint, <span class="keyword">int</span> maxLines, TextUtils.TruncateAt ellipsize, Layout.Alignment alignment, <span class="keyword">float</span> spacingMult, OnGetLayoutListener listener)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        Log.d(TAG, "getLayout, textId:" + textId + ", text:" + text + ", width:" + width);</span></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(textId)) &#123;</span><br><span class="line">            Task task = mCache.get(textId);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (task == <span class="keyword">null</span> || !task.isSameLayout(textId, width, textPaint, maxLines, ellipsize, alignment)) &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (mTasks) &#123;</span><br><span class="line">                    <span class="comment">// mCache.get(id) may not be null now, will be checked when in execute process.</span></span><br><span class="line">                    <span class="keyword">int</span> taskSize = mTasks.size();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; taskSize; i++) &#123;</span><br><span class="line">                        task = mTasks.get(i);</span><br><span class="line">                        <span class="keyword">if</span> (task.isSameLayout(textId, width, textPaint, maxLines, ellipsize, alignment)) &#123;</span><br><span class="line">                            task.listener = listener;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    mTasks.add(<span class="keyword">new</span> Task(textId, text, width, textPaint, maxLines, ellipsize, alignment, spacingMult, listener));</span><br><span class="line"><span class="comment">//                    Log.d(TAG, "getLayout, add task, task.id:" + textId);</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!mHandler.hasMessages(MSG_EXECUTE)) &#123;</span><br><span class="line">                    mHandler.sendEmptyMessage(MSG_EXECUTE);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">//                Log.i(TAG, "onGetLayout, textId:" + task.id + ", text:" + task.text + ", width:" + task.width);</span></span><br><span class="line">                listener.onGetLayout(textId, task.layout);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelGetLayout</span><span class="params">(String textId)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        Log.w(TAG, "cancelGetLayout, textId:" + textId);</span></span><br><span class="line">        <span class="keyword">synchronized</span> (mTasks) &#123;</span><br><span class="line">            <span class="keyword">int</span> taskSize = mTasks.size();</span><br><span class="line">            Task task;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; taskSize; i++) &#123;</span><br><span class="line">                task = mTasks.get(i);</span><br><span class="line">                <span class="keyword">if</span> (task.id.equals(textId)) &#123;</span><br><span class="line">                    mTasks.remove(i);</span><br><span class="line">                    task.canceled.set(<span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//                    Log.w(TAG, "cancelGetLayout, remove task, task.id:" + task.id);</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Task task = mCache.get(textId);</span><br><span class="line">        <span class="keyword">if</span> (task != <span class="keyword">null</span>) &#123;</span><br><span class="line">            task.canceled.set(<span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//            Log.w(TAG, "cancelGetLayout, setCanceled, task.id:" + task.id);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">WarmHandler</span> <span class="keyword">extends</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">        WarmHandler(Looper looper) &#123;</span><br><span class="line">            <span class="keyword">super</span>(looper);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> MSG_INIT:</span><br><span class="line">                    mDummyCanvas = <span class="keyword">new</span> Canvas();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> MSG_EXECUTE:</span><br><span class="line">                    Task task = <span class="keyword">null</span>;</span><br><span class="line">                    Task cacheTask = <span class="keyword">null</span>;</span><br><span class="line">                    Layout layout = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                        <span class="keyword">synchronized</span> (mTasks) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (task != <span class="keyword">null</span>) &#123;</span><br><span class="line">                                task.layout = layout;</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// check whether the task has been canceled, if canceled, it should has been removed from mTasks</span></span><br><span class="line">                                <span class="keyword">if</span> (mTasks.size() &gt; <span class="number">0</span> &amp;&amp; mTasks.get(<span class="number">0</span>) == task) &#123;</span><br><span class="line">                                    mTasks.remove(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//                                    Log.d(TAG, "MSG_EXECUTE, remove task, task.id:" + task.id);</span></span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (task.listener != <span class="keyword">null</span> &amp;&amp; !task.canceled.get()) &#123;</span><br><span class="line">                                    <span class="keyword">final</span> OnGetLayoutListener finalListener = task.listener;</span><br><span class="line">                                    <span class="keyword">final</span> Task finalTask = task;</span><br><span class="line">                                    mUIHandler.post(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                                        <span class="meta">@Override</span></span><br><span class="line">                                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                                            <span class="keyword">if</span> (!finalTask.canceled.get()) &#123;</span><br><span class="line"><span class="comment">//                                                Log.i(TAG, "onGetLayout, textId:" + finalTask.id + ", text:" + finalTask.text + ", width:" + finalTask.width);</span></span><br><span class="line">                                                finalListener.onGetLayout(finalTask.id, finalTask.layout);</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;);</span><br><span class="line">                                    task.listener = <span class="keyword">null</span>;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                mCache.put(task.id, task);</span><br><span class="line">                            &#125;</span><br><span class="line">                            task = mTasks.size() &gt; <span class="number">0</span> ? mTasks.get(<span class="number">0</span>) : <span class="keyword">null</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (task == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            cacheTask = mCache.get(task.id);</span><br><span class="line">                            <span class="keyword">if</span> (cacheTask == <span class="keyword">null</span> || !task.isSameLayout(cacheTask) || cacheTask.layout == <span class="keyword">null</span>) &#123;</span><br><span class="line">                                layout = StaticLayoutWithMaxLines.create(task.text, <span class="number">0</span>, task.text.length(), task.textPaint, task.width, task.alignment, task.spacingMult, <span class="number">0f</span>, <span class="keyword">true</span>, task.ellipsize, task.width, task.maxLines);</span><br><span class="line">                                layout.draw(mDummyCanvas);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                layout = cacheTask.layout;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Task</span> </span>&#123;</span><br><span class="line">        String id;</span><br><span class="line">        CharSequence text;</span><br><span class="line">        <span class="keyword">int</span> width;</span><br><span class="line">        TextPaint textPaint;</span><br><span class="line">        <span class="keyword">int</span> maxLines;</span><br><span class="line">        TextUtils.TruncateAt ellipsize;</span><br><span class="line">        Layout.Alignment alignment;</span><br><span class="line">        <span class="keyword">float</span> spacingMult;</span><br><span class="line"></span><br><span class="line">        OnGetLayoutListener listener;</span><br><span class="line">        Layout layout;</span><br><span class="line"></span><br><span class="line">        AtomicBoolean canceled;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Task</span><span class="params">(String id, CharSequence text, <span class="keyword">int</span> width, TextPaint textPaint, <span class="keyword">int</span> maxLines, TextUtils.TruncateAt ellipsize, Layout.Alignment alignment, <span class="keyword">float</span> spacingMult, OnGetLayoutListener listener)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">            <span class="keyword">this</span>.text = text;</span><br><span class="line">            <span class="keyword">this</span>.width = width;</span><br><span class="line">            <span class="keyword">this</span>.textPaint = textPaint;</span><br><span class="line">            <span class="keyword">this</span>.maxLines = maxLines;</span><br><span class="line">            <span class="keyword">this</span>.ellipsize = ellipsize;</span><br><span class="line">            <span class="keyword">this</span>.alignment = alignment;</span><br><span class="line">            <span class="keyword">this</span>.spacingMult = spacingMult;</span><br><span class="line">            <span class="keyword">this</span>.listener = listener;</span><br><span class="line">            <span class="keyword">this</span>.layout = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">this</span>.canceled = <span class="keyword">new</span> AtomicBoolean(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSameLayout</span><span class="params">(Task other)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> other != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.id.equals(other.id) &amp;&amp; <span class="keyword">this</span>.width == other.width &amp;&amp; <span class="keyword">this</span>.textPaint == other.textPaint &amp;&amp; <span class="keyword">this</span>.maxLines == other.maxLines</span><br><span class="line">                    &amp;&amp; <span class="keyword">this</span>.ellipsize == other.ellipsize &amp;&amp; <span class="keyword">this</span>.alignment == other.alignment &amp;&amp; <span class="keyword">this</span>.spacingMult == other.spacingMult;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSameLayout</span><span class="params">(String id, <span class="keyword">int</span> width, TextPaint textPaint, <span class="keyword">int</span> maxLines, TextUtils.TruncateAt ellipsize, Layout.Alignment alignment)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.id.equals(id) &amp;&amp; <span class="keyword">this</span>.width == width &amp;&amp; <span class="keyword">this</span>.textPaint == textPaint &amp;&amp; <span class="keyword">this</span>.maxLines == maxLines</span><br><span class="line">                    &amp;&amp; <span class="keyword">this</span>.ellipsize == ellipsize &amp;&amp; <span class="keyword">this</span>.alignment == alignment &amp;&amp; <span class="keyword">this</span>.spacingMult == spacingMult;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnGetLayoutListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onGetLayout</span><span class="params">(String textId, Layout layout)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="如何封装view"><a href="#如何封装view" class="headerlink" title="如何封装view"></a>如何封装view</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.HandlerThread;</span><br><span class="line"><span class="keyword">import</span> android.os.Looper;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.util.LruCache;</span><br><span class="line"><span class="keyword">import</span> android.text.Layout;</span><br><span class="line"><span class="keyword">import</span> android.text.TextPaint;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicBoolean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextLayoutManager</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"TextLayoutManager"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_INIT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_EXECUTE = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LruCache&lt;String, Task&gt; mCache = <span class="keyword">new</span> LruCache&lt;String, Task&gt;(<span class="number">50</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;Task&gt; mTasks = <span class="keyword">new</span> ArrayList&lt;Task&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Handler mUIHandler;</span><br><span class="line">    <span class="keyword">private</span> HandlerThread mHandlerThread;</span><br><span class="line">    <span class="keyword">private</span> Handler mHandler;</span><br><span class="line">    <span class="keyword">private</span> Canvas mDummyCanvas;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextLayoutManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mUIHandler = <span class="keyword">new</span> Handler(Looper.getMainLooper());</span><br><span class="line"></span><br><span class="line">        mHandlerThread = <span class="keyword">new</span> HandlerThread(<span class="string">"TextLayout_Warm"</span>);</span><br><span class="line">        mHandlerThread.start();</span><br><span class="line">        mHandler = <span class="keyword">new</span> WarmHandler(mHandlerThread.getLooper());</span><br><span class="line">        mHandler.sendEmptyMessage(MSG_INIT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mUIHandler = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (mHandlerThread != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Looper looper = mHandlerThread.getLooper();</span><br><span class="line">            <span class="keyword">if</span> (looper != <span class="keyword">null</span>) &#123;</span><br><span class="line">                looper.quit();</span><br><span class="line">            &#125;</span><br><span class="line">            mHandlerThread = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mHandler = <span class="keyword">null</span>;</span><br><span class="line">        mCache.evictAll();</span><br><span class="line">        mTasks.clear();</span><br><span class="line">        mDummyCanvas = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getLayout</span><span class="params">(String textId, CharSequence text, <span class="keyword">int</span> width, TextPaint textPaint, <span class="keyword">int</span> maxLines, TextUtils.TruncateAt ellipsize, Layout.Alignment alignment, <span class="keyword">float</span> spacingMult, OnGetLayoutListener listener)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        Log.d(TAG, "getLayout, textId:" + textId + ", text:" + text + ", width:" + width);</span></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(textId)) &#123;</span><br><span class="line">            Task task = mCache.get(textId);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (task == <span class="keyword">null</span> || !task.isSameLayout(textId, width, textPaint, maxLines, ellipsize, alignment)) &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (mTasks) &#123;</span><br><span class="line">                    <span class="comment">// mCache.get(id) may not be null now, will be checked when in execute process.</span></span><br><span class="line">                    <span class="keyword">int</span> taskSize = mTasks.size();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; taskSize; i++) &#123;</span><br><span class="line">                        task = mTasks.get(i);</span><br><span class="line">                        <span class="keyword">if</span> (task.isSameLayout(textId, width, textPaint, maxLines, ellipsize, alignment)) &#123;</span><br><span class="line">                            task.listener = listener;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    mTasks.add(<span class="keyword">new</span> Task(textId, text, width, textPaint, maxLines, ellipsize, alignment, spacingMult, listener));</span><br><span class="line"><span class="comment">//                    Log.d(TAG, "getLayout, add task, task.id:" + textId);</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!mHandler.hasMessages(MSG_EXECUTE)) &#123;</span><br><span class="line">                    mHandler.sendEmptyMessage(MSG_EXECUTE);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">//                Log.i(TAG, "onGetLayout, textId:" + task.id + ", text:" + task.text + ", width:" + task.width);</span></span><br><span class="line">                listener.onGetLayout(textId, task.layout);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelGetLayout</span><span class="params">(String textId)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        Log.w(TAG, "cancelGetLayout, textId:" + textId);</span></span><br><span class="line">        <span class="keyword">synchronized</span> (mTasks) &#123;</span><br><span class="line">            <span class="keyword">int</span> taskSize = mTasks.size();</span><br><span class="line">            Task task;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; taskSize; i++) &#123;</span><br><span class="line">                task = mTasks.get(i);</span><br><span class="line">                <span class="keyword">if</span> (task.id.equals(textId)) &#123;</span><br><span class="line">                    mTasks.remove(i);</span><br><span class="line">                    task.canceled.set(<span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//                    Log.w(TAG, "cancelGetLayout, remove task, task.id:" + task.id);</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Task task = mCache.get(textId);</span><br><span class="line">        <span class="keyword">if</span> (task != <span class="keyword">null</span>) &#123;</span><br><span class="line">            task.canceled.set(<span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//            Log.w(TAG, "cancelGetLayout, setCanceled, task.id:" + task.id);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">WarmHandler</span> <span class="keyword">extends</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">        WarmHandler(Looper looper) &#123;</span><br><span class="line">            <span class="keyword">super</span>(looper);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> MSG_INIT:</span><br><span class="line">                    mDummyCanvas = <span class="keyword">new</span> Canvas();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> MSG_EXECUTE:</span><br><span class="line">                    Task task = <span class="keyword">null</span>;</span><br><span class="line">                    Task cacheTask = <span class="keyword">null</span>;</span><br><span class="line">                    Layout layout = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                        <span class="keyword">synchronized</span> (mTasks) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (task != <span class="keyword">null</span>) &#123;</span><br><span class="line">                                task.layout = layout;</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// check whether the task has been canceled, if canceled, it should has been removed from mTasks</span></span><br><span class="line">                                <span class="keyword">if</span> (mTasks.size() &gt; <span class="number">0</span> &amp;&amp; mTasks.get(<span class="number">0</span>) == task) &#123;</span><br><span class="line">                                    mTasks.remove(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//                                    Log.d(TAG, "MSG_EXECUTE, remove task, task.id:" + task.id);</span></span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (task.listener != <span class="keyword">null</span> &amp;&amp; !task.canceled.get()) &#123;</span><br><span class="line">                                    <span class="keyword">final</span> OnGetLayoutListener finalListener = task.listener;</span><br><span class="line">                                    <span class="keyword">final</span> Task finalTask = task;</span><br><span class="line">                                    mUIHandler.post(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                                        <span class="meta">@Override</span></span><br><span class="line">                                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                                            <span class="keyword">if</span> (!finalTask.canceled.get()) &#123;</span><br><span class="line"><span class="comment">//                                                Log.i(TAG, "onGetLayout, textId:" + finalTask.id + ", text:" + finalTask.text + ", width:" + finalTask.width);</span></span><br><span class="line">                                                finalListener.onGetLayout(finalTask.id, finalTask.layout);</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;);</span><br><span class="line">                                    task.listener = <span class="keyword">null</span>;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                mCache.put(task.id, task);</span><br><span class="line">                            &#125;</span><br><span class="line">                            task = mTasks.size() &gt; <span class="number">0</span> ? mTasks.get(<span class="number">0</span>) : <span class="keyword">null</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (task == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            cacheTask = mCache.get(task.id);</span><br><span class="line">                            <span class="keyword">if</span> (cacheTask == <span class="keyword">null</span> || !task.isSameLayout(cacheTask) || cacheTask.layout == <span class="keyword">null</span>) &#123;</span><br><span class="line">                                layout = StaticLayoutWithMaxLines.create(task.text, <span class="number">0</span>, task.text.length(), task.textPaint, task.width, task.alignment, task.spacingMult, <span class="number">0f</span>, <span class="keyword">true</span>, task.ellipsize, task.width, task.maxLines);</span><br><span class="line">                                layout.draw(mDummyCanvas);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                layout = cacheTask.layout;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Task</span> </span>&#123;</span><br><span class="line">        String id;</span><br><span class="line">        CharSequence text;</span><br><span class="line">        <span class="keyword">int</span> width;</span><br><span class="line">        TextPaint textPaint;</span><br><span class="line">        <span class="keyword">int</span> maxLines;</span><br><span class="line">        TextUtils.TruncateAt ellipsize;</span><br><span class="line">        Layout.Alignment alignment;</span><br><span class="line">        <span class="keyword">float</span> spacingMult;</span><br><span class="line"></span><br><span class="line">        OnGetLayoutListener listener;</span><br><span class="line">        Layout layout;</span><br><span class="line"></span><br><span class="line">        AtomicBoolean canceled;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Task</span><span class="params">(String id, CharSequence text, <span class="keyword">int</span> width, TextPaint textPaint, <span class="keyword">int</span> maxLines, TextUtils.TruncateAt ellipsize, Layout.Alignment alignment, <span class="keyword">float</span> spacingMult, OnGetLayoutListener listener)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">            <span class="keyword">this</span>.text = text;</span><br><span class="line">            <span class="keyword">this</span>.width = width;</span><br><span class="line">            <span class="keyword">this</span>.textPaint = textPaint;</span><br><span class="line">            <span class="keyword">this</span>.maxLines = maxLines;</span><br><span class="line">            <span class="keyword">this</span>.ellipsize = ellipsize;</span><br><span class="line">            <span class="keyword">this</span>.alignment = alignment;</span><br><span class="line">            <span class="keyword">this</span>.spacingMult = spacingMult;</span><br><span class="line">            <span class="keyword">this</span>.listener = listener;</span><br><span class="line">            <span class="keyword">this</span>.layout = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">this</span>.canceled = <span class="keyword">new</span> AtomicBoolean(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSameLayout</span><span class="params">(Task other)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> other != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.id.equals(other.id) &amp;&amp; <span class="keyword">this</span>.width == other.width &amp;&amp; <span class="keyword">this</span>.textPaint == other.textPaint &amp;&amp; <span class="keyword">this</span>.maxLines == other.maxLines</span><br><span class="line">                    &amp;&amp; <span class="keyword">this</span>.ellipsize == other.ellipsize &amp;&amp; <span class="keyword">this</span>.alignment == other.alignment &amp;&amp; <span class="keyword">this</span>.spacingMult == other.spacingMult;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSameLayout</span><span class="params">(String id, <span class="keyword">int</span> width, TextPaint textPaint, <span class="keyword">int</span> maxLines, TextUtils.TruncateAt ellipsize, Layout.Alignment alignment)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.id.equals(id) &amp;&amp; <span class="keyword">this</span>.width == width &amp;&amp; <span class="keyword">this</span>.textPaint == textPaint &amp;&amp; <span class="keyword">this</span>.maxLines == maxLines</span><br><span class="line">                    &amp;&amp; <span class="keyword">this</span>.ellipsize == ellipsize &amp;&amp; <span class="keyword">this</span>.alignment == alignment &amp;&amp; <span class="keyword">this</span>.spacingMult == spacingMult;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnGetLayoutListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onGetLayout</span><span class="params">(String textId, Layout layout)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>LinkageError的异常原因</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;Can
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>SurfaceView源码解读</title>
    <link href="http://jinjian.info/2017/09/24/SurfaceView%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/09/24/SurfaceView源码解读/</id>
    <published>2017-09-23T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="surfaceView的建立"><a href="#surfaceView的建立" class="headerlink" title="surfaceView的建立"></a>surfaceView的建立</h2><h3 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h3><p><img src="/images/SurfaveView_Create.png" alt="SurfaveView_Create"></p><h3 id="performTraversals"><a href="#performTraversals" class="headerlink" title="performTraversals"></a>performTraversals</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">performTraversals</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">boolean</span> viewVisibilityChanged = mViewVisibility != viewVisibility</span><br><span class="line">            || mNewSurfaceNeeded;</span><br><span class="line">    ......</span><br><span class="line">    Rect frame = mWinFrame;</span><br><span class="line">   <span class="comment">//default is true,indicate whether the view is first attached to the windows.</span></span><br><span class="line">  <span class="comment">// if mFirst is true ,we should inital the attchinfo,and then dispatch it to its children </span></span><br><span class="line">    <span class="keyword">if</span> (mFirst) &#123;</span><br><span class="line">       .........</span><br><span class="line">        host.dispatchAttachedToWindow(mAttachInfo, <span class="number">0</span>);</span><br><span class="line">        mAttachInfo.mTreeObserver.dispatchOnWindowAttachedChange(<span class="keyword">true</span>);</span><br><span class="line">        dispatchApplyInsets(host);</span><br><span class="line">        <span class="comment">//Log.i(TAG, "Screen on initialized: " + attachInfo.mKeepScreenOn);</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       .......</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (viewVisibilityChanged) &#123;</span><br><span class="line">        mAttachInfo.mWindowVisibility = viewVisibility;</span><br><span class="line">        host.dispatchWindowVisibilityChanged(viewVisibility);</span><br><span class="line">          ......</span><br><span class="line">    &#125;</span><br><span class="line">     ......</span><br><span class="line">  ｝</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="dispatchAttachToWindow"><a href="#dispatchAttachToWindow" class="headerlink" title="dispatchAttachToWindow"></a>dispatchAttachToWindow</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> info the &#123;<span class="doctag">@link</span> android.view.View.AttachInfo&#125; to associated with</span></span><br><span class="line"><span class="comment">  *        this view</span></span><br><span class="line"><span class="comment">      notify FOUR:</span></span><br><span class="line"><span class="comment">      1.onAttachedToWindow()</span></span><br><span class="line"><span class="comment">      2.OnAttachStateChangeListener.onViewAttachToWindow()</span></span><br><span class="line"><span class="comment">      3.onWindowVisibilityChanged()</span></span><br><span class="line"><span class="comment">      4.onVisibilityChanged()</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">dispatchAttachedToWindow</span><span class="params">(AttachInfo info, <span class="keyword">int</span> visibility)</span> </span>&#123;</span><br><span class="line">     <span class="comment">//System.out.println("Attached! " + this);</span></span><br><span class="line">     mAttachInfo = info;</span><br><span class="line">        .......</span><br><span class="line">     onAttachedToWindow();</span><br><span class="line"></span><br><span class="line">     ListenerInfo li = mListenerInfo;</span><br><span class="line">     <span class="keyword">final</span> CopyOnWriteArrayList&lt;OnAttachStateChangeListener&gt; listeners =</span><br><span class="line">             li != <span class="keyword">null</span> ? li.mOnAttachStateChangeListeners : <span class="keyword">null</span>;</span><br><span class="line">     <span class="keyword">if</span> (listeners != <span class="keyword">null</span> &amp;&amp; listeners.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">         <span class="comment">// <span class="doctag">NOTE:</span> because of the use of CopyOnWriteArrayList, we *must* use an iterator to</span></span><br><span class="line">         <span class="comment">// perform the dispatching. The iterator is a safe guard against listeners that</span></span><br><span class="line">         <span class="comment">// could mutate the list by calling the various add/remove methods. This prevents</span></span><br><span class="line">         <span class="comment">// the array from being modified while we iterate it.</span></span><br><span class="line">         <span class="keyword">for</span> (OnAttachStateChangeListener listener : listeners) &#123;</span><br><span class="line">             listener.onViewAttachedToWindow(<span class="keyword">this</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> vis = info.mWindowVisibility;</span><br><span class="line">     <span class="keyword">if</span> (vis != GONE) &#123;</span><br><span class="line">         onWindowVisibilityChanged(vis);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Send onVisibilityChanged directly instead of dispatchVisibilityChanged.</span></span><br><span class="line">     <span class="comment">// As all views in the subtree will already receive dispatchAttachedToWindow</span></span><br><span class="line">     <span class="comment">// traversing the subtree again here is not desired.</span></span><br><span class="line">     onVisibilityChanged(<span class="keyword">this</span>, visibility);</span><br><span class="line"></span><br><span class="line">   ......</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="onAttachToWindow"><a href="#onAttachToWindow" class="headerlink" title="onAttachToWindow"></a>onAttachToWindow</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">1.restore the session who communicate with windowManagerServices</span></span><br><span class="line"><span class="comment">2.do ViewTreeObserver notify</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onAttachedToWindow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onAttachedToWindow();</span><br><span class="line">        mParent.requestTransparentRegion(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//mSession to  communication with the window manager Services</span></span><br><span class="line">        <span class="comment">//IWindowSession</span></span><br><span class="line">        mSession = getWindowSession();</span><br><span class="line">        mLayout.token = getWindowToken();</span><br><span class="line">        mLayout.setTitle(<span class="string">"SurfaceView"</span>);</span><br><span class="line">        mViewVisibility = getVisibility() == VISIBLE;</span><br><span class="line">        <span class="keyword">if</span> (!mGlobalListenersAdded) &#123;</span><br><span class="line">            ViewTreeObserver observer = getViewTreeObserver();</span><br><span class="line">            observer.addOnScrollChangedListener(mScrollChangedListener);</span><br><span class="line">            observer.addOnPreDrawListener(mDrawListener);</span><br><span class="line">            mGlobalListenersAdded = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="dispatchWindowVisibilityChanged"><a href="#dispatchWindowVisibilityChanged" class="headerlink" title="dispatchWindowVisibilityChanged"></a>dispatchWindowVisibilityChanged</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Dispatch a view visibility change down the view hierarchy.</span></span><br><span class="line"><span class="comment"> * ViewGroups should override to route to their children.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> changedView The view whose visibility changed. Could be 'this' or</span></span><br><span class="line"><span class="comment"> * an ancestor view.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> visibility The new visibility of changedView: &#123;<span class="doctag">@link</span> #VISIBLE&#125;,</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #INVISIBLE&#125; or &#123;<span class="doctag">@link</span> #GONE&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">dispatchVisibilityChanged</span><span class="params">(@NonNull View changedView,</span></span></span><br><span class="line"><span class="function"><span class="params">        @Visibility <span class="keyword">int</span> visibility)</span> </span>&#123;</span><br><span class="line">    onVisibilityChanged(changedView, visibility);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="onVisibilityChanged"><a href="#onVisibilityChanged" class="headerlink" title="onVisibilityChanged"></a>onVisibilityChanged</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onWindowVisibilityChanged</span><span class="params">(<span class="keyword">int</span> visibility)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onWindowVisibilityChanged(visibility);</span><br><span class="line">    mWindowVisibility = visibility == VISIBLE;</span><br><span class="line">    mRequestedVisible = mWindowVisibility &amp;&amp; mViewVisibility;</span><br><span class="line">    updateWindow(<span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="updateWindow"><a href="#updateWindow" class="headerlink" title="updateWindow"></a>updateWindow</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  1.use windowsManagerServices session to addToDisplayWithoutInputChannel</span></span><br><span class="line"><span class="comment">  (add a new  windowState to windowsManagerServices and without inputChannel) </span></span><br><span class="line"><span class="comment">  2.use windowsManagerServices session to relayout</span></span><br><span class="line"><span class="comment">  (use mNewSurface size to draw Canvas)</span></span><br><span class="line"><span class="comment">  3.surfaceHolder callbacks (create,surfaceChange,surfaceDestory......)</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  tips:</span></span><br><span class="line"><span class="comment">  WindowState代表WMS中的一个窗口，这和App端的Window类是不一样的，尽管很多时候一个Window类（即PhoneWindow）有一个对应的WindowState，但那不是绝对的。一个Activity在WMS中有对应的AppWindowToken，一个AppWindowToken又可以包含多个WindowState，因为除了主窗口外，还可能有子窗口和启动窗口。此外对于系统窗口，WindowState还可能不对应AppWindowToken。</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">/** <span class="doctag">@hide</span> */</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">updateWindow</span><span class="params">(<span class="keyword">boolean</span> force, <span class="keyword">boolean</span> redrawNeeded)</span> </span>&#123;</span><br><span class="line">          <span class="comment">//......</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (force || creating || formatChanged || sizeChanged || visibleChanged</span><br><span class="line">         || mLeft != mLocation[<span class="number">0</span>] || mTop != mLocation[<span class="number">1</span>]</span><br><span class="line">         || mUpdateWindowNeeded || mReportDrawNeeded || redrawNeeded) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// ......</span></span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (mWindow == <span class="keyword">null</span>) &#123;</span><br><span class="line">                 Display display = getDisplay();</span><br><span class="line">                 mWindow = <span class="keyword">new</span> MyWindow(<span class="keyword">this</span>);</span><br><span class="line">                 mLayout.type = mWindowType;</span><br><span class="line">                 mLayout.gravity = Gravity.START|Gravity.TOP;</span><br><span class="line">                 <span class="comment">//viewRootImpl的setView也用了addToDisplay</span></span><br><span class="line">                 mSession.addToDisplayWithoutInputChannel(mWindow, mWindow.mSeq, mLayout,</span><br><span class="line">                         mVisible ? VISIBLE : GONE, display.getDisplayId(), mContentInsets,</span><br><span class="line">                         mStableInsets);</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">boolean</span> realSizeChanged;</span><br><span class="line">             <span class="keyword">boolean</span> reportDrawNeeded;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">int</span> relayoutResult;</span><br><span class="line">             mSurfaceLock.lock();</span><br><span class="line">          <span class="comment">//.......</span></span><br><span class="line"></span><br><span class="line">                 relayoutResult = mSession.relayout(</span><br><span class="line">                     mWindow, mWindow.mSeq, mLayout, mWidth, mHeight,</span><br><span class="line">                         visible ? VISIBLE : GONE,</span><br><span class="line">                         WindowManagerGlobal.RELAYOUT_DEFER_SURFACE_DESTROY,</span><br><span class="line">                         mWinFrame, mOverscanInsets, mContentInsets,</span><br><span class="line">                         mVisibleInsets, mStableInsets, mOutsets, mConfiguration,</span><br><span class="line">                         mNewSurface);</span><br><span class="line"></span><br><span class="line">             ......</span><br><span class="line">          <span class="comment">// ----------------------------do surfaceHolder callBack ----------------------</span></span><br><span class="line">                 <span class="keyword">final</span> <span class="keyword">boolean</span> surfaceChanged = (relayoutResult</span><br><span class="line">                         &amp; WindowManagerGlobal.RELAYOUT_RES_SURFACE_CHANGED) != <span class="number">0</span>;</span><br><span class="line">                 <span class="keyword">if</span> (mSurfaceCreated &amp;&amp; (surfaceChanged || (!visible &amp;&amp; visibleChanged))) &#123;</span><br><span class="line">                     mSurfaceCreated = <span class="keyword">false</span>;</span><br><span class="line">                     <span class="keyword">if</span> (mSurface.isValid()) &#123;</span><br><span class="line">                         <span class="keyword">if</span> (DEBUG) Log.i(TAG, <span class="string">"visibleChanged -- surfaceDestroyed"</span>);</span><br><span class="line">                         callbacks = getSurfaceCallbacks();</span><br><span class="line">                         <span class="keyword">for</span> (SurfaceHolder.Callback c : callbacks) &#123;</span><br><span class="line">                    <span class="comment">//surfaceDestory </span></span><br><span class="line">                             c.surfaceDestroyed(mSurfaceHolder);</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line"></span><br><span class="line">                 mSurface.transferFrom(mNewSurface);</span><br><span class="line"></span><br><span class="line">                 <span class="keyword">if</span> (visible &amp;&amp; mSurface.isValid()) &#123;</span><br><span class="line">                     <span class="keyword">if</span> (!mSurfaceCreated &amp;&amp; (surfaceChanged || visibleChanged)) &#123;</span><br><span class="line">                         mSurfaceCreated = <span class="keyword">true</span>;</span><br><span class="line">                         mIsCreating = <span class="keyword">true</span>;</span><br><span class="line">                         <span class="keyword">if</span> (DEBUG) Log.i(TAG, <span class="string">"visibleChanged -- surfaceCreated"</span>);</span><br><span class="line">                         <span class="keyword">if</span> (callbacks == <span class="keyword">null</span>) &#123;</span><br><span class="line">                             callbacks = getSurfaceCallbacks();</span><br><span class="line">                         &#125;</span><br><span class="line">                         <span class="keyword">for</span> (SurfaceHolder.Callback c : callbacks) &#123;</span><br><span class="line">                           <span class="comment">//surfaceCreated</span></span><br><span class="line">                             c.surfaceCreated(mSurfaceHolder);</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="keyword">if</span> (creating || formatChanged || sizeChanged</span><br><span class="line">                             || visibleChanged || realSizeChanged) &#123;</span><br><span class="line">                         <span class="keyword">if</span> (DEBUG) Log.i(TAG, <span class="string">"surfaceChanged -- format="</span> + mFormat</span><br><span class="line">                                 + <span class="string">" w="</span> + myWidth + <span class="string">" h="</span> + myHeight);</span><br><span class="line">                         <span class="keyword">if</span> (callbacks == <span class="keyword">null</span>) &#123;</span><br><span class="line">                             callbacks = getSurfaceCallbacks();</span><br><span class="line">                         &#125;</span><br><span class="line">                         <span class="keyword">for</span> (SurfaceHolder.Callback c : callbacks) &#123;</span><br><span class="line">                           <span class="comment">//surfaceChanged</span></span><br><span class="line">                             c.surfaceChanged(mSurfaceHolder, mFormat, myWidth, myHeight);</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="keyword">if</span> (redrawNeeded) &#123;</span><br><span class="line">                         <span class="keyword">if</span> (DEBUG) Log.i(TAG, <span class="string">"surfaceRedrawNeeded"</span>);</span><br><span class="line">                         <span class="keyword">if</span> (callbacks == <span class="keyword">null</span>) &#123;</span><br><span class="line">                             callbacks = getSurfaceCallbacks();</span><br><span class="line">                         &#125;</span><br><span class="line">                         <span class="keyword">for</span> (SurfaceHolder.Callback c : callbacks) &#123;</span><br><span class="line">                             <span class="keyword">if</span> (c <span class="keyword">instanceof</span> SurfaceHolder.Callback2) &#123;</span><br><span class="line">                               <span class="comment">//surfaceRedrawNeeded</span></span><br><span class="line">                                 ((SurfaceHolder.Callback2)c).surfaceRedrawNeeded(</span><br><span class="line">                                         mSurfaceHolder);</span><br><span class="line">                             &#125;</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">       .......</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="surfaceView挖洞"><a href="#surfaceView挖洞" class="headerlink" title="surfaceView挖洞"></a>surfaceView挖洞</h2><h3 id="整体流程-1"><a href="#整体流程-1" class="headerlink" title="整体流程"></a>整体流程</h3><p><img src="/images/SurfaceView_Hold.png" alt="SurfaceView_Hold"></p><h3 id="requestTransparentRegion"><a href="#requestTransparentRegion" class="headerlink" title="requestTransparentRegion"></a>requestTransparentRegion</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestTransparentRegion</span><span class="params">(View child)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// the test below should not fail unless someone is messing with us</span></span><br><span class="line">    checkThread();</span><br><span class="line">    <span class="keyword">if</span> (mView == child) &#123;</span><br><span class="line">      <span class="comment">//add view flag</span></span><br><span class="line">        mView.mPrivateFlags |= View.PFLAG_REQUEST_TRANSPARENT_REGIONS;</span><br><span class="line">        <span class="comment">// Need to make sure we re-evaluate the window attributes next</span></span><br><span class="line">        <span class="comment">// time around, to ensure the window has the correct format.</span></span><br><span class="line">        mWindowAttributesChanged = <span class="keyword">true</span>;</span><br><span class="line">        mWindowAttributesChangesFlag = <span class="number">0</span>;</span><br><span class="line">        requestLayout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!--代码在android.view.viewRootImpl类--><h3 id="performTraversals-1"><a href="#performTraversals-1" class="headerlink" title="performTraversals"></a>performTraversals</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">performTraversals</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="comment">// cache mView since it is used so much below...</span></span><br><span class="line">        <span class="keyword">final</span> View host = mView;</span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> didLayout = mLayoutRequested;</span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">if</span> (didLayout) &#123;</span><br><span class="line">            ......</span><br><span class="line">            host.layout(<span class="number">0</span>, <span class="number">0</span>, host.mMeasuredWidth, host.mMeasuredHeight);</span><br><span class="line">            ......</span><br><span class="line">            <span class="keyword">if</span> ((host.mPrivateFlags &amp; View.REQUEST_TRANSPARENT_REGIONS) != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// start out transparent</span></span><br><span class="line">                <span class="comment">// <span class="doctag">TODO:</span> AVOID THAT CALL BY CACHING THE RESULT?</span></span><br><span class="line">                host.getLocationInWindow(mTmpLocation);</span><br><span class="line">                mTransparentRegion.set(mTmpLocation[<span class="number">0</span>], mTmpLocation[<span class="number">1</span>],</span><br><span class="line">                        mTmpLocation[<span class="number">0</span>] + host.mRight - host.mLeft,</span><br><span class="line">                        mTmpLocation[<span class="number">1</span>] + host.mBottom - host.mTop);</span><br><span class="line">                host.gatherTransparentRegion(mTransparentRegion);</span><br><span class="line">                ......</span><br><span class="line">                <span class="keyword">if</span> (!mTransparentRegion.equals(mPreviousTransparentRegion)) &#123;</span><br><span class="line">                    mPreviousTransparentRegion.set(mTransparentRegion);</span><br><span class="line">                    <span class="comment">// reconfigure window manager</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sWindowSession.setTransparentRegion(mWindow, mTransparentRegion);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ......</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">boolean</span> cancelDraw = attachInfo.mTreeObserver.dispatchOnPreDraw();</span><br><span class="line">        <span class="keyword">if</span> (!cancelDraw &amp;&amp; !newSurface) &#123;</span><br><span class="line">            ......</span><br><span class="line">            draw(fullRedrawNeeded);</span><br><span class="line">            ......</span><br><span class="line">        &#125; </span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!--代码在android.view.viewRootImpl类--><h3 id="gatherTransparentRegion"><a href="#gatherTransparentRegion" class="headerlink" title="gatherTransparentRegion"></a>gatherTransparentRegion</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">gatherTransparentRegion</span><span class="params">(Region region)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mWindowType == WindowManager.LayoutParams.TYPE_APPLICATION_PANEL) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.gatherTransparentRegion(region);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> opaque = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> ((mPrivateFlags &amp; PFLAG_SKIP_DRAW) == <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="comment">//need draw not transparent</span></span><br><span class="line">            <span class="comment">// this view draws, remove it from the transparent region</span></span><br><span class="line">            opaque = <span class="keyword">super</span>.gatherTransparentRegion(region);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (region != <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="comment">//caculate the trasparent region </span></span><br><span class="line">            <span class="keyword">int</span> w = getWidth();</span><br><span class="line">            <span class="keyword">int</span> h = getHeight();</span><br><span class="line">            <span class="keyword">if</span> (w&gt;<span class="number">0</span> &amp;&amp; h&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                getLocationInWindow(mLocation);</span><br><span class="line">                <span class="comment">// otherwise, punch a hole in the whole hierarchy</span></span><br><span class="line">                <span class="keyword">int</span> l = mLocation[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">int</span> t = mLocation[<span class="number">1</span>];</span><br><span class="line">                region.op(l, t, l+w, t+h, Region.Op.UNION);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (PixelFormat.formatHasAlpha(mRequestedFormat)) &#123;</span><br><span class="line">            opaque = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> opaque;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><!--代码在android.view.SurfaceView类--><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * This is used by the RootView to perform an optimization when</span></span><br><span class="line"><span class="comment">  * the view hierarchy contains one or several SurfaceView.</span></span><br><span class="line"><span class="comment">  * SurfaceView is always considered transparent, but its children are not,</span></span><br><span class="line"><span class="comment">  * therefore all View objects remove themselves from the global transparent</span></span><br><span class="line"><span class="comment">  * region (passed as a parameter to this function).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> region The transparent region for this ViewAncestor (window).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> Returns true if the effective visibility of the view at this</span></span><br><span class="line"><span class="comment">  * point is opaque, regardless of the transparent region; returns false</span></span><br><span class="line"><span class="comment">  * if it is possible for underlying windows to be seen behind the view.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * &#123;<span class="doctag">@hide</span>&#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">gatherTransparentRegion</span><span class="params">(Region region)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> AttachInfo attachInfo = mAttachInfo;</span><br><span class="line">     <span class="keyword">if</span> (region != <span class="keyword">null</span> &amp;&amp; attachInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">final</span> <span class="keyword">int</span> pflags = mPrivateFlags;</span><br><span class="line">         <span class="keyword">if</span> ((pflags &amp; PFLAG_SKIP_DRAW) == <span class="number">0</span>) &#123;</span><br><span class="line">             <span class="comment">// The SKIP_DRAW flag IS NOT set, so this view draws. We need to</span></span><br><span class="line">             <span class="comment">// remove it from the transparent region.</span></span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span>[] location = attachInfo.mTransparentLocation;</span><br><span class="line">             getLocationInWindow(location);</span><br><span class="line">             region.op(location[<span class="number">0</span>], location[<span class="number">1</span>], location[<span class="number">0</span>] + mRight - mLeft,</span><br><span class="line">                     location[<span class="number">1</span>] + mBottom - mTop, Region.Op.DIFFERENCE);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">if</span> (mBackground != <span class="keyword">null</span> &amp;&amp; mBackground.getOpacity() != PixelFormat.TRANSPARENT) &#123;</span><br><span class="line">                 <span class="comment">// The SKIP_DRAW flag IS set and the background drawable exists, we remove</span></span><br><span class="line">                 <span class="comment">// the background drawable's non-transparent parts from this transparent region.</span></span><br><span class="line">                 applyDrawableToTransparentRegion(mBackground, region);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span> (mForegroundInfo != <span class="keyword">null</span> &amp;&amp; mForegroundInfo.mDrawable != <span class="keyword">null</span></span><br><span class="line">                     &amp;&amp; mForegroundInfo.mDrawable.getOpacity() != PixelFormat.TRANSPARENT) &#123;</span><br><span class="line">                 <span class="comment">// Similarly, we remove the foreground drawable's non-transparent parts.</span></span><br><span class="line">                 applyDrawableToTransparentRegion(mForegroundInfo.mDrawable, region);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><!--代码在android.view.View类--><h2 id="surfaceView的绘制"><a href="#surfaceView的绘制" class="headerlink" title="surfaceView的绘制"></a>surfaceView的绘制</h2><h3 id="整体流程-2"><a href="#整体流程-2" class="headerlink" title="整体流程"></a>整体流程</h3><p><img src="/images/SurfaceView_Flow.png" alt="SurfaceView_Flow"></p><h3 id="getHolder"><a href="#getHolder" class="headerlink" title="getHolder"></a>getHolder</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Return the SurfaceHolder providing access and control over this</span></span><br><span class="line"><span class="comment">  * SurfaceView's underlying surface.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  ##control surface</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> SurfaceHolder The holder of the surface.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> SurfaceHolder <span class="title">getHolder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="comment">//继承surfaceView的View获取holer，通过它来获取surfaceView的surface</span></span><br><span class="line">     <span class="keyword">return</span> mSurfaceHolder;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="lockCanvas"><a href="#lockCanvas" class="headerlink" title="lockCanvas"></a>lockCanvas</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SurfaceView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock mSurfaceLock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">    <span class="keyword">final</span> Surface mSurface = <span class="keyword">new</span> Surface();</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> SurfaceHolder mSurfaceHolder = <span class="keyword">new</span> SurfaceHolder() &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="function"><span class="keyword">public</span> Canvas <span class="title">lockCanvas</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> internalLockCanvas(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ......</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">final</span> Canvas <span class="title">internalLockCanvas</span><span class="params">(Rect dirty)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (mType == SURFACE_TYPE_PUSH_BUFFERS) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BadSurfaceTypeException(</span><br><span class="line">                        <span class="string">"Surface type is SURFACE_TYPE_PUSH_BUFFERS"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            mSurfaceLock.lock();</span><br><span class="line">            ......</span><br><span class="line">            Canvas c = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (!mDrawingStopped &amp;&amp; mWindow != <span class="keyword">null</span>) &#123;</span><br><span class="line">                Rect frame = dirty != <span class="keyword">null</span> ? dirty : mSurfaceFrame;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    c = mSurface.lockCanvas(frame);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    Log.e(LOG_TAG, <span class="string">"Exception locking surface"</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ......</span><br><span class="line">            <span class="keyword">if</span> (c != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mLastLockTime = SystemClock.uptimeMillis();</span><br><span class="line">                <span class="keyword">return</span> c;</span><br><span class="line">            &#125;</span><br><span class="line">            ......</span><br><span class="line">            mSurfaceLock.unlock();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        &#125; </span><br><span class="line">        ......         </span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="unlockCanvasAndPost"><a href="#unlockCanvasAndPost" class="headerlink" title="unlockCanvasAndPost"></a>unlockCanvasAndPost</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SurfaceView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock mSurfaceLock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">    <span class="keyword">final</span> Surface mSurface = <span class="keyword">new</span> Surface();</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> SurfaceHolder mSurfaceHolder = <span class="keyword">new</span> SurfaceHolder() &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlockCanvasAndPost</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">            mSurface.unlockCanvasAndPost(canvas);</span><br><span class="line">            mSurfaceLock.unlock();</span><br><span class="line">        &#125; </span><br><span class="line">        ......         </span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一般步骤"><a href="#一般步骤" class="headerlink" title="一般步骤"></a>一般步骤</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SurfaceView sv = (SurfaceView )findViewById(R.id.surface_view);</span><br><span class="line">SurfaceHolder sh = sv.getHolder();</span><br><span class="line">Cavas canvas = sh.lockCanvas()</span><br><span class="line"><span class="comment">//Draw something on canvas</span></span><br><span class="line">......</span><br><span class="line">sh.unlockCanvasAndPost(canvas);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;surfaceView的建立&quot;&gt;&lt;a href=&quot;#surfaceView的建立&quot; class=&quot;headerlink&quot; title=&quot;surfaceView的建立&quot;&gt;&lt;/a&gt;surfaceView的建立&lt;/h2&gt;&lt;h3 id=&quot;整体流程&quot;&gt;&lt;a href=&quot;#整
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>ViewRootImpl源码解读</title>
    <link href="http://jinjian.info/2017/09/17/ViewRootImpl%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/09/17/ViewRootImpl源码解读/</id>
    <published>2017-09-16T16:00:00.000Z</published>
    <updated>2018-02-14T12:13:34.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="消息传递"><a href="#消息传递" class="headerlink" title="消息传递"></a>消息传递</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">前置消息生成</span><br><span class="line">hardWare&amp;nativeCode -&gt; </span><br><span class="line"></span><br><span class="line">InputEventReceiver(dispatchInputEvent)-&gt;</span><br><span class="line"></span><br><span class="line">ViewRootImpl$WindowInputEventReceiver(dispatchInputEvent)-&gt;</span><br><span class="line"></span><br><span class="line">ViewRootImpl(enqueueInputEvent) －&gt;</span><br><span class="line"></span><br><span class="line">if processImmediately</span><br><span class="line"> ViewRootImpl(doProcessInputEvents)  </span><br><span class="line">else</span><br><span class="line"> ViewRootImpl(scheduleProcessInputEvents)</span><br></pre></td></tr></table></figure><h4 id="KeyEvent"><a href="#KeyEvent" class="headerlink" title="KeyEvent"></a>KeyEvent</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Target:to find the focus one self or child.</span><br><span class="line"></span><br><span class="line">get from QueuedInputEvent .....-&gt;</span><br><span class="line"></span><br><span class="line">ViewRootImpl$ViewPostImeInputStage(onProcess)-&gt;</span><br><span class="line"></span><br><span class="line">ViewRootImpl$ViewPostImeInputStage(processKeyEvent)-&gt;</span><br><span class="line"></span><br><span class="line">PhoneWindow$DecorView(dispatchKeyEvent)-&gt;</span><br><span class="line"></span><br><span class="line">Activity implenments Windows.CallBack(dispathcKeyEvent) -&gt;</span><br><span class="line"></span><br><span class="line">PhoneWindow$DecorView(superDispatchKeyEvent) -&gt;</span><br><span class="line"></span><br><span class="line">ViewGroup(dispatchKeyEvent) -&gt;</span><br><span class="line"></span><br><span class="line">View(dispatchKeyEvent) -&gt;</span><br><span class="line"></span><br><span class="line">KeyEvent(dispatch)</span><br></pre></td></tr></table></figure><h5 id="ViewGroup-dispatchKeyEvent"><a href="#ViewGroup-dispatchKeyEvent" class="headerlink" title="ViewGroup:dispatchKeyEvent"></a>ViewGroup:dispatchKeyEvent</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchKeyEvent</span><span class="params">(KeyEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mInputEventConsistencyVerifier.onKeyEvent(event, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//##important:here decide parent first and then child</span></span><br><span class="line">      <span class="comment">//## to find the focus one </span></span><br><span class="line">        <span class="keyword">if</span> ((mPrivateFlags &amp; (PFLAG_FOCUSED | PFLAG_HAS_BOUNDS))</span><br><span class="line">                == (PFLAG_FOCUSED | PFLAG_HAS_BOUNDS)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">super</span>.dispatchKeyEvent(event)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFocused != <span class="keyword">null</span> &amp;&amp; (mFocused.mPrivateFlags &amp; PFLAG_HAS_BOUNDS)</span><br><span class="line">                == PFLAG_HAS_BOUNDS) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mFocused.dispatchKeyEvent(event)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mInputEventConsistencyVerifier.onUnhandledEvent(event, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="View-dispatchKeyEvent"><a href="#View-dispatchKeyEvent" class="headerlink" title="View:dispatchKeyEvent"></a>View:dispatchKeyEvent</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Dispatch a key event to the next view on the focus path. This path runs</span></span><br><span class="line"><span class="comment">  * from the top of the view tree down to the currently focused view. If this</span></span><br><span class="line"><span class="comment">  * view has focus, it will dispatch to itself. Otherwise it will dispatch</span></span><br><span class="line"><span class="comment">  * the next node down the focus path. This method also fires any key</span></span><br><span class="line"><span class="comment">  * listeners.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> event The key event to be dispatched.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> True if the event was handled, false otherwise.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchKeyEvent</span><span class="params">(KeyEvent event)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">         mInputEventConsistencyVerifier.onKeyEvent(event, <span class="number">0</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Give any attached key listener a first crack at the event.</span></span><br><span class="line">     <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">   <span class="comment">// setOnKeyListener </span></span><br><span class="line">     ListenerInfo li = mListenerInfo;</span><br><span class="line">     <span class="keyword">if</span> (li != <span class="keyword">null</span> &amp;&amp; li.mOnKeyListener != <span class="keyword">null</span> &amp;&amp; (mViewFlags &amp; ENABLED_MASK) == ENABLED</span><br><span class="line">             &amp;&amp; li.mOnKeyListener.onKey(<span class="keyword">this</span>, event.getKeyCode(), event)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (event.dispatch(<span class="keyword">this</span>, mAttachInfo != <span class="keyword">null</span></span><br><span class="line">             ? mAttachInfo.mKeyDispatchState : <span class="keyword">null</span>, <span class="keyword">this</span>)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (mInputEventConsistencyVerifier != <span class="keyword">null</span>) &#123;</span><br><span class="line">         mInputEventConsistencyVerifier.onUnhandledEvent(event, <span class="number">0</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="Activity-dispatchKeyEvent"><a href="#Activity-dispatchKeyEvent" class="headerlink" title="Activity:dispatchKeyEvent"></a>Activity:dispatchKeyEvent</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Called to process key events.  You can override this to intercept all</span></span><br><span class="line"><span class="comment"> * key events before they are dispatched to the window.  Be sure to call</span></span><br><span class="line"><span class="comment"> * this implementation for key events that should be handled normally.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> event The key event.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean Return true if this event was consumed.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchKeyEvent</span><span class="params">(KeyEvent event)</span> </span>&#123;</span><br><span class="line">    onUserInteraction();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Let action bars open menus in response to the menu key prioritized over</span></span><br><span class="line">    <span class="comment">// the window handling it</span></span><br><span class="line">    <span class="keyword">if</span> (event.getKeyCode() == KeyEvent.KEYCODE_MENU &amp;&amp;</span><br><span class="line">            mActionBar != <span class="keyword">null</span> &amp;&amp; mActionBar.onMenuKeyEvent(event)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//##important:here decide the sequece ViewGroup View Activity;</span></span><br><span class="line">    Window win = getWindow();</span><br><span class="line">    <span class="keyword">if</span> (win.superDispatchKeyEvent(event)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    View decor = mDecor;</span><br><span class="line">    <span class="keyword">if</span> (decor == <span class="keyword">null</span>) decor = win.getDecorView();</span><br><span class="line">  <span class="comment">// at last </span></span><br><span class="line">    <span class="keyword">return</span> event.dispatch(<span class="keyword">this</span>, decor != <span class="keyword">null</span></span><br><span class="line">            ? decor.getKeyDispatcherState() : <span class="keyword">null</span>, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="TouchEvent"><a href="#TouchEvent" class="headerlink" title="TouchEvent"></a>TouchEvent</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sequence:dispatchTouchEvent,onInterceptTouchEvent,onTouchEvent ,U型传递</span><br><span class="line"></span><br><span class="line">get from  QueueInputEvent....-&gt;</span><br><span class="line">ViewRootImpl$ViewPostImeInputStage(processPointerEvent)-&gt;</span><br><span class="line">View(dispatchPointerEvent)-&gt;</span><br><span class="line">PhoneWindow$DecorView(dispatchTouchEvent)-&gt;</span><br><span class="line">Activity implements Windows.CallBack:(dispatchTouchEvent)-&gt;</span><br><span class="line">PhoneWindow$DecorView(superDispatchTouchEvent)-&gt;</span><br><span class="line">ViewGroup(dispatchTouchEvent)-&gt;</span><br><span class="line">View(dispatchTouchEvent)-&gt; </span><br><span class="line">.........</span><br></pre></td></tr></table></figure><h5 id="U型传递图"><a href="#U型传递图" class="headerlink" title="U型传递图"></a>U型传递图</h5><p><img src="https://github.com/jinjiankla/NaviRecycleView/blob/master/gif/touche_d.png?raw=true" alt="ViewRootImpl_U1"></p><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><ol><li>touch事件先子View后父View,key事件先父View后子View,Activity作为兜底方案</li><li>不论是touch事件还是key事件都是自顶向下分发的</li><li>…….</li></ol><h3 id="与windowsManagerService通信"><a href="#与windowsManagerService通信" class="headerlink" title="与windowsManagerService通信"></a>与windowsManagerService通信</h3><h4 id="IWindowSession"><a href="#IWindowSession" class="headerlink" title="IWindowSession"></a>IWindowSession</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new ViewRootImpl -&gt;</span><br><span class="line">WindowManagerGlobal(getWindowSession)-&gt;</span><br><span class="line">WindowManagerService(openSession) -&gt;</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h5 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h5><p>This class represents an active client session.  There is generally one Session object per process that is interacting with the window manager.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//## from WindowManagerService openSession</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> IWindowSession <span class="title">openSession</span><span class="params">(IWindowSessionCallback callback, IInputMethodClient client,</span></span></span><br><span class="line"><span class="function"><span class="params">          IInputContext inputContext)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (client == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"null client"</span>);</span><br><span class="line">      <span class="keyword">if</span> (inputContext == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"null inputContext"</span>);</span><br><span class="line">      Session session = <span class="keyword">new</span> Session(<span class="keyword">this</span>, callback, client, inputContext);</span><br><span class="line">      <span class="keyword">return</span> session;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="SurfaceSession"><a href="#SurfaceSession" class="headerlink" title="SurfaceSession"></a>SurfaceSession</h4><h5 id="How-to-Create"><a href="#How-to-Create" class="headerlink" title="How to Create"></a>How to Create</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ActivityThread(handleResumeActivity) -&gt;</span><br><span class="line"></span><br><span class="line">WindowManagerGlobal(addView)-&gt;</span><br><span class="line"></span><br><span class="line">ViewRootImpl(setView) -&gt;</span><br><span class="line"></span><br><span class="line">Session(addToDisplay)-&gt;</span><br><span class="line"></span><br><span class="line">WindowManagerService(addWindow) -&gt;</span><br><span class="line"></span><br><span class="line">WindowState(attach) -&gt;</span><br><span class="line"></span><br><span class="line">Session(windowAddedLocked)-&gt;</span><br><span class="line"></span><br><span class="line">new SurfaceSession</span><br></pre></td></tr></table></figure><h3 id="触发视图的更新"><a href="#触发视图的更新" class="headerlink" title="触发视图的更新"></a>触发视图的更新</h3><h4 id="Activity的onCreate"><a href="#Activity的onCreate" class="headerlink" title="Activity的onCreate"></a>Activity的onCreate</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ActivityThread(handleLaunchActivity) -&gt; </span><br><span class="line"></span><br><span class="line">ActivityThread performLaunchActivity -&gt;</span><br><span class="line"></span><br><span class="line">Instrumentation(callActivityOnCreate) -&gt;</span><br><span class="line"></span><br><span class="line">Activity(onCreate)</span><br></pre></td></tr></table></figure><h4 id="DecorView的建立"><a href="#DecorView的建立" class="headerlink" title="DecorView的建立"></a>DecorView的建立</h4><p>via setContentView </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Activity (setContentView)-&gt;</span><br><span class="line"></span><br><span class="line">PhoneWindow(setContentView)-&gt;</span><br><span class="line"></span><br><span class="line">PhoneWindow(installDecor)-&gt;</span><br><span class="line"></span><br><span class="line">PhoneWindow(generateDecor)-&gt;</span><br><span class="line"></span><br><span class="line">new DecorView -&gt; LayoutInflater .......</span><br></pre></td></tr></table></figure><h4 id="DecorView的添加"><a href="#DecorView的添加" class="headerlink" title="DecorView的添加"></a>DecorView的添加</h4><p>via onResume</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//## Surface create in ViewRootImpl but is Empty</span></span><br><span class="line"><span class="comment">//## surface filled data in outSurface.copyFrom(surfaceControl)</span></span><br><span class="line"></span><br><span class="line">ActivityThread (handleResumeActivity) -&gt;</span><br><span class="line"></span><br><span class="line">WindowManagerGlobal(addView)-&gt;</span><br><span class="line"></span><br><span class="line">ViewRootImpl(setView)-&gt;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">ViewRootImpl(performTraversals)-&gt;</span><br><span class="line"></span><br><span class="line">ViewRootImpl(relayoutWindow)-&gt; </span><br><span class="line"></span><br><span class="line">Session(relayout)-&gt;</span><br><span class="line"></span><br><span class="line">WindowManagerService(relayoutWindow)-&gt; </span><br><span class="line"></span><br><span class="line">WindowStateAnimator createSurfaceLocked  outSurface.copyFrom(surfaceControl)-&gt;.....</span><br></pre></td></tr></table></figure><h4 id="AttachToWindow"><a href="#AttachToWindow" class="headerlink" title="AttachToWindow"></a>AttachToWindow</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ActivityThread(handleResumeActivity)-&gt;</span><br><span class="line">  </span><br><span class="line">WindowManagerGlobal(addView)-&gt;</span><br><span class="line">  </span><br><span class="line">ViewRootImpl(setView)-&gt;</span><br><span class="line">  </span><br><span class="line">ViewRootImpl(requestLayout) ......-&gt;</span><br><span class="line">  </span><br><span class="line">ViewRootImpl(performTraversals)</span><br><span class="line">[here  host.dispatchAttachedToWindow ,host.dispatchWindowVisibilityChanged ......onMeasure ,onLayout,onDraw....]-&gt;</span><br><span class="line">  </span><br><span class="line">......</span><br></pre></td></tr></table></figure><h4 id="DettachToWindow"><a href="#DettachToWindow" class="headerlink" title="DettachToWindow"></a>DettachToWindow</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ActivityThread(handleDestroyActivity)-&gt;</span><br><span class="line">  </span><br><span class="line">WindowManagerImpl(removeViewImmediate)-&gt;</span><br><span class="line">  </span><br><span class="line">WindowManagerGlobal(removeView)-&gt;</span><br><span class="line">  </span><br><span class="line">WindowManagerGlobal(removeViewLocked)-&gt; </span><br><span class="line">  </span><br><span class="line">ViewRootImpl(die)-&gt;</span><br><span class="line">  </span><br><span class="line">ViewRootImpl(doDie)-&gt;</span><br><span class="line">  </span><br><span class="line">ViewRootImpl(dispatchDetachedFromWindow)-&gt;</span><br><span class="line">  </span><br><span class="line">View(dispatchDetachedFromWindow)-&gt;</span><br><span class="line">  </span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="数据生命周期"><a href="#数据生命周期" class="headerlink" title="数据生命周期"></a>数据生命周期</h3><h4 id="attachInfo"><a href="#attachInfo" class="headerlink" title="attachInfo"></a>attachInfo</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//##ViewRootImpl</span></span><br><span class="line"><span class="comment">//Create </span></span><br><span class="line"><span class="keyword">new</span> ViewRootImpl-&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> View.AttachInfo(mWindowSession, mWindow, display, <span class="keyword">this</span>, mHandler, <span class="keyword">this</span>)</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//dispatch to children</span></span><br><span class="line">dispatchAttachedToWindow</span><br><span class="line"></span><br><span class="line"><span class="comment">//destory</span></span><br><span class="line">dispatchDetachedFromWindow[attachinfo=<span class="keyword">null</span>]</span><br></pre></td></tr></table></figure><h4 id="viewParent"><a href="#viewParent" class="headerlink" title="viewParent"></a>viewParent</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//##ViewRootImpl</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//dispatch to children  on dispatchAttachToWindow</span></span><br><span class="line">assignParent(<span class="keyword">this</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//detory on dispatchDetachFromWindow</span></span><br><span class="line">assignParent(<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;主要功能&quot;&gt;&lt;a href=&quot;#主要功能&quot; class=&quot;headerlink&quot; title=&quot;主要功能&quot;&gt;&lt;/a&gt;主要功能&lt;/h2&gt;&lt;h3 id=&quot;消息传递&quot;&gt;&lt;a href=&quot;#消息传递&quot; class=&quot;headerlink&quot; title=&quot;消息传递&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>关于canvas的使用</title>
    <link href="http://jinjian.info/2017/09/10/canvas%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://jinjian.info/2017/09/10/canvas的使用/</id>
    <published>2017-09-09T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">WHO AM I:</span><br><span class="line"></span><br><span class="line">The Canvas class holds the &quot;draw&quot; calls. To draw something, you need</span><br><span class="line">4 basic components:</span><br><span class="line">1.a Bitmap to hold the pixels</span><br><span class="line">2.a Canvas to host the draw calls (writing into the bitmap)</span><br><span class="line">3.a drawing primitive (e.g. Rect,Path, text, Bitmap)</span><br><span class="line">4.a paint (to describe the colors and styles for the *drawing)</span><br></pre></td></tr></table></figure><h3 id="宏观图"><a href="#宏观图" class="headerlink" title="宏观图"></a>宏观图</h3><p><img src="/images/Canvas_Main.png" alt="Canvas_Main"></p><h3 id="易混淆用法"><a href="#易混淆用法" class="headerlink" title="易混淆用法"></a>易混淆用法</h3><h4 id="canvas"><a href="#canvas" class="headerlink" title="canvas"></a>canvas</h4><h5 id="drawArc"><a href="#drawArc" class="headerlink" title="drawArc"></a>drawArc</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  ###  arc center is the left,top,right,bottom center to darw it</span></span><br><span class="line"><span class="comment">  ###  param:startAngle and SWEEPANGLE</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Draw the specified arc, which will be scaled to fit inside the</span></span><br><span class="line"><span class="comment"> * specified oval.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the start angle is negative or &gt;= 360, the start angle is treated</span></span><br><span class="line"><span class="comment"> * as start angle modulo 360.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the sweep angle is &gt;= 360, then the oval is drawn</span></span><br><span class="line"><span class="comment"> * completely. Note that this differs slightly from SkPath::arcTo, which</span></span><br><span class="line"><span class="comment"> * treats the sweep angle modulo 360. If the sweep angle is negative,</span></span><br><span class="line"><span class="comment"> * the sweep angle is treated as sweep angle modulo 360&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The arc is drawn clockwise. An angle of 0 degrees correspond to the</span></span><br><span class="line"><span class="comment"> * geometric angle of 0 degrees (3 o'clock on a watch.)&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> startAngle Starting angle (in degrees) where the arc begins</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sweepAngle Sweep angle (in degrees) measured clockwise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> useCenter If true, include the center of the oval in the arc, and</span></span><br><span class="line"><span class="comment">                    close it if it is being stroked. This will draw a wedge</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> paint      The paint used to draw the arc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawArc</span><span class="params">(<span class="keyword">float</span> left, <span class="keyword">float</span> top, <span class="keyword">float</span> right, <span class="keyword">float</span> bottom, <span class="keyword">float</span> startAngle,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">float</span> sweepAngle, <span class="keyword">boolean</span> useCenter, @NonNull Paint paint)</span> </span>&#123;</span><br><span class="line">    native_drawArc(mNativeCanvasWrapper, left, top, right, bottom, startAngle, sweepAngle,</span><br><span class="line">            useCenter, paint.getNativeInstance());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="path"><a href="#path" class="headerlink" title="path"></a>path</h4><h5 id="Path中的addArc-vs-arcTo"><a href="#Path中的addArc-vs-arcTo" class="headerlink" title="Path中的addArc vs arcTo"></a>Path中的addArc vs arcTo</h5><p><img src="/images/Canvas_Diff_Arc.png" alt="Canvas_Diff_Arc"></p><h5 id="setFillType-amp-amp-op"><a href="#setFillType-amp-amp-op" class="headerlink" title="setFillType &amp;&amp; op"></a>setFillType &amp;&amp; op</h5><p>有点类似于paint的setXferMode(),是path在图形叠加方面的处理功能接口</p><p>##### </p><h4 id="paint中的工具方法"><a href="#paint中的工具方法" class="headerlink" title="paint中的工具方法"></a>paint中的工具方法</h4><h5 id="measuretext-vs-gettextbounds"><a href="#measuretext-vs-gettextbounds" class="headerlink" title="measuretext  vs gettextbounds"></a>measuretext  vs gettextbounds</h5><h6 id="measuretext"><a href="#measuretext" class="headerlink" title="measuretext"></a>measuretext</h6><ol><li>它返回的是一个浮点数</li><li>它给出的是文字的实际占用面积，是在最小占用面积的前后增加了advanceX,所以会比后者要宽</li></ol><h6 id="gettextbounds"><a href="#gettextbounds" class="headerlink" title="gettextbounds"></a>gettextbounds</h6><ol><li>它返回的是一个整数</li><li>它给出的是文字的最小占用面积</li></ol><h5 id="breakText找出换行处"><a href="#breakText找出换行处" class="headerlink" title="breakText找出换行处"></a>breakText找出换行处</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Measure the text, stopping early if the measured width exceeds maxWidth.</span></span><br><span class="line"><span class="comment">  * Return the number of chars that were measured, and if measuredWidth is</span></span><br><span class="line"><span class="comment">  * not null, return in it the actual width measured.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> text  The text to measure. Cannot be null.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> index The offset into text to begin measuring at</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> count The number of maximum number of entries to measure. If count</span></span><br><span class="line"><span class="comment">  *              is negative, then the characters are measured in reverse order.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> maxWidth The maximum width to accumulate.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> measuredWidth Optional. If not null, returns the actual width</span></span><br><span class="line"><span class="comment">  *                     measured.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> The number of chars that were measured. Will always be &lt;=</span></span><br><span class="line"><span class="comment">  *         abs(count).</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">breakText</span><span class="params">(<span class="keyword">char</span>[] text, <span class="keyword">int</span> index, <span class="keyword">int</span> count,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">float</span> maxWidth, <span class="keyword">float</span>[] measuredWidth)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (text == <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"text cannot be null"</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (index &lt; <span class="number">0</span> || text.length - index &lt; Math.abs(count)) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> ArrayIndexOutOfBoundsException();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (text.length == <span class="number">0</span> || count == <span class="number">0</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (!mHasCompatScaling) &#123;</span><br><span class="line">         <span class="keyword">return</span> native_breakText(mNativePaint, mNativeTypeface, text, index, count, maxWidth,</span><br><span class="line">                 mBidiFlags, measuredWidth);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">float</span> oldSize = getTextSize();</span><br><span class="line">     setTextSize(oldSize * mCompatScaling);</span><br><span class="line">     <span class="keyword">int</span> res = native_breakText(mNativePaint, mNativeTypeface, text, index, count,</span><br><span class="line">             maxWidth * mCompatScaling, mBidiFlags, measuredWidth);</span><br><span class="line">     setTextSize(oldSize);</span><br><span class="line">     <span class="keyword">if</span> (measuredWidth != <span class="keyword">null</span>) measuredWidth[<span class="number">0</span>] *= mInvCompatScaling;</span><br><span class="line">     <span class="keyword">return</span> res;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="打开另一扇门-文字转化成path"><a href="#打开另一扇门-文字转化成path" class="headerlink" title="打开另一扇门,文字转化成path"></a>打开另一扇门,文字转化成path</h5><p>通过paint中提供的方法getTextPath(char[] text, int index, int count, float x, float y, Path path)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>Drawable源码解读</title>
    <link href="http://jinjian.info/2017/08/17/Drawable%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/08/17/Drawable源码解读/</id>
    <published>2017-08-16T16:00:00.000Z</published>
    <updated>2017-12-23T19:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Android里最常用的5大包名</p><p>package:</p><p>android.animation</p><p>android.text</p><p>android.view</p><p>android.widget</p><p>android.graphics</p><p>本篇介绍android.graphics当中的drawable</p><blockquote><p>Though usually not visible to the application, Drawables may take a variety</p><p>of forms:</p><ul><li>Bitmap: the simplest Drawable, a PNG or JPEG image.</li><li><p>Nine Patch: an extension to the PNG format allows it to</p><p> specify information about how to stretch it and place things inside of</p><p> it.</p></li><li><p>Shape: contains simple drawing commands instead of a raw</p><p> bitmap, allowing it to resize better in some cases.</p></li><li><p>Layers: a compound drawable, which draws multiple underlying</p><p> drawables on top of each other.</p></li><li><p>States: a compound drawable that selects one of a set of</p><p> drawables based on its state.</p></li><li><p>Levels: a compound drawable that selects one of a set of</p><p> drawables based on its level.</p></li><li><p>Scale: a compound drawable with a single child drawable,</p><p> whose overall size is modified based on the current level.</p></li></ul></blockquote><h3 id="Drawable方法论"><a href="#Drawable方法论" class="headerlink" title="Drawable方法论"></a>Drawable方法论</h3><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p><img src="/images/Drawable_Method.png" alt="Drawable_Method"></p><h3 id="Drawable的子类们"><a href="#Drawable的子类们" class="headerlink" title="Drawable的子类们"></a>Drawable的子类们</h3><h4 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h4><p><img src="/images/Drawable_OverView.png" alt="Drawable_OverView"></p><h4 id="ShapeDrawable"><a href="#ShapeDrawable" class="headerlink" title="ShapeDrawable"></a>ShapeDrawable</h4><h5 id="draw"><a href="#draw" class="headerlink" title="draw"></a>draw</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Rect r = getBounds();<span class="comment">//get how large with location</span></span><br><span class="line">    <span class="keyword">final</span> ShapeState state = mShapeState;</span><br><span class="line">    <span class="keyword">final</span> Paint paint = state.mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> prevAlpha = paint.getAlpha();</span><br><span class="line">    paint.setAlpha(modulateAlpha(prevAlpha, state.mAlpha));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// only draw shape if it may affect output</span></span><br><span class="line">    <span class="keyword">if</span> (paint.getAlpha() != <span class="number">0</span> || paint.getXfermode() != <span class="keyword">null</span> || paint.hasShadowLayer()) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> clearColorFilter;</span><br><span class="line">        <span class="keyword">if</span> (mTintFilter != <span class="keyword">null</span> &amp;&amp; paint.getColorFilter() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            paint.setColorFilter(mTintFilter);</span><br><span class="line">            clearColorFilter = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            clearColorFilter = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (state.mShape != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// need the save both for the translate, and for the (unknown)</span></span><br><span class="line">            <span class="comment">// Shape</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> count = canvas.save();</span><br><span class="line">            canvas.translate(r.left, r.top);</span><br><span class="line">            onDraw(state.mShape, canvas, paint);<span class="comment">// see below</span></span><br><span class="line">            canvas.restoreToCount(count);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            canvas.drawRect(r, paint);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (clearColorFilter) &#123;</span><br><span class="line">            paint.setColorFilter(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// restore</span></span><br><span class="line">    paint.setAlpha(prevAlpha);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="onDraw"><a href="#onDraw" class="headerlink" title="onDraw"></a>onDraw</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Called from the drawable's draw() method after the canvas has been set to</span></span><br><span class="line"><span class="comment">   * draw the shape at (0,0). Subclasses can override for special effects such</span></span><br><span class="line"><span class="comment">   * as multiple layers, stroking, etc.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Shape shape, Canvas canvas, Paint paint)</span> </span>&#123;</span><br><span class="line">      shape.draw(canvas, paint);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="shape与shapeDrawable"><a href="#shape与shapeDrawable" class="headerlink" title="shape与shapeDrawable"></a>shape与shapeDrawable</h5><p><img src="/images/Drawable_Shape.png" alt="Drawable_Shape"></p><h5 id="ShapeState"><a href="#ShapeState" class="headerlink" title="ShapeState"></a>ShapeState</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Defines the intrinsic properties of this ShapeDrawable's Shape.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">final</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ShapeState</span> <span class="keyword">extends</span> <span class="title">ConstantState</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span>[] mThemeAttrs;</span><br><span class="line">     <span class="keyword">int</span> mChangingConfigurations;</span><br><span class="line">     Paint mPaint;</span><br><span class="line">     Shape mShape;</span><br><span class="line">     ColorStateList mTint = <span class="keyword">null</span>;</span><br><span class="line">     Mode mTintMode = DEFAULT_TINT_MODE;</span><br><span class="line">     Rect mPadding;</span><br><span class="line">     <span class="keyword">int</span> mIntrinsicWidth;</span><br><span class="line">     <span class="keyword">int</span> mIntrinsicHeight;</span><br><span class="line">     <span class="keyword">int</span> mAlpha = <span class="number">255</span>;</span><br><span class="line">     ShaderFactory mShaderFactory;</span><br><span class="line"></span><br><span class="line">     ShapeState(ShapeState orig) &#123;</span><br><span class="line">         <span class="keyword">if</span> (orig != <span class="keyword">null</span>) &#123;</span><br><span class="line">             mThemeAttrs = orig.mThemeAttrs;</span><br><span class="line">             mPaint = orig.mPaint;</span><br><span class="line">             mShape = orig.mShape;</span><br><span class="line">             mTint = orig.mTint;</span><br><span class="line">             mTintMode = orig.mTintMode;</span><br><span class="line">             mPadding = orig.mPadding;</span><br><span class="line">             mIntrinsicWidth = orig.mIntrinsicWidth;</span><br><span class="line">             mIntrinsicHeight = orig.mIntrinsicHeight;</span><br><span class="line">             mAlpha = orig.mAlpha;</span><br><span class="line">             mShaderFactory = orig.mShaderFactory;</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             mPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canApplyTheme</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> mThemeAttrs != <span class="keyword">null</span></span><br><span class="line">                 || (mTint != <span class="keyword">null</span> &amp;&amp; mTint.canApplyTheme());</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> Drawable <span class="title">newDrawable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> ShapeDrawable(<span class="keyword">this</span>, <span class="keyword">null</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> Drawable <span class="title">newDrawable</span><span class="params">(Resources res)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> ShapeDrawable(<span class="keyword">this</span>, res);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getChangingConfigurations</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> mChangingConfigurations</span><br><span class="line">                 | (mTint != <span class="keyword">null</span> ? mTint.getChangingConfigurations() : <span class="number">0</span>);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="ColorDrawable"><a href="#ColorDrawable" class="headerlink" title="ColorDrawable"></a>ColorDrawable</h4><h5 id="draw-1"><a href="#draw-1" class="headerlink" title="draw"></a>draw</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ColorFilter colorFilter = mPaint.getColorFilter();</span><br><span class="line">    <span class="keyword">if</span> ((mColorState.mUseColor &gt;&gt;&gt; <span class="number">24</span>) != <span class="number">0</span> || colorFilter != <span class="keyword">null</span> || mTintFilter != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (colorFilter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mPaint.setColorFilter(mTintFilter);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mPaint.setColor(mColorState.mUseColor);</span><br><span class="line">        canvas.drawRect(getBounds(), mPaint);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Restore original color filter.</span></span><br><span class="line">        mPaint.setColorFilter(colorFilter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BitmapDrawable"><a href="#BitmapDrawable" class="headerlink" title="BitmapDrawable"></a>BitmapDrawable</h4><h5 id="draw-2"><a href="#draw-2" class="headerlink" title="draw"></a>draw</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Bitmap bitmap = mBitmapState.mBitmap;</span><br><span class="line">        <span class="keyword">if</span> (bitmap == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> BitmapState state = mBitmapState;</span><br><span class="line">      <span class="comment">// config with shader</span></span><br><span class="line">        <span class="keyword">final</span> Paint paint = state.mPaint;</span><br><span class="line">        <span class="keyword">if</span> (state.mRebuildShader) &#123;</span><br><span class="line">            <span class="keyword">final</span> Shader.TileMode tmx = state.mTileModeX;</span><br><span class="line">            <span class="keyword">final</span> Shader.TileMode tmy = state.mTileModeY;</span><br><span class="line">            <span class="keyword">if</span> (tmx == <span class="keyword">null</span> &amp;&amp; tmy == <span class="keyword">null</span>) &#123;</span><br><span class="line">                paint.setShader(<span class="keyword">null</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                paint.setShader(<span class="keyword">new</span> BitmapShader(bitmap,</span><br><span class="line">                        tmx == <span class="keyword">null</span> ? Shader.TileMode.CLAMP : tmx,</span><br><span class="line">                        tmy == <span class="keyword">null</span> ? Shader.TileMode.CLAMP : tmy));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            state.mRebuildShader = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//config with alpha</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> restoreAlpha;</span><br><span class="line">        <span class="keyword">if</span> (state.mBaseAlpha != <span class="number">1.0f</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> Paint p = getPaint();</span><br><span class="line">            restoreAlpha = p.getAlpha();</span><br><span class="line">            p.setAlpha((<span class="keyword">int</span>) (restoreAlpha * state.mBaseAlpha + <span class="number">0.5f</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            restoreAlpha = -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//config with colorFilter</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> clearColorFilter;</span><br><span class="line">        <span class="keyword">if</span> (mTintFilter != <span class="keyword">null</span> &amp;&amp; paint.getColorFilter() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            paint.setColorFilter(mTintFilter);</span><br><span class="line">            clearColorFilter = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            clearColorFilter = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        updateDstRectAndInsetsIfDirty();</span><br><span class="line">        <span class="keyword">final</span> Shader shader = paint.getShader();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> needMirroring = needMirroring();</span><br><span class="line">        <span class="keyword">if</span> (shader == <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="comment">// deal with mirroring</span></span><br><span class="line">            <span class="keyword">if</span> (needMirroring) &#123;</span><br><span class="line">                canvas.save();</span><br><span class="line">                <span class="comment">// Mirror the bitmap</span></span><br><span class="line">                canvas.translate(mDstRect.right - mDstRect.left, <span class="number">0</span>);</span><br><span class="line">                canvas.scale(-<span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">// draw bitmap</span></span><br><span class="line">            canvas.drawBitmap(bitmap, <span class="keyword">null</span>, mDstRect, paint);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (needMirroring) &#123;</span><br><span class="line">                canvas.restore();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (needMirroring) &#123;</span><br><span class="line">                <span class="comment">// Mirror the bitmap</span></span><br><span class="line">                updateMirrorMatrix(mDstRect.right - mDstRect.left);</span><br><span class="line">                shader.setLocalMatrix(mMirrorMatrix);</span><br><span class="line">                paint.setShader(shader);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mMirrorMatrix != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mMirrorMatrix = <span class="keyword">null</span>;</span><br><span class="line">                    shader.setLocalMatrix(Matrix.IDENTITY_MATRIX);</span><br><span class="line">                    paint.setShader(shader);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            canvas.drawRect(mDstRect, paint);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//resotre </span></span><br><span class="line">        <span class="keyword">if</span> (clearColorFilter) &#123;</span><br><span class="line">            paint.setColorFilter(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (restoreAlpha &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            paint.setAlpha(restoreAlpha);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="LayerDrawable"><a href="#LayerDrawable" class="headerlink" title="LayerDrawable"></a>LayerDrawable</h4><h5 id="draw-3"><a href="#draw-3" class="headerlink" title="draw"></a>draw</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ChildDrawable[] array = mLayerState.mChildren;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> N = mLayerState.mNum;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="keyword">final</span> Drawable dr = array[i].mDrawable;</span><br><span class="line">        <span class="keyword">if</span> (dr != <span class="keyword">null</span>) &#123;</span><br><span class="line">            dr.draw(canvas);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="LayerState"><a href="#LayerState" class="headerlink" title="LayerState"></a>LayerState</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LayerState</span> <span class="keyword">extends</span> <span class="title">ConstantState</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> mNum;</span><br><span class="line">        ChildDrawable[] mChildren;</span><br><span class="line">        <span class="keyword">int</span>[] mThemeAttrs;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> mPaddingTop = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mPaddingBottom = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mPaddingLeft = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mPaddingRight = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mPaddingStart = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mPaddingEnd = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mOpacityOverride = PixelFormat.UNKNOWN;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> mChangingConfigurations;</span><br><span class="line">        <span class="keyword">int</span> mChildrenChangingConfigurations;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> mHaveOpacity;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> mOpacity;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> mHaveIsStateful;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> mIsStateful;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> mAutoMirrored = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> mPaddingMode = PADDING_MODE_NEST;</span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">        LayerState(LayerState orig, LayerDrawable owner, Resources res) &#123;</span></span><br><span class="line"><span class="string">            if (orig != null) &#123;</span></span><br><span class="line"><span class="string">                final ChildDrawable[] origChildDrawable = orig.mChildren;</span></span><br><span class="line"><span class="string">                final int N = orig.mNum;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                mNum = N;</span></span><br><span class="line"><span class="string">                mChildren = new ChildDrawable[N];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                mChangingConfigurations = orig.mChangingConfigurations;</span></span><br><span class="line"><span class="string">                mChildrenChangingConfigurations = orig.mChildrenChangingConfigurations;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                for (int i = 0; i &lt; N; i++) &#123;</span></span><br><span class="line"><span class="string">                    final ChildDrawable or = origChildDrawable[i];</span></span><br><span class="line"><span class="string">                    mChildren[i] = new ChildDrawable(or, owner, res);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                mHaveOpacity = orig.mHaveOpacity;</span></span><br><span class="line"><span class="string">                mOpacity = orig.mOpacity;</span></span><br><span class="line"><span class="string">                mHaveIsStateful = orig.mHaveIsStateful;</span></span><br><span class="line"><span class="string">                mIsStateful = orig.mIsStateful;</span></span><br><span class="line"><span class="string">                mAutoMirrored = orig.mAutoMirrored;</span></span><br><span class="line"><span class="string">                mPaddingMode = orig.mPaddingMode;</span></span><br><span class="line"><span class="string">                mThemeAttrs = orig.mThemeAttrs;</span></span><br><span class="line"><span class="string">                mPaddingTop = orig.mPaddingTop;</span></span><br><span class="line"><span class="string">                mPaddingBottom = orig.mPaddingBottom;</span></span><br><span class="line"><span class="string">                mPaddingLeft = orig.mPaddingLeft;</span></span><br><span class="line"><span class="string">                mPaddingRight = orig.mPaddingRight;</span></span><br><span class="line"><span class="string">                mPaddingStart = orig.mPaddingStart;</span></span><br><span class="line"><span class="string">                mPaddingEnd = orig.mPaddingEnd;</span></span><br><span class="line"><span class="string">                mOpacityOverride = orig.mOpacityOverride;</span></span><br><span class="line"><span class="string">            &#125; else &#123;</span></span><br><span class="line"><span class="string">                mNum = 0;</span></span><br><span class="line"><span class="string">                mChildren = null;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">           '</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="VertorDrawable"><a href="#VertorDrawable" class="headerlink" title="VertorDrawable"></a>VertorDrawable</h4><h5 id="如何建立矢量树"><a href="#如何建立矢量树" class="headerlink" title="如何建立矢量树"></a>如何建立矢量树</h5><h6 id="相关类"><a href="#相关类" class="headerlink" title="相关类"></a>相关类</h6><p><img src="/images/Drawable_Struct.png" alt="Drawable_Struct"></p><h6 id="建树"><a href="#建树" class="headerlink" title="建树"></a>建树</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">eg：</span><br><span class="line"> * &lt;vector xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line"> *     android:height=<span class="string">"64dp"</span></span><br><span class="line"> *     android:width=<span class="string">"64dp"</span></span><br><span class="line"> *     android:viewportHeight=<span class="string">"600"</span></span><br><span class="line"> *     android:viewportWidth=<span class="string">"600"</span> &gt;</span><br><span class="line"> *     &lt;group</span><br><span class="line"> *         android:name=<span class="string">"rotationGroup"</span></span><br><span class="line"> *         android:pivotX=<span class="string">"300.0"</span></span><br><span class="line"> *         android:pivotY=<span class="string">"300.0"</span></span><br><span class="line"> *         android:rotation=<span class="string">"45.0"</span> &gt;</span><br><span class="line"> *         &lt;path</span><br><span class="line"> *             android:name=<span class="string">"v"</span></span><br><span class="line"> *             android:fillColor=<span class="string">"#000000"</span></span><br><span class="line"> *             android:pathData=<span class="string">"M300,70 l 0,-70 70,70 0,0 -70,70z"</span> /&gt;</span><br><span class="line"> *     &lt;/group&gt;</span><br><span class="line"> * &lt;/vector&gt;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inflateInternal</span><span class="params">(Resources res, XmlPullParser parser, AttributeSet attrs,</span></span></span><br><span class="line"><span class="function"><span class="params">            Theme theme)</span> <span class="keyword">throws</span> XmlPullParserException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> VectorDrawableState state = mVectorState;</span><br><span class="line">        <span class="keyword">final</span> VPathRenderer pathRenderer = state.mVPathRenderer;</span><br><span class="line">        <span class="keyword">boolean</span> noPathTag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// important Use a stack to help to build the group tree.</span></span><br><span class="line">        <span class="comment">// The top of the stack is always the current group.</span></span><br><span class="line">        <span class="keyword">final</span> Stack&lt;VGroup&gt; groupStack = <span class="keyword">new</span> Stack&lt;VGroup&gt;();</span><br><span class="line">      <span class="comment">//use mRootGroup to store the sequense of shi children and grandchild</span></span><br><span class="line">        groupStack.push(pathRenderer.mRootGroup);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> eventType = parser.getEventType();</span><br><span class="line">        <span class="keyword">while</span> (eventType != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line">            <span class="keyword">if</span> (eventType == XmlPullParser.START_TAG) &#123;</span><br><span class="line">                <span class="keyword">final</span> String tagName = parser.getName();</span><br><span class="line">              <span class="comment">//get nearest parent</span></span><br><span class="line">                <span class="keyword">final</span> VGroup currentGroup = groupStack.peek();</span><br><span class="line">                <span class="comment">//"path"</span></span><br><span class="line">                <span class="keyword">if</span> (SHAPE_PATH.equals(tagName)) &#123;</span><br><span class="line">                    <span class="keyword">final</span> VFullPath path = <span class="keyword">new</span> VFullPath();</span><br><span class="line">                    path.inflate(res, attrs, theme);</span><br><span class="line">                    currentGroup.mChildren.add(path);</span><br><span class="line">                    <span class="keyword">if</span> (path.getPathName() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                      <span class="comment">// store the detail infomation of path data for via inflate</span></span><br><span class="line">                        pathRenderer.mVGTargetsMap.put(path.getPathName(), path);</span><br><span class="line">                    &#125;</span><br><span class="line">                    noPathTag = <span class="keyword">false</span>;</span><br><span class="line">                    state.mChangingConfigurations |= path.mChangingConfigurations;</span><br><span class="line">                &#125; </span><br><span class="line">              <span class="comment">//"clip-path"</span></span><br><span class="line">              <span class="keyword">else</span> <span class="keyword">if</span> (SHAPE_CLIP_PATH.equals(tagName)) &#123;</span><br><span class="line">                    <span class="keyword">final</span> VClipPath path = <span class="keyword">new</span> VClipPath();</span><br><span class="line">                    path.inflate(res, attrs, theme);</span><br><span class="line">                    currentGroup.mChildren.add(path);</span><br><span class="line">                    <span class="keyword">if</span> (path.getPathName() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        pathRenderer.mVGTargetsMap.put(path.getPathName(), path);</span><br><span class="line">                    &#125;</span><br><span class="line">                    state.mChangingConfigurations |= path.mChangingConfigurations;</span><br><span class="line">                &#125;</span><br><span class="line">              <span class="comment">//"group"</span></span><br><span class="line">              <span class="keyword">else</span> <span class="keyword">if</span> (SHAPE_GROUP.equals(tagName)) &#123;</span><br><span class="line">                    VGroup newChildGroup = <span class="keyword">new</span> VGroup();</span><br><span class="line">                    newChildGroup.inflate(res, attrs, theme);</span><br><span class="line">                    currentGroup.mChildren.add(newChildGroup);</span><br><span class="line">                 <span class="comment">//update nearest tree parent</span></span><br><span class="line">                    groupStack.push(newChildGroup);</span><br><span class="line">                    <span class="keyword">if</span> (newChildGroup.getGroupName() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        pathRenderer.mVGTargetsMap.put(newChildGroup.getGroupName(),</span><br><span class="line">                                newChildGroup);</span><br><span class="line">                    &#125;</span><br><span class="line">                    state.mChangingConfigurations |= newChildGroup.mChangingConfigurations;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (eventType == XmlPullParser.END_TAG) &#123;</span><br><span class="line">                <span class="keyword">final</span> String tagName = parser.getName();</span><br><span class="line">                <span class="keyword">if</span> (SHAPE_GROUP.equals(tagName)) &#123;</span><br><span class="line">                  <span class="comment">// tree parent added all its children and remove from the stack </span></span><br><span class="line">                    groupStack.pop();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            eventType = parser.next();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print the tree out for debug.</span></span><br><span class="line">        <span class="keyword">if</span> (DBG_VECTOR_DRAWABLE) &#123;</span><br><span class="line">            printGroupTree(pathRenderer.mRootGroup, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (noPathTag) &#123;</span><br><span class="line">            <span class="keyword">final</span> StringBuffer tag = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (tag.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                tag.append(<span class="string">" or "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            tag.append(SHAPE_PATH);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> XmlPullParserException(<span class="string">"no "</span> + tag + <span class="string">" defined"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="如何画"><a href="#如何画" class="headerlink" title="如何画"></a>如何画</h5><p>VectorDrawable:draw(Canvas ) -&gt;VectorDrawable:updateCachedBitmap(int width, int height)</p><p>-&gt;VPathRenderer:draw(Canvas canvas, int w, int h, ColorFilter filter)</p><p>-&gt;VPathRenderer:drawGroupTree(VGroup , Matrix,  Canvas, int w, int h, ColorFilter)</p><p>-&gt;VPathRenderer:drawPath(VGroup, VPath, Canvas, int w, int h,  ColorFilter)</p><h6 id="step-1-确定canvas-的宽高"><a href="#step-1-确定canvas-的宽高" class="headerlink" title="step 1: 确定canvas 的宽高"></a>step 1: 确定canvas 的宽高</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// We will offset the bounds for drawBitmap, so copyBounds() here instead</span></span><br><span class="line">     <span class="comment">// of getBounds().</span></span><br><span class="line">     copyBounds(mTmpBounds);</span><br><span class="line">     <span class="keyword">if</span> (mTmpBounds.width() &lt;= <span class="number">0</span> || mTmpBounds.height() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">         <span class="comment">// Nothing to draw</span></span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Color filters always override tint filters.</span></span><br><span class="line">     <span class="keyword">final</span> ColorFilter colorFilter = (mColorFilter == <span class="keyword">null</span> ? mTintFilter : mColorFilter);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// The imageView can scale the canvas in different ways, in order to</span></span><br><span class="line">     <span class="comment">// avoid blurry scaling, we have to draw into a bitmap with exact pixel</span></span><br><span class="line">     <span class="comment">// size first. This bitmap size is determined by the bounds and the</span></span><br><span class="line">     <span class="comment">// canvas scale. </span></span><br><span class="line">    <span class="comment">//特殊处理imageview的显示情况</span></span><br><span class="line">     canvas.getMatrix(mTmpMatrix);</span><br><span class="line">     mTmpMatrix.getValues(mTmpFloats);</span><br><span class="line">     <span class="keyword">float</span> canvasScaleX = Math.abs(mTmpFloats[Matrix.MSCALE_X]);</span><br><span class="line">     <span class="keyword">float</span> canvasScaleY = Math.abs(mTmpFloats[Matrix.MSCALE_Y]);</span><br><span class="line">     <span class="keyword">int</span> scaledWidth = (<span class="keyword">int</span>) (mTmpBounds.width() * canvasScaleX);</span><br><span class="line">     <span class="keyword">int</span> scaledHeight = (<span class="keyword">int</span>) (mTmpBounds.height() * canvasScaleY);</span><br><span class="line">     scaledWidth = Math.min(MAX_CACHED_BITMAP_SIZE, scaledWidth);</span><br><span class="line">     scaledHeight = Math.min(MAX_CACHED_BITMAP_SIZE, scaledHeight);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (scaledWidth &lt;= <span class="number">0</span> || scaledHeight &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> saveCount = canvas.save();</span><br><span class="line">     canvas.translate(mTmpBounds.left, mTmpBounds.top);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Handle RTL mirroring.</span></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> needMirroring = needMirroring();</span><br><span class="line">     <span class="keyword">if</span> (needMirroring) &#123;</span><br><span class="line">         canvas.translate(mTmpBounds.width(), <span class="number">0</span>);</span><br><span class="line">         canvas.scale(-<span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// At this point, canvas has been translated to the right position.</span></span><br><span class="line">     <span class="comment">// And we use this bound for the destination rect for the drawBitmap, so</span></span><br><span class="line">     <span class="comment">// we offset to (0, 0);</span></span><br><span class="line">     mTmpBounds.offsetTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">     <span class="comment">//计算获得显示的scaleWidth和scaleHeight</span></span><br><span class="line">     mVectorState.createCachedBitmapIfNeeded(scaledWidth, scaledHeight);</span><br><span class="line">     <span class="keyword">if</span> (!mAllowCaching) &#123;</span><br><span class="line">         mVectorState.updateCachedBitmap(scaledWidth, scaledHeight);</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">if</span> (!mVectorState.canReuseCache()) &#123;</span><br><span class="line">             mVectorState.updateCachedBitmap(scaledWidth, scaledHeight);</span><br><span class="line">             mVectorState.updateCacheStates();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     mVectorState.drawCachedBitmapWithRootAlpha(canvas, colorFilter, mTmpBounds);</span><br><span class="line">     canvas.restoreToCount(saveCount);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h6 id="step-2-调用PathRenderer"><a href="#step-2-调用PathRenderer" class="headerlink" title="step 2:调用PathRenderer"></a>step 2:调用PathRenderer</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateCachedBitmap</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">          mCachedBitmap.eraseColor(Color.TRANSPARENT);</span><br><span class="line">          <span class="comment">//其他的canvas是哪里来的?</span></span><br><span class="line">          Canvas tmpCanvas = <span class="keyword">new</span> Canvas(mCachedBitmap);</span><br><span class="line">          <span class="comment">//画出drawable</span></span><br><span class="line">          mVPathRenderer.draw(tmpCanvas, width, height, <span class="keyword">null</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h6 id="step-3-递归画路径"><a href="#step-3-递归画路径" class="headerlink" title="step 3:递归画路径"></a>step 3:递归画路径</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas canvas, <span class="keyword">int</span> w, <span class="keyword">int</span> h, ColorFilter filter)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Travese the tree in pre-order to draw.</span></span><br><span class="line">            drawGroupTree(mRootGroup, Matrix.IDENTITY_MATRIX, canvas, w, h, filter);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawGroupTree</span><span class="params">(VGroup currentGroup, Matrix currentMatrix,</span></span></span><br><span class="line"><span class="function"><span class="params">                Canvas canvas, <span class="keyword">int</span> w, <span class="keyword">int</span> h, ColorFilter filter)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Calculate current group's matrix by preConcat the parent's and</span></span><br><span class="line">            <span class="comment">// and the current one on the top of the stack.</span></span><br><span class="line">            <span class="comment">// Basically the Mfinal = Mviewport * M0 * M1 * M2;</span></span><br><span class="line">            <span class="comment">// Mi the local matrix at level i of the group tree.</span></span><br><span class="line">            currentGroup.mStackedMatrix.set(currentMatrix);</span><br><span class="line">            currentGroup.mStackedMatrix.preConcat(currentGroup.mLocalMatrix);</span><br><span class="line">           <span class="comment">//mStackedMatrix本身pre，mLocaMatrix即group的配置转换成matrix</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Save the current clip information, which is local to this group.</span></span><br><span class="line">            canvas.save();</span><br><span class="line">            <span class="comment">// Draw the group tree in the same order as the XML file.</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; currentGroup.mChildren.size(); i++) &#123;</span><br><span class="line">                Object child = currentGroup.mChildren.get(i);</span><br><span class="line">                <span class="keyword">if</span> (child <span class="keyword">instanceof</span> VGroup) &#123;</span><br><span class="line">                    VGroup childGroup = (VGroup) child;</span><br><span class="line">                    drawGroupTree(childGroup, currentGroup.mStackedMatrix,</span><br><span class="line">                            canvas, w, h, filter);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (child <span class="keyword">instanceof</span> VPath) &#123;</span><br><span class="line">                    VPath childPath = (VPath) child;</span><br><span class="line">                    drawPath(currentGroup, childPath, canvas, w, h, filter);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            canvas.restore();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawPath</span><span class="params">(VGroup vGroup, VPath vPath, Canvas canvas, <span class="keyword">int</span> w, <span class="keyword">int</span> h,</span></span></span><br><span class="line"><span class="function"><span class="params">                ColorFilter filter)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> scaleX = w / mViewportWidth;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> scaleY = h / mViewportHeight;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> minScale = Math.min(scaleX, scaleY);</span><br><span class="line">            <span class="keyword">final</span> Matrix groupStackedMatrix = vGroup.mStackedMatrix;</span><br><span class="line"></span><br><span class="line">            mFinalPathMatrix.set(groupStackedMatrix);</span><br><span class="line">            mFinalPathMatrix.postScale(scaleX, scaleY);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> matrixScale = getMatrixScale(groupStackedMatrix);</span><br><span class="line">            <span class="keyword">if</span> (matrixScale == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// When either x or y is scaled to 0, we don't need to draw anything.</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//important: pathdata 转 path ,use PathParser to transform the node data to path</span></span><br><span class="line">            vPath.toPath(mPath);</span><br><span class="line">            <span class="keyword">final</span> Path path = mPath;</span><br><span class="line"></span><br><span class="line">            mRenderPath.reset();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (vPath.isClipPath()) &#123;</span><br><span class="line">                mRenderPath.addPath(path, mFinalPathMatrix);</span><br><span class="line">                canvas.clipPath(mRenderPath);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                VFullPath fullPath = (VFullPath) vPath;</span><br><span class="line">                <span class="keyword">if</span> (fullPath.mTrimPathStart != <span class="number">0.0f</span> || fullPath.mTrimPathEnd != <span class="number">1.0f</span>) &#123;</span><br><span class="line">                    <span class="keyword">float</span> start = (fullPath.mTrimPathStart + fullPath.mTrimPathOffset) % <span class="number">1.0f</span>;</span><br><span class="line">                    <span class="keyword">float</span> end = (fullPath.mTrimPathEnd + fullPath.mTrimPathOffset) % <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (mPathMeasure == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mPathMeasure = <span class="keyword">new</span> PathMeasure();</span><br><span class="line">                    &#125;</span><br><span class="line">                    mPathMeasure.setPath(mPath, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">float</span> len = mPathMeasure.getLength();</span><br><span class="line">                    start = start * len;</span><br><span class="line">                    end = end * len;</span><br><span class="line">                    path.reset();</span><br><span class="line">                    <span class="keyword">if</span> (start &gt; end) &#123;</span><br><span class="line">                        mPathMeasure.getSegment(start, len, path, <span class="keyword">true</span>);</span><br><span class="line">                      <span class="comment">//用pathMeasure截取path中的一段进行展示,moveto Start position</span></span><br><span class="line">                        mPathMeasure.getSegment(<span class="number">0f</span>, end, path, <span class="keyword">true</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        mPathMeasure.getSegment(start, end, path, <span class="keyword">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    path.rLineTo(<span class="number">0</span>, <span class="number">0</span>); <span class="comment">// fix bug in measure</span></span><br><span class="line">                &#125;</span><br><span class="line">                mRenderPath.addPath(path, mFinalPathMatrix);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (fullPath.mFillColor != Color.TRANSPARENT) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (mFillPaint == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mFillPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">                        mFillPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">                        mFillPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">final</span> Paint fillPaint = mFillPaint;</span><br><span class="line">                    fillPaint.setColor(applyAlpha(fullPath.mFillColor, fullPath.mFillAlpha));</span><br><span class="line">                    fillPaint.setColorFilter(filter);</span><br><span class="line">                    canvas.drawPath(mRenderPath, fillPaint);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (fullPath.mStrokeColor != Color.TRANSPARENT) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (mStrokePaint == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mStrokePaint = <span class="keyword">new</span> Paint();</span><br><span class="line">                        mStrokePaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">                        mStrokePaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">final</span> Paint strokePaint = mStrokePaint;</span><br><span class="line">                    <span class="keyword">if</span> (fullPath.mStrokeLineJoin != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        strokePaint.setStrokeJoin(fullPath.mStrokeLineJoin);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (fullPath.mStrokeLineCap != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        strokePaint.setStrokeCap(fullPath.mStrokeLineCap);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    strokePaint.setStrokeMiter(fullPath.mStrokeMiterlimit);</span><br><span class="line">                    strokePaint.setColor(applyAlpha(fullPath.mStrokeColor, fullPath.mStrokeAlpha));</span><br><span class="line">                    strokePaint.setColorFilter(filter);</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">float</span> finalStrokeScale = minScale * matrixScale;</span><br><span class="line">                    strokePaint.setStrokeWidth(fullPath.mStrokeWidth * finalStrokeScale);</span><br><span class="line">                    canvas.drawPath(mRenderPath, strokePaint);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="GradientDrawable"><a href="#GradientDrawable" class="headerlink" title="GradientDrawable"></a>GradientDrawable</h4><h5 id="Create"><a href="#Create" class="headerlink" title="Create"></a>Create</h5><ol><li><p><shape> create GradientDrawable</shape></p></li><li><p>children’s element</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (name.equals(<span class="string">"size"</span>)) &#123;</span><br><span class="line">               a = obtainAttributes(r, theme, attrs, R.styleable.GradientDrawableSize);</span><br><span class="line">               updateGradientDrawableSize(a);</span><br><span class="line">               a.recycle();</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"gradient"</span>)) &#123;</span><br><span class="line">               a = obtainAttributes(r, theme, attrs, R.styleable.GradientDrawableGradient);</span><br><span class="line">               updateGradientDrawableGradient(r, a);</span><br><span class="line">               a.recycle();</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"solid"</span>)) &#123;</span><br><span class="line">               a = obtainAttributes(r, theme, attrs, R.styleable.GradientDrawableSolid);</span><br><span class="line">               updateGradientDrawableSolid(a);</span><br><span class="line">               a.recycle();</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"stroke"</span>)) &#123;</span><br><span class="line">               a = obtainAttributes(r, theme, attrs, R.styleable.GradientDrawableStroke);</span><br><span class="line">               updateGradientDrawableStroke(a);</span><br><span class="line">               a.recycle();</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"corners"</span>)) &#123;</span><br><span class="line">               a = obtainAttributes(r, theme, attrs, R.styleable.DrawableCorners);</span><br><span class="line">               updateDrawableCorners(a);</span><br><span class="line">               a.recycle();</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"padding"</span>)) &#123;</span><br><span class="line">               a = obtainAttributes(r, theme, attrs, R.styleable.GradientDrawablePadding);</span><br><span class="line">               updateGradientDrawablePadding(a);</span><br><span class="line">               a.recycle();</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               Log.w(<span class="string">"drawable"</span>, <span class="string">"Bad element under &lt;shape&gt;: "</span> + name);</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Draw"><a href="#Draw" class="headerlink" title="Draw"></a>Draw</h5><p>各种Canvas的基本用法组合[*用以学习Canvas的使用场景]</p><h4 id="DrawableContainer"><a href="#DrawableContainer" class="headerlink" title="DrawableContainer"></a>DrawableContainer</h4><h5 id="三个方法四个参数"><a href="#三个方法四个参数" class="headerlink" title="三个方法四个参数"></a>三个方法四个参数</h5><h6 id="Method-1-selectDrawable"><a href="#Method-1-selectDrawable" class="headerlink" title="Method 1:selectDrawable"></a>Method 1:selectDrawable</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">selectDrawable</span><span class="params">(<span class="keyword">int</span> idx)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (idx == mCurIndex) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">long</span> now = SystemClock.uptimeMillis();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (DEBUG) android.util.Log.i(TAG, toString() + <span class="string">" from "</span> + mCurIndex + <span class="string">" to "</span> + idx</span><br><span class="line">               + <span class="string">": exit="</span> + mDrawableContainerState.mExitFadeDuration</span><br><span class="line">               + <span class="string">" enter="</span> + mDrawableContainerState.mEnterFadeDuration);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//mDrawableContainerState.mExitFadeDuration get by stateListDrawable enterFadeDuration</span></span><br><span class="line">       <span class="keyword">if</span> (mDrawableContainerState.mExitFadeDuration &gt; <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> (mLastDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">               mLastDrawable.setVisible(<span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (mCurrDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="comment">// swtich drawable and calculate last exit end time</span></span><br><span class="line">               mLastDrawable = mCurrDrawable;</span><br><span class="line">               mLastIndex = mCurIndex;</span><br><span class="line">               mExitAnimationEnd = now + mDrawableContainerState.mExitFadeDuration;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               mLastDrawable = <span class="keyword">null</span>;</span><br><span class="line">               mLastIndex = -<span class="number">1</span>;</span><br><span class="line">               mExitAnimationEnd = <span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mCurrDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">           mCurrDrawable.setVisible(<span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (idx &gt;= <span class="number">0</span> &amp;&amp; idx &lt; mDrawableContainerState.mNumChildren) &#123;</span><br><span class="line">           <span class="keyword">final</span> Drawable d = mDrawableContainerState.getChild(idx);</span><br><span class="line">           <span class="comment">//new current state and calculate last enter time</span></span><br><span class="line">           mCurrDrawable = d;</span><br><span class="line">           mCurIndex = idx;</span><br><span class="line">           <span class="keyword">if</span> (d != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">if</span> (mDrawableContainerState.mEnterFadeDuration &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                   mEnterAnimationEnd = now + mDrawableContainerState.mEnterFadeDuration;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">//Initializes a drawable for display in this container</span></span><br><span class="line">               initializeDrawableForDisplay(d);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           mCurrDrawable = <span class="keyword">null</span>;</span><br><span class="line">           mCurIndex = -<span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (mEnterAnimationEnd != <span class="number">0</span> || mExitAnimationEnd != <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> (mAnimationRunnable == <span class="keyword">null</span>) &#123;</span><br><span class="line">               mAnimationRunnable = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                   <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                       <span class="comment">//do animating</span></span><br><span class="line">                       animate(<span class="keyword">true</span>);</span><br><span class="line">                       invalidateSelf();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               unscheduleSelf(mAnimationRunnable);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">// Compute first frame and schedule next animation.</span></span><br><span class="line">           animate(<span class="keyword">true</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       invalidateSelf();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h6 id="Method-2-animate"><a href="#Method-2-animate" class="headerlink" title="Method 2 animate:"></a>Method 2 animate:</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">animate</span><span class="params">(<span class="keyword">boolean</span> schedule)</span> </span>&#123;</span><br><span class="line">    mHasAlpha = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> now = SystemClock.uptimeMillis();</span><br><span class="line">    <span class="keyword">boolean</span> animating = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (mCurrDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mEnterAnimationEnd != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mEnterAnimationEnd &lt;= now) &#123;</span><br><span class="line">                mCurrDrawable.mutate().setAlpha(mAlpha);</span><br><span class="line">                mEnterAnimationEnd = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> animAlpha = (<span class="keyword">int</span>)((mEnterAnimationEnd-now)*<span class="number">255</span>)</span><br><span class="line">                        / mDrawableContainerState.mEnterFadeDuration;</span><br><span class="line">                <span class="keyword">if</span> (DEBUG) android.util.Log.i(TAG, toString() + <span class="string">" cur alpha "</span> + animAlpha);</span><br><span class="line">                <span class="comment">// be clearer with percent enter</span></span><br><span class="line">                mCurrDrawable.mutate().setAlpha(((<span class="number">255</span>-animAlpha)*mAlpha)/<span class="number">255</span>);</span><br><span class="line">                animating = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mEnterAnimationEnd = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mLastDrawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mExitAnimationEnd != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mExitAnimationEnd &lt;= now) &#123;</span><br><span class="line">                mLastDrawable.setVisible(<span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line">                mLastDrawable = <span class="keyword">null</span>;</span><br><span class="line">                mLastIndex = -<span class="number">1</span>;</span><br><span class="line">                mExitAnimationEnd = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> animAlpha = (<span class="keyword">int</span>)((mExitAnimationEnd-now)*<span class="number">255</span>)</span><br><span class="line">                        / mDrawableContainerState.mExitFadeDuration;</span><br><span class="line">                <span class="keyword">if</span> (DEBUG) android.util.Log.i(TAG, toString() + <span class="string">" last alpha "</span> + animAlpha);</span><br><span class="line">                <span class="comment">// be more  transparent with percent exit</span></span><br><span class="line">                mLastDrawable.mutate().setAlpha((animAlpha*mAlpha)/<span class="number">255</span>);</span><br><span class="line">                animating = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mExitAnimationEnd = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (schedule &amp;&amp; animating) &#123;</span><br><span class="line">        scheduleSelf(mAnimationRunnable, now + <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="Method-3-initializeDrawableForDisplay"><a href="#Method-3-initializeDrawableForDisplay" class="headerlink" title="Method 3  initializeDrawableForDisplay:"></a>Method 3  initializeDrawableForDisplay:</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Initializes a drawable for display in this container.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> d The drawable to initialize.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initializeDrawableForDisplay</span><span class="params">(Drawable d)</span> </span>&#123;</span><br><span class="line">       d.mutate();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (mDrawableContainerState.mEnterFadeDuration &lt;= <span class="number">0</span> &amp;&amp; mHasAlpha) &#123;</span><br><span class="line">           d.setAlpha(mAlpha);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (mDrawableContainerState.mHasColorFilter) &#123;</span><br><span class="line">           <span class="comment">// Color filter always overrides tint.</span></span><br><span class="line">           d.setColorFilter(mDrawableContainerState.mColorFilter);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> (mDrawableContainerState.mHasTintList) &#123;</span><br><span class="line">               d.setTintList(mDrawableContainerState.mTintList);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (mDrawableContainerState.mHasTintMode) &#123;</span><br><span class="line">               d.setTintMode(mDrawableContainerState.mTintMode);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       d.setVisible(isVisible(), <span class="keyword">true</span>);</span><br><span class="line">       d.setDither(mDrawableContainerState.mDither);</span><br><span class="line">       d.setState(getState());</span><br><span class="line">       d.setLevel(getLevel());</span><br><span class="line">       d.setBounds(getBounds());</span><br><span class="line">       d.setLayoutDirection(getLayoutDirection());</span><br><span class="line">       d.setAutoMirrored(mDrawableContainerState.mAutoMirrored);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">final</span> Rect hotspotBounds = mHotspotBounds;</span><br><span class="line">       <span class="keyword">if</span> (hotspotBounds != <span class="keyword">null</span>) &#123;</span><br><span class="line">           d.setHotspotBounds(hotspotBounds.left, hotspotBounds.top,</span><br><span class="line">                   hotspotBounds.right, hotspotBounds.bottom);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h6 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters:"></a>Parameters:</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Drawable mCurrDrawable;<span class="comment">//管理前后状态</span></span><br><span class="line"><span class="keyword">private</span> Drawable mLastDrawable;<span class="comment">//管理前后状态</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> mCurIndex = -<span class="number">1</span>;<span class="comment">//管理前后状态</span></span><br><span class="line">Drawable[] mDrawables;<span class="comment">//所有的drawable数组</span></span><br></pre></td></tr></table></figure><h5 id="子类们"><a href="#子类们" class="headerlink" title="子类们"></a>子类们</h5><h6 id="AnimatableDrawable"><a href="#AnimatableDrawable" class="headerlink" title="AnimatableDrawable"></a>AnimatableDrawable</h6><ol><li><p>xmlTag</p><p>Drawable:createFromXmlInner(Resources , XmlPullParser, AttributeSet, Theme)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* &lt;pre&gt;</span><br><span class="line"> * &lt;!-- Animation frames are wheel0.png through wheel5.png</span><br><span class="line"> *     files inside the res/drawable/ folder --&gt;</span><br><span class="line"> * &lt;animation-list android:id=<span class="string">"@+id/selected"</span> android:oneshot=<span class="string">"false"</span>&gt;</span><br><span class="line"> *    &lt;item android:drawable=<span class="string">"@drawable/wheel0"</span> android:duration=<span class="string">"50"</span> /&gt;</span><br><span class="line"> *    &lt;item android:drawable=<span class="string">"@drawable/wheel1"</span> android:duration=<span class="string">"50"</span> /&gt;</span><br><span class="line"> *    &lt;item android:drawable=<span class="string">"@drawable/wheel2"</span> android:duration=<span class="string">"50"</span> /&gt;</span><br><span class="line"> *    &lt;item android:drawable=<span class="string">"@drawable/wheel3"</span> android:duration=<span class="string">"50"</span> /&gt;</span><br><span class="line"> *    &lt;item android:drawable=<span class="string">"@drawable/wheel4"</span> android:duration=<span class="string">"50"</span> /&gt;</span><br><span class="line"> *    &lt;item android:drawable=<span class="string">"@drawable/wheel5"</span> android:duration=<span class="string">"50"</span> /&gt;</span><br><span class="line"> * &lt;/animation-list&gt;&lt;/pre&gt;</span><br><span class="line"> * &lt;p&gt;</span><br></pre></td></tr></table></figure></li><li><p>切换流程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start -&gt; run -&gt; nextFrame -&gt; setFrame -&gt; scheduleSelf(Runnable,when)</span><br></pre></td></tr></table></figure><h6 id="scheduleDrawable的实现"><a href="#scheduleDrawable的实现" class="headerlink" title="scheduleDrawable的实现"></a>scheduleDrawable的实现</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.通过 View:setBackgroudDrawable 中的  background.setCallback(this);</span></span><br><span class="line"><span class="comment">// 2.成功 回调View:scheduleDrawable</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Schedules an action on a drawable to occur at a specified time.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> who the recipient of the action</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> what the action to run on the drawable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> when the time at which the action must occur. Uses the</span></span><br><span class="line"><span class="comment">     *        &#123;<span class="doctag">@link</span> SystemClock#uptimeMillis&#125; timebase.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">scheduleDrawable</span><span class="params">(Drawable who, Runnable what, <span class="keyword">long</span> when)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (verifyDrawable(who) &amp;&amp; what != <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="comment">//updatimeMillis开机后的经过的时间，不包括深度睡眠的时间,delay 约为duration</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">long</span> delay = when - SystemClock.uptimeMillis();</span><br><span class="line">            <span class="keyword">if</span> (mAttachInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mAttachInfo.mViewRootImpl.mChoreographer.postCallbackDelayed(</span><br><span class="line">                        Choreographer.CALLBACK_ANIMATION, what, who,</span><br><span class="line">                        Choreographer.subtractFrameDelay(delay));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">//下一个frame，what = animationDrawable run nextFrame</span></span><br><span class="line">                ViewRootImpl.getRunQueue().postDelayed(what, delay);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>mRunnig vs Animating</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Whether the drawable has an animation callback posted. */</span><span class="comment">//是否有callback被posted</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> mRunning;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Whether the drawable should animate when visible. */</span><span class="comment">//可视状态是否需要继续执行动画</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> mAnimating;</span><br></pre></td></tr></table></figure><p>​</p></li></ol><h6 id="LevelListDrawable"><a href="#LevelListDrawable" class="headerlink" title="LevelListDrawable"></a>LevelListDrawable</h6><ol><li><p>xmlTag</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A resource that manages a number of alternate Drawables, each assigned a maximum numerical value.</span></span><br><span class="line"><span class="comment"> * Setting the level value of the object with &#123;<span class="doctag">@link</span> #setLevel(int)&#125; will load the image with the next</span></span><br><span class="line"><span class="comment"> * greater or equal value assigned to its max attribute.</span></span><br><span class="line"><span class="comment"> * A good example use of</span></span><br><span class="line"><span class="comment"> * a LevelListDrawable would be a battery level indicator icon, with different images to indicate the current</span></span><br><span class="line"><span class="comment"> * battery level.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * It can be defined in an XML file with the &lt;code&gt;&lt;level-list&gt;&lt;/code&gt; element.</span></span><br><span class="line"><span class="comment"> * Each Drawable level is defined in a nested &lt;code&gt;&lt;item&gt;&lt;/code&gt;. For example:</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> * &lt;level-list xmlns:android="http://schemas.android.com/apk/res/android"&gt;</span></span><br><span class="line"><span class="comment"> *  &lt;item android:maxLevel="0" android:drawable="<span class="doctag">@drawable</span>/ic_wifi_signal_1" /&gt;</span></span><br><span class="line"><span class="comment"> *  &lt;item android:maxLevel="1" android:drawable="<span class="doctag">@drawable</span>/ic_wifi_signal_2" /&gt;</span></span><br><span class="line"><span class="comment"> *  &lt;item android:maxLevel="2" android:drawable="<span class="doctag">@drawable</span>/ic_wifi_signal_3" /&gt;</span></span><br><span class="line"><span class="comment"> *  &lt;item android:maxLevel="3" android:drawable="<span class="doctag">@drawable</span>/ic_wifi_signal_4" /&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/level-list&gt;</span></span><br><span class="line"><span class="comment"> *&lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;With this XML saved into the res/drawable/ folder of the project, it can be referenced as</span></span><br><span class="line"><span class="comment"> * the drawable for an &#123;<span class="doctag">@link</span> android.widget.ImageView&#125;. The default image is the first in the list.</span></span><br><span class="line"><span class="comment"> * It can then be changed to one of the other levels with</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> android.widget.ImageView#setImageLevel(int)&#125;. For more</span></span><br><span class="line"><span class="comment"> * information, see the guide to &lt;a</span></span><br><span class="line"><span class="comment"> * href="&#123;<span class="doctag">@docRoot</span>&#125;guide/topics/resources/drawable-resource.html"&gt;Drawable Resources&lt;/a&gt;.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#LevelListDrawableItem_minLevel</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#LevelListDrawableItem_maxLevel</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#LevelListDrawableItem_drawable</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li><li><p>onLevelChange</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//private int[] mLows;  //use to stroe drawable level zone by pos</span></span><br><span class="line"><span class="comment">//private int[] mHighs;  //use to store drawable level zone by pos</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/** </span></span><br><span class="line"><span class="comment"> invoke by setLevel on any other method and then find the most match child to display</span></span><br><span class="line"><span class="comment"> by the mLows and mHighs </span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onLevelChange</span><span class="params">(<span class="keyword">int</span> level)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> idx = mLevelListState.indexOfLevel(level);</span><br><span class="line">      <span class="keyword">if</span> (selectDrawable(idx)) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">super</span>.onLevelChange(level);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ol><h6 id="StateListDrawable"><a href="#StateListDrawable" class="headerlink" title="StateListDrawable"></a>StateListDrawable</h6><ol><li><p>how to inflater</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Lets you assign a number of graphic images to a single Drawable and swap out the visible item by a string</span></span><br><span class="line"><span class="comment"> * ID value.</span></span><br><span class="line"><span class="comment"> * &lt;p/&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;It can be defined in an XML file with the &lt;code&gt;&lt;selector&gt;&lt;/code&gt; element.</span></span><br><span class="line"><span class="comment"> * Each state Drawable is defined in a nested &lt;code&gt;&lt;item&gt;&lt;/code&gt; element. For more</span></span><br><span class="line"><span class="comment"> * information, see the guide to &lt;a</span></span><br><span class="line"><span class="comment"> * href="&#123;<span class="doctag">@docRoot</span>&#125;guide/topics/resources/drawable-resource.html"&gt;Drawable Resources&lt;/a&gt;.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#StateListDrawable_visible</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#StateListDrawable_variablePadding</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#StateListDrawable_constantSize</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_focused</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_window_focused</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_enabled</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_checkable</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_checked</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_selected</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_activated</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_active</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_single</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_first</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_middle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_last</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@attr</span> ref android.R.styleable#DrawableStates_state_pressed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// use StateSet to initial state array</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">// store in  int[][] mStateSets;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Extracts state_ attributes from an attribute set.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> attrs The attribute set.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> An array of state_ attributes.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span>[] extractStateSet(AttributeSet attrs) &#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> numAttrs = attrs.getAttributeCount();</span><br><span class="line">        <span class="keyword">int</span>[] states = <span class="keyword">new</span> <span class="keyword">int</span>[numAttrs];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numAttrs; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> stateResId = attrs.getAttributeNameResource(i);</span><br><span class="line">            <span class="keyword">switch</span> (stateResId) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.attr.drawable:</span><br><span class="line">                <span class="keyword">case</span> R.attr.id:</span><br><span class="line">                    <span class="comment">// Ignore attributes from StateListDrawableItem and</span></span><br><span class="line">                    <span class="comment">// AnimatedStateListDrawableItem.</span></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    states[j++] = attrs.getAttributeBooleanValue(i, <span class="keyword">false</span>)</span><br><span class="line">                            ? stateResId : -stateResId;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        states = StateSet.trimStateSet(states, j);</span><br><span class="line">        <span class="keyword">return</span> states;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">​    </span><br><span class="line"></span><br><span class="line">2. onStateChange</span><br><span class="line"></span><br><span class="line">   ```java</span><br><span class="line">   View:onTouchEvent()-&gt;setPressed()-&gt;refreshDrawableState()-&gt;drawableStateChange()-&gt;setState()</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//View</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">drawableStateChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//here to generate the current Drawable State</span></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span>[] state = getDrawableState();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> Drawable bg = mBackground;</span><br><span class="line">      <span class="keyword">if</span> (bg != <span class="keyword">null</span> &amp;&amp; bg.isStateful()) &#123;</span><br><span class="line">          bg.setState(state);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> Drawable fg = mForegroundInfo != <span class="keyword">null</span> ? mForegroundInfo.mDrawable : <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (fg != <span class="keyword">null</span> &amp;&amp; fg.isStateful()) &#123;</span><br><span class="line">          fg.setState(state);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mScrollCache != <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="keyword">final</span> Drawable scrollBar = mScrollCache.scrollBar;</span><br><span class="line">          <span class="keyword">if</span> (scrollBar != <span class="keyword">null</span> &amp;&amp; scrollBar.isStateful()) &#123;</span><br><span class="line">              scrollBar.setState(state);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mStateListAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">          mStateListAnimator.setState(state);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Return an array of resource IDs of the drawable states representing the</span></span><br><span class="line"><span class="comment">   * current state of the view.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> The current drawable state</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> Drawable#setState(int[])</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #drawableStateChanged()</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #onCreateDrawableState(int)</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span>[] getDrawableState() &#123;</span><br><span class="line">      <span class="keyword">if</span> ((mDrawableState != <span class="keyword">null</span>) &amp;&amp; ((mPrivateFlags &amp; PFLAG_DRAWABLE_STATE_DIRTY) == <span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="comment">//no change</span></span><br><span class="line">          <span class="keyword">return</span> mDrawableState;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// genearate new current Drawablestate</span></span><br><span class="line">          mDrawableState = onCreateDrawableState(<span class="number">0</span>);</span><br><span class="line">          mPrivateFlags &amp;= ~PFLAG_DRAWABLE_STATE_DIRTY;</span><br><span class="line">          <span class="keyword">return</span> mDrawableState;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Generate the new &#123;<span class="doctag">@link</span> android.graphics.drawable.Drawable&#125; state for</span></span><br><span class="line"><span class="comment">   * this view. This is called by the view</span></span><br><span class="line"><span class="comment">   * system when the cached Drawable state is determined to be invalid.  To</span></span><br><span class="line"><span class="comment">   * retrieve the current state, you should use &#123;<span class="doctag">@link</span> #getDrawableState&#125;.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> extraSpace if non-zero, this is the number of extra entries you</span></span><br><span class="line"><span class="comment">   * would like in the returned array in which you can place your own</span></span><br><span class="line"><span class="comment">   * states.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> Returns an array holding the current &#123;<span class="doctag">@link</span> Drawable&#125; state of</span></span><br><span class="line"><span class="comment">   * the view.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #mergeDrawableStates(int[], int[])</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">int</span>[] onCreateDrawableState(<span class="keyword">int</span> extraSpace) &#123;</span><br><span class="line">      <span class="keyword">if</span> ((mViewFlags &amp; DUPLICATE_PARENT_STATE) == DUPLICATE_PARENT_STATE &amp;&amp;</span><br><span class="line">              mParent <span class="keyword">instanceof</span> View) &#123;</span><br><span class="line">          <span class="keyword">return</span> ((View) mParent).onCreateDrawableState(extraSpace);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span>[] drawableState;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> privateFlags = mPrivateFlags;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> viewStateIndex = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span> ((privateFlags &amp; PFLAG_PRESSED) != <span class="number">0</span>) viewStateIndex |= StateSet.VIEW_STATE_PRESSED;</span><br><span class="line">      <span class="keyword">if</span> ((mViewFlags &amp; ENABLED_MASK) == ENABLED) viewStateIndex |= StateSet.VIEW_STATE_ENABLED;</span><br><span class="line">      <span class="keyword">if</span> (isFocused()) viewStateIndex |= StateSet.VIEW_STATE_FOCUSED;</span><br><span class="line">      <span class="keyword">if</span> ((privateFlags &amp; PFLAG_SELECTED) != <span class="number">0</span>) viewStateIndex |= StateSet.VIEW_STATE_SELECTED;</span><br><span class="line">      <span class="keyword">if</span> (hasWindowFocus()) viewStateIndex |= StateSet.VIEW_STATE_WINDOW_FOCUSED;</span><br><span class="line">      <span class="keyword">if</span> ((privateFlags &amp; PFLAG_ACTIVATED) != <span class="number">0</span>) viewStateIndex |=             StateSet.VIEW_STATE_ACTIVATED;</span><br><span class="line">      <span class="keyword">if</span> (mAttachInfo != <span class="keyword">null</span> &amp;&amp; mAttachInfo.mHardwareAccelerationRequested &amp;&amp;</span><br><span class="line">              HardwareRenderer.isAvailable()) &#123;</span><br><span class="line">          <span class="comment">// This is set if HW acceleration is requested, even if the current</span></span><br><span class="line">          <span class="comment">// process doesn't allow it.  This is just to allow app preview</span></span><br><span class="line">          <span class="comment">// windows to better match their app.</span></span><br><span class="line">          viewStateIndex |= StateSet.VIEW_STATE_ACCELERATED;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((privateFlags &amp; PFLAG_HOVERED) != <span class="number">0</span>) viewStateIndex |= StateSet.VIEW_STATE_HOVERED;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> privateFlags2 = mPrivateFlags2;</span><br><span class="line">      <span class="keyword">if</span> ((privateFlags2 &amp; PFLAG2_DRAG_CAN_ACCEPT) != <span class="number">0</span>) &#123;</span><br><span class="line">          viewStateIndex |= StateSet.VIEW_STATE_DRAG_CAN_ACCEPT;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((privateFlags2 &amp; PFLAG2_DRAG_HOVERED) != <span class="number">0</span>) &#123;</span><br><span class="line">          viewStateIndex |= StateSet.VIEW_STATE_DRAG_HOVERED;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      drawableState = StateSet.get(viewStateIndex);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//noinspection ConstantIfStatement</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">false</span>) &#123;</span><br><span class="line">          Log.i(<span class="string">"View"</span>, <span class="string">"drawableStateIndex="</span> + viewStateIndex);</span><br><span class="line">          Log.i(<span class="string">"View"</span>, toString()</span><br><span class="line">                  + <span class="string">" pressed="</span> + ((privateFlags &amp; PFLAG_PRESSED) != <span class="number">0</span>)</span><br><span class="line">                  + <span class="string">" en="</span> + ((mViewFlags &amp; ENABLED_MASK) == ENABLED)</span><br><span class="line">                  + <span class="string">" fo="</span> + hasFocus()</span><br><span class="line">                  + <span class="string">" sl="</span> + ((privateFlags &amp; PFLAG_SELECTED) != <span class="number">0</span>)</span><br><span class="line">                  + <span class="string">" wf="</span> + hasWindowFocus()</span><br><span class="line">                  + <span class="string">": "</span> + Arrays.toString(drawableState));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (extraSpace == <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> drawableState;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span>[] fullState;</span><br><span class="line">      <span class="keyword">if</span> (drawableState != <span class="keyword">null</span>) &#123;</span><br><span class="line">          fullState = <span class="keyword">new</span> <span class="keyword">int</span>[drawableState.length + extraSpace];</span><br><span class="line">          System.arraycopy(drawableState, <span class="number">0</span>, fullState, <span class="number">0</span>, drawableState.length);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          fullState = <span class="keyword">new</span> <span class="keyword">int</span>[extraSpace];</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> fullState;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//invoke StateListDrawable:onStateChange at last</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onStateChange</span><span class="params">(<span class="keyword">int</span>[] stateSet)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> changed = <span class="keyword">super</span>.onStateChange(stateSet);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> idx = mStateListState.indexOfStateSet(stateSet);</span><br><span class="line">    <span class="keyword">if</span> (DEBUG) android.util.Log.i(TAG, <span class="string">"onStateChange "</span> + <span class="keyword">this</span> + <span class="string">" states "</span></span><br><span class="line">            + Arrays.toString(stateSet) + <span class="string">" found "</span> + idx);</span><br><span class="line">    <span class="keyword">if</span> (idx &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        idx = mStateListState.indexOfStateSet(StateSet.WILD_CARD);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> selectDrawable(idx) || changed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><h6 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h6><p>DrawableContainer 子类分2类:一类主动刷新的，如AnimationDrawable,通过scheduleDrawable的方式控制每个drawable的展示时间,由View的scheduleDrawable控制流程，由自身的nextFrame控制展示的内容；另一类是被动刷新的,如stateListDrawable,由View保存并控制状态变脸,由自身在onStateChange中找出之前inflater保存的 mStateSets[][]最匹配drawable</p><h6 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h6><ol><li>通过updateStateFromTypeArray获得外层属性</li><li>通过inflateChildrenElement填充Drawable数组</li><li>自身的state内部类保存选择drawable条件的相关数据,DrawableContainer的state保存所有drawable数组以及显示的bounds，level等参数</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Android里最常用的5大包名&lt;/p&gt;
&lt;p&gt;package:&lt;/p&gt;
&lt;p&gt;android.animation&lt;/p&gt;
&lt;p&gt;andro
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>ViewGroup源码解读</title>
    <link href="http://jinjian.info/2017/08/13/ViewGroup%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/08/13/ViewGroup源码解读/</id>
    <published>2017-08-12T16:00:00.000Z</published>
    <updated>2017-12-23T17:50:54.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="LinearLayout"><a href="#LinearLayout" class="headerlink" title="LinearLayout"></a>LinearLayout</h3><h4 id="onMeasure"><a href="#onMeasure" class="headerlink" title="onMeasure"></a>onMeasure</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mOrientation == VERTICAL) &#123;</span><br><span class="line">        measureVertical(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        measureHorizontal(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="measureVertical"><a href="#measureVertical" class="headerlink" title="measureVertical"></a>measureVertical</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Measures the children when the orientation of this LinearLayout is set</span></span><br><span class="line"><span class="comment">   * to &#123;<span class="doctag">@link</span> #VERTICAL&#125;.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> widthMeasureSpec Horizontal space requirements as imposed by the parent.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> heightMeasureSpec Vertical space requirements as imposed by the parent.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #getOrientation()</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #setOrientation(int)</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #onMeasure(int, int)</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">measureVertical</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//init the value of totalLength</span></span><br><span class="line">      mTotalLength = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> maxWidth = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> childState = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> alternativeMaxWidth = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> weightedMaxWidth = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">boolean</span> allFillParent = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">float</span> totalWeight = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> count = getVirtualChildCount();</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">boolean</span> matchWidth = <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">boolean</span> skippedMeasure = <span class="keyword">false</span>;<span class="comment">//if exactly &amp;&amp; layoutWeight !=nul ,set skippedMeasure= true</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> baselineChildIndex = mBaselineAlignedChildIndex;        </span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">boolean</span> useLargestChild = mUseLargestChild;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> largestChildHeight = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// See how tall everyone is. Also remember max width.</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">          <span class="keyword">final</span> View child = getVirtualChildAt(i);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (child == <span class="keyword">null</span>) &#123;</span><br><span class="line">              mTotalLength += measureNullChild(i);</span><br><span class="line">              <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (child.getVisibility() == View.GONE) &#123;</span><br><span class="line">             i += getChildrenSkipCount(child, i);</span><br><span class="line">             <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (hasDividerBeforeChildAt(i)) &#123;</span><br><span class="line">              mTotalLength += mDividerHeight;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="comment">//caculate  weightSum first</span></span><br><span class="line">          LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams) child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">          totalWeight += lp.weight;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//got two things ，one is the totalHeight and the other one is the tallestChildHeight</span></span><br><span class="line">          <span class="keyword">if</span> (heightMode == MeasureSpec.EXACTLY &amp;&amp; lp.height == <span class="number">0</span> &amp;&amp; lp.weight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="comment">// Optimization: don't bother measuring children who are going to use</span></span><br><span class="line">              <span class="comment">// leftover space. These views will get measured again down below if</span></span><br><span class="line">              <span class="comment">// there is any leftover space.</span></span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> totalLength = mTotalLength;</span><br><span class="line">              mTotalLength = Math.max(totalLength, totalLength + lp.topMargin + lp.bottomMargin);</span><br><span class="line">              skippedMeasure = <span class="keyword">true</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">int</span> oldHeight = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (lp.height == <span class="number">0</span> &amp;&amp; lp.weight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="comment">// heightMode is either UNSPECIFIED or AT_MOST, and this</span></span><br><span class="line">                  <span class="comment">// child wanted to stretch to fill available space.</span></span><br><span class="line">                  <span class="comment">// Translate that to WRAP_CONTENT so that it does not end up</span></span><br><span class="line">                  <span class="comment">// with a height of 0</span></span><br><span class="line">                  oldHeight = <span class="number">0</span>;</span><br><span class="line">                  lp.height = LayoutParams.WRAP_CONTENT;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// Determine how big this child would like to be. If this or</span></span><br><span class="line">              <span class="comment">// previous children have given a weight, then we allow it to</span></span><br><span class="line">              <span class="comment">// use all available space (and we will shrink things later</span></span><br><span class="line">              <span class="comment">// if needed).</span></span><br><span class="line">              <span class="comment">//IMPORTANT:method</span></span><br><span class="line">              measureChildBeforeLayout(</span><br><span class="line">                     child, i, widthMeasureSpec, <span class="number">0</span>, heightMeasureSpec,</span><br><span class="line">                     totalWeight == <span class="number">0</span> ? mTotalLength : <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (oldHeight != Integer.MIN_VALUE) &#123;</span><br><span class="line">                 lp.height = oldHeight;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> childHeight = child.getMeasuredHeight();</span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> totalLength = mTotalLength;</span><br><span class="line">              <span class="comment">//find the tallest height whether totalLength or totalLength add other height</span></span><br><span class="line">              mTotalLength = Math.max(totalLength, totalLength + childHeight + lp.topMargin +</span><br><span class="line">                     lp.bottomMargin + getNextLocationOffset(child));</span><br><span class="line"></span><br><span class="line">              <span class="comment">//xml has a attribut layout:useLargestChild</span></span><br><span class="line">              <span class="keyword">if</span> (useLargestChild) &#123;</span><br><span class="line">                  largestChildHeight = Math.max(childHeight, largestChildHeight);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">/**</span></span><br><span class="line"><span class="comment">           * If applicable, compute the additional offset to the child's baseline</span></span><br><span class="line"><span class="comment">           * we'll need later when asked &#123;<span class="doctag">@link</span> #getBaseline&#125;.</span></span><br><span class="line"><span class="comment">           */</span></span><br><span class="line">          <span class="keyword">if</span> ((baselineChildIndex &gt;= <span class="number">0</span>) &amp;&amp; (baselineChildIndex == i + <span class="number">1</span>)) &#123;</span><br><span class="line">             mBaselineChildTop = mTotalLength;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// if we are trying to use a child index for our baseline, the above</span></span><br><span class="line">          <span class="comment">// book keeping only works if there are no children above it with</span></span><br><span class="line">          <span class="comment">// weight.  fail fast to aid the developer.</span></span><br><span class="line">          <span class="keyword">if</span> (i &lt; baselineCbaselineChildIndexhildIndex &amp;&amp; lp.weight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"A child of LinearLayout with index "</span></span><br><span class="line">                      + <span class="string">"less than mBaselineAlignedChildIndex has weight &gt; 0, which "</span></span><br><span class="line">                      + <span class="string">"won't work.  Either remove the weight, or don't set "</span></span><br><span class="line">                      + <span class="string">"mBaselineAlignedChildIndex."</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//------------------start the width calculate--------------</span></span><br><span class="line">          <span class="comment">// .........................</span></span><br><span class="line">          i += getChildrenSkipCount(child, i);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mTotalLength &gt; <span class="number">0</span> &amp;&amp; hasDividerBeforeChildAt(count)) &#123;</span><br><span class="line">          mTotalLength += mDividerHeight;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// if useLargestChild</span></span><br><span class="line">      <span class="keyword">if</span> (useLargestChild &amp;&amp;</span><br><span class="line">              (heightMode == MeasureSpec.AT_MOST || heightMode == MeasureSpec.UNSPECIFIED)) &#123;</span><br><span class="line">        <span class="comment">//................</span></span><br><span class="line"> </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Add in our padding</span></span><br><span class="line">      mTotalLength += mPaddingTop + mPaddingBottom;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> heightSize = mTotalLength;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Check against our minimum height</span></span><br><span class="line">      heightSize = Math.max(heightSize, getSuggestedMinimumHeight());</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// Reconcile our calculated size with the heightMeasureSpec</span></span><br><span class="line">      <span class="comment">//may be heightSize is not useful but you should caculate the childrens size in the process,so you will get the heightSize by</span></span><br><span class="line">      <span class="comment">//the way</span></span><br><span class="line">      <span class="keyword">int</span> heightSizeAndState = resolveSizeAndState(heightSize, heightMeasureSpec, <span class="number">0</span>);</span><br><span class="line">      heightSize = heightSizeAndState &amp; MEASURED_SIZE_MASK;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// Either expand children with weight to take up available space or</span></span><br><span class="line">      <span class="comment">// shrink them if they extend beyond our current bounds. If we skipped</span></span><br><span class="line">      <span class="comment">// measurement on any children, we need to measure them now.</span></span><br><span class="line">      <span class="keyword">int</span> delta = heightSize - mTotalLength;</span><br><span class="line">      <span class="keyword">if</span> (skippedMeasure || delta != <span class="number">0</span> &amp;&amp; totalWeight &gt; <span class="number">0.0f</span>) &#123;</span><br><span class="line">          <span class="keyword">float</span> weightSum = mWeightSum &gt; <span class="number">0.0f</span> ? mWeightSum : totalWeight;</span><br><span class="line"></span><br><span class="line">          mTotalLength = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">              <span class="keyword">final</span> View child = getVirtualChildAt(i);</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">if</span> (child.getVisibility() == View.GONE) &#123;</span><br><span class="line">                  <span class="keyword">continue</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              </span><br><span class="line">              LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams) child.getLayoutParams();</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">float</span> childExtra = lp.weight;</span><br><span class="line">            <span class="comment">// reMeasure here by weight influence</span></span><br><span class="line">              <span class="keyword">if</span> (childExtra &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="comment">// Child said it could absorb extra space -- give him his share</span></span><br><span class="line">                  <span class="keyword">int</span> share = (<span class="keyword">int</span>) (childExtra * delta / weightSum);</span><br><span class="line">                  weightSum -= childExtra;</span><br><span class="line">                  delta -= share;</span><br><span class="line"></span><br><span class="line">                  <span class="comment">//must:getChildMeasureSpec(parent combined view size info ,parent padding and child margin, child lp.width)</span></span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> childWidthMeasureSpec = getChildMeasureSpec(widthMeasureSpec,</span><br><span class="line">                          mPaddingLeft + mPaddingRight +</span><br><span class="line">                                  lp.leftMargin + lp.rightMargin, lp.width);</span><br><span class="line"></span><br><span class="line">                  <span class="comment">// <span class="doctag">TODO:</span> Use a field like lp.isMeasured to figure out if this</span></span><br><span class="line">                  <span class="comment">// child has been previously measured</span></span><br><span class="line">                  <span class="keyword">if</span> ((lp.height != <span class="number">0</span>) || (heightMode != MeasureSpec.EXACTLY)) &#123;</span><br><span class="line">                      <span class="comment">// child was measured once already above...</span></span><br><span class="line">                      <span class="comment">// base new measurement on stored values</span></span><br><span class="line">                      <span class="keyword">int</span> </span><br><span class="line">                        = child.getMeasuredHeight() + share;</span><br><span class="line">                      <span class="keyword">if</span> (childHeight &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                          childHeight = <span class="number">0</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      </span><br><span class="line">                      child.measure(childWidthMeasureSpec,</span><br><span class="line">                              MeasureSpec.makeMeasureSpec(childHeight, MeasureSpec.EXACTLY));</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                      <span class="comment">// child was skipped in the loop above.</span></span><br><span class="line">                      <span class="comment">// Measure for this first time here      </span></span><br><span class="line">                      child.measure(childWidthMeasureSpec,</span><br><span class="line">                              MeasureSpec.makeMeasureSpec(share &gt; <span class="number">0</span> ? share : <span class="number">0</span>,</span><br><span class="line">                                      MeasureSpec.EXACTLY));</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">                  <span class="comment">// Child may now not fit in vertical dimension.</span></span><br><span class="line">                  childState = combineMeasuredStates(childState, child.getMeasuredState()</span><br><span class="line">                          &amp; (MEASURED_STATE_MASK&gt;&gt;MEASURED_HEIGHT_STATE_SHIFT));</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> margin =  lp.leftMargin + lp.rightMargin;</span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> measuredWidth = child.getMeasuredWidth() + margin;</span><br><span class="line">              maxWidth = Math.max(maxWidth, measuredWidth);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">boolean</span> matchWidthLocally = widthMode != MeasureSpec.EXACTLY &amp;&amp;</span><br><span class="line">                      lp.width == LayoutParams.MATCH_PARENT;</span><br><span class="line"></span><br><span class="line">              alternativeMaxWidth = Math.max(alternativeMaxWidth,</span><br><span class="line">                      matchWidthLocally ? margin : measuredWidth);</span><br><span class="line"></span><br><span class="line">              allFillParent = allFillParent &amp;&amp; lp.width == LayoutParams.MATCH_PARENT;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> totalLength = mTotalLength;</span><br><span class="line">              mTotalLength = Math.max(totalLength, totalLength + child.getMeasuredHeight() +</span><br><span class="line">                      lp.topMargin + lp.bottomMargin + getNextLocationOffset(child));</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// Add in our padding</span></span><br><span class="line">          mTotalLength += mPaddingTop + mPaddingBottom;</span><br><span class="line">          <span class="comment">// <span class="doctag">TODO:</span> Should we recompute the heightSpec based on the new total length?</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//reconsile the param of useLargestChild</span></span><br><span class="line">           <span class="comment">//.................</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//deal with the width of</span></span><br><span class="line">      <span class="keyword">if</span> (!allFillParent &amp;&amp; widthMode != MeasureSpec.EXACTLY) &#123;</span><br><span class="line">          maxWidth = alternativeMaxWidth;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      maxWidth += mPaddingLeft + mPaddingRight;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Check against our minimum width</span></span><br><span class="line">      maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());</span><br><span class="line"></span><br><span class="line">      <span class="comment">//must:resolveSizeAndState is (your caculateSize and the combined size info to deceide the measured size)</span></span><br><span class="line">      setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, childState),</span><br><span class="line">              heightSizeAndState);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (matchWidth) &#123;</span><br><span class="line">          forceUniformWidth(count, heightMeasureSpec);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="measurehorizontal"><a href="#measurehorizontal" class="headerlink" title="measurehorizontal"></a>measurehorizontal</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Measures the children when the orientation of this LinearLayout is set</span></span><br><span class="line"><span class="comment">   * to &#123;<span class="doctag">@link</span> #HORIZONTAL&#125;.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> widthMeasureSpec Horizontal space requirements as imposed by the parent.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> heightMeasureSpec Vertical space requirements as imposed by the parent.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #getOrientation()</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #setOrientation(int)</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #onMeasure(int, int) </span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">measureHorizontal</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//in this method you have to consider three things, the useLargestChild,the baseLine for ascent,descent</span></span><br><span class="line">      <span class="comment">// the weight value for left space</span></span><br><span class="line">      mTotalLength = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> maxHeight = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> childState = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> alternativeMaxHeight = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> weightedMaxHeight = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">boolean</span> allFillParent = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">float</span> totalWeight = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> count = getVirtualChildCount();</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">boolean</span> matchHeight = <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">boolean</span> skippedMeasure = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mMaxAscent == <span class="keyword">null</span> || mMaxDescent == <span class="keyword">null</span>) &#123;</span><br><span class="line">          mMaxAscent = <span class="keyword">new</span> <span class="keyword">int</span>[VERTICAL_GRAVITY_COUNT];</span><br><span class="line">          mMaxDescent = <span class="keyword">new</span> <span class="keyword">int</span>[VERTICAL_GRAVITY_COUNT];</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span>[] maxAscent = mMaxAscent;</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span>[] maxDescent = mMaxDescent;</span><br><span class="line"></span><br><span class="line">      maxAscent[<span class="number">0</span>] = maxAscent[<span class="number">1</span>] = maxAscent[<span class="number">2</span>] = maxAscent[<span class="number">3</span>] = -<span class="number">1</span>;</span><br><span class="line">      maxDescent[<span class="number">0</span>] = maxDescent[<span class="number">1</span>] = maxDescent[<span class="number">2</span>] = maxDescent[<span class="number">3</span>] = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">boolean</span> baselineAligned = mBaselineAligned;</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">boolean</span> useLargestChild = mUseLargestChild;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">boolean</span> isExactly = widthMode == MeasureSpec.EXACTLY;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> largestChildWidth = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// See how wide everyone is. Also remember max height.</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">          <span class="keyword">final</span> View child = getVirtualChildAt(i);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (child == <span class="keyword">null</span>) &#123;</span><br><span class="line">              mTotalLength += measureNullChild(i);</span><br><span class="line">              <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">         </span><br><span class="line">          <span class="keyword">if</span> (child.getVisibility() == GONE) &#123;</span><br><span class="line">              i += getChildrenSkipCount(child, i);</span><br><span class="line">              <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (hasDividerBeforeChildAt(i)) &#123;</span><br><span class="line">              mTotalLength += mDividerWidth;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">final</span> LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams)</span><br><span class="line">                  child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">          totalWeight += lp.weight;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">if</span> (widthMode == MeasureSpec.EXACTLY &amp;&amp; lp.width == <span class="number">0</span> &amp;&amp; lp.weight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="comment">// Optimization: don't bother measuring children who are going to use</span></span><br><span class="line">              <span class="comment">// leftover space. These views will get measured again down below if</span></span><br><span class="line">              <span class="comment">// there is any leftover space.</span></span><br><span class="line">              <span class="keyword">if</span> (isExactly) &#123;</span><br><span class="line">                  mTotalLength += lp.leftMargin + lp.rightMargin;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> totalLength = mTotalLength;</span><br><span class="line">                  mTotalLength = Math.max(totalLength, totalLength +</span><br><span class="line">                          lp.leftMargin + lp.rightMargin);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// Baseline alignment requires to measure widgets to obtain the</span></span><br><span class="line">              <span class="comment">// baseline offset (in particular for TextViews). The following</span></span><br><span class="line">              <span class="comment">// defeats the optimization mentioned above. Allow the child to</span></span><br><span class="line">              <span class="comment">// use as much space as it wants because we can shrink things</span></span><br><span class="line">              <span class="comment">// later (and re-measure).</span></span><br><span class="line">              <span class="keyword">if</span> (baselineAligned) &#123;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> freeWidthSpec = MeasureSpec.makeSafeMeasureSpec(</span><br><span class="line">                          MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.UNSPECIFIED);</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> freeHeightSpec = MeasureSpec.makeSafeMeasureSpec(</span><br><span class="line">                          MeasureSpec.getSize(heightMeasureSpec), MeasureSpec.UNSPECIFIED);</span><br><span class="line">                  child.measure(freeWidthSpec, freeHeightSpec);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  skippedMeasure = <span class="keyword">true</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">int</span> oldWidth = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (lp.width == <span class="number">0</span> &amp;&amp; lp.weight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="comment">// widthMode is either UNSPECIFIED or AT_MOST, and this</span></span><br><span class="line">                  <span class="comment">// child</span></span><br><span class="line">                  <span class="comment">// wanted to stretch to fill available space. Translate that to</span></span><br><span class="line">                  <span class="comment">// WRAP_CONTENT so that it does not end up with a width of 0</span></span><br><span class="line">                  oldWidth = <span class="number">0</span>;</span><br><span class="line">                  lp.width = LayoutParams.WRAP_CONTENT;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// Determine how big this child would like to be. If this or</span></span><br><span class="line">              <span class="comment">// previous children have given a weight, then we allow it to</span></span><br><span class="line">              <span class="comment">// use all available space (and we will shrink things later</span></span><br><span class="line">              <span class="comment">// if needed).</span></span><br><span class="line">              measureChildBeforeLayout(child, i, widthMeasureSpec,</span><br><span class="line">                      totalWeight == <span class="number">0</span> ? mTotalLength : <span class="number">0</span>,</span><br><span class="line">                      heightMeasureSpec, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (oldWidth != Integer.MIN_VALUE) &#123;</span><br><span class="line">                  lp.width = oldWidth;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> childWidth = child.getMeasuredWidth();</span><br><span class="line">              <span class="keyword">if</span> (isExactly) &#123;</span><br><span class="line">                  mTotalLength += childWidth + lp.leftMargin + lp.rightMargin +</span><br><span class="line">                          getNextLocationOffset(child);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> totalLength = mTotalLength;</span><br><span class="line">                  mTotalLength = Math.max(totalLength, totalLength + childWidth + lp.leftMargin +</span><br><span class="line">                         lp.rightMargin + getNextLocationOffset(child));</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (useLargestChild) &#123;</span><br><span class="line">                  largestChildWidth = Math.max(childWidth, largestChildWidth);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">boolean</span> matchHeightLocally = <span class="keyword">false</span>;</span><br><span class="line">          <span class="keyword">if</span> (heightMode != MeasureSpec.EXACTLY &amp;&amp; lp.height == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">              <span class="comment">// The height of the linear layout will scale, and at least one</span></span><br><span class="line">              <span class="comment">// child said it wanted to match our height. Set a flag indicating that</span></span><br><span class="line">              <span class="comment">// we need to remeasure at least that view when we know our height.</span></span><br><span class="line">              matchHeight = <span class="keyword">true</span>;</span><br><span class="line">              matchHeightLocally = <span class="keyword">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">final</span> <span class="keyword">int</span> margin = lp.topMargin + lp.bottomMargin;</span><br><span class="line">          <span class="keyword">final</span> <span class="keyword">int</span> childHeight = child.getMeasuredHeight() + margin;</span><br><span class="line">          childState = combineMeasuredStates(childState, child.getMeasuredState());</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (baselineAligned) &#123;</span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> childBaseline = child.getBaseline();</span><br><span class="line">              <span class="keyword">if</span> (childBaseline != -<span class="number">1</span>) &#123;</span><br><span class="line">                  <span class="comment">// Translates the child's vertical gravity into an index</span></span><br><span class="line">                  <span class="comment">// in the range 0..VERTICAL_GRAVITY_COUNT</span></span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> gravity = (lp.gravity &lt; <span class="number">0</span> ? mGravity : lp.gravity)</span><br><span class="line">                          &amp; Gravity.VERTICAL_GRAVITY_MASK;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> index = ((gravity &gt;&gt; Gravity.AXIS_Y_SHIFT)</span><br><span class="line">                          &amp; ~Gravity.AXIS_SPECIFIED) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                  maxAscent[index] = Math.max(maxAscent[index], childBaseline);</span><br><span class="line">                  maxDescent[index] = Math.max(maxDescent[index], childHeight - childBaseline);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          maxHeight = Math.max(maxHeight, childHeight);</span><br><span class="line"></span><br><span class="line">          allFillParent = allFillParent &amp;&amp; lp.height == LayoutParams.MATCH_PARENT;</span><br><span class="line">          <span class="keyword">if</span> (lp.weight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="comment">/*</span></span><br><span class="line"><span class="comment">               * Heights of weighted Views are bogus if we end up</span></span><br><span class="line"><span class="comment">               * remeasuring, so keep them separate.</span></span><br><span class="line"><span class="comment">               */</span></span><br><span class="line">              weightedMaxHeight = Math.max(weightedMaxHeight,</span><br><span class="line">                      matchHeightLocally ? margin : childHeight);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              alternativeMaxHeight = Math.max(alternativeMaxHeight,</span><br><span class="line">                      matchHeightLocally ? margin : childHeight);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          i += getChildrenSkipCount(child, i);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (mTotalLength &gt; <span class="number">0</span> &amp;&amp; hasDividerBeforeChildAt(count)) &#123;</span><br><span class="line">          mTotalLength += mDividerWidth;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Check mMaxAscent[INDEX_TOP] first because it maps to Gravity.TOP,</span></span><br><span class="line">      <span class="comment">// the most common case</span></span><br><span class="line">      <span class="keyword">if</span> (maxAscent[INDEX_TOP] != -<span class="number">1</span> ||</span><br><span class="line">              maxAscent[INDEX_CENTER_VERTICAL] != -<span class="number">1</span> ||</span><br><span class="line">              maxAscent[INDEX_BOTTOM] != -<span class="number">1</span> ||</span><br><span class="line">              maxAscent[INDEX_FILL] != -<span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">final</span> <span class="keyword">int</span> ascent = Math.max(maxAscent[INDEX_FILL],</span><br><span class="line">                  Math.max(maxAscent[INDEX_CENTER_VERTICAL],</span><br><span class="line">                  Math.max(maxAscent[INDEX_TOP], maxAscent[INDEX_BOTTOM])));</span><br><span class="line">          <span class="keyword">final</span> <span class="keyword">int</span> descent = Math.max(maxDescent[INDEX_FILL],</span><br><span class="line">                  Math.max(maxDescent[INDEX_CENTER_VERTICAL],</span><br><span class="line">                  Math.max(maxDescent[INDEX_TOP], maxDescent[INDEX_BOTTOM])));</span><br><span class="line">          maxHeight = Math.max(maxHeight, ascent + descent);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (useLargestChild &amp;&amp;</span><br><span class="line">              (widthMode == MeasureSpec.AT_MOST || widthMode == MeasureSpec.UNSPECIFIED)) &#123;</span><br><span class="line">          mTotalLength = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">              <span class="keyword">final</span> View child = getVirtualChildAt(i);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (child == <span class="keyword">null</span>) &#123;</span><br><span class="line">                  mTotalLength += measureNullChild(i);</span><br><span class="line">                  <span class="keyword">continue</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (child.getVisibility() == GONE) &#123;</span><br><span class="line">                  i += getChildrenSkipCount(child, i);</span><br><span class="line">                  <span class="keyword">continue</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">final</span> LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams)</span><br><span class="line">                      child.getLayoutParams();</span><br><span class="line">              <span class="keyword">if</span> (isExactly) &#123;</span><br><span class="line">                  mTotalLength += largestChildWidth + lp.leftMargin + lp.rightMargin +</span><br><span class="line">                          getNextLocationOffset(child);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> totalLength = mTotalLength;</span><br><span class="line">                  mTotalLength = Math.max(totalLength, totalLength + largestChildWidth +</span><br><span class="line">                          lp.leftMargin + lp.rightMargin + getNextLocationOffset(child));</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Add in our padding</span></span><br><span class="line">      mTotalLength += mPaddingLeft + mPaddingRight;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">int</span> widthSize = mTotalLength;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// Check against our minimum width</span></span><br><span class="line">      widthSize = Math.max(widthSize, getSuggestedMinimumWidth());</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// Reconcile our calculated size with the widthMeasureSpec</span></span><br><span class="line">      <span class="keyword">int</span> widthSizeAndState = resolveSizeAndState(widthSize, widthMeasureSpec, <span class="number">0</span>);</span><br><span class="line">      widthSize = widthSizeAndState &amp; MEASURED_SIZE_MASK;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// Either expand children with weight to take up available space or</span></span><br><span class="line">      <span class="comment">// shrink them if they extend beyond our current bounds. If we skipped</span></span><br><span class="line">      <span class="comment">// measurement on any children, we need to measure them now.</span></span><br><span class="line">      <span class="keyword">int</span> delta = widthSize - mTotalLength;</span><br><span class="line">      <span class="keyword">if</span> (skippedMeasure || delta != <span class="number">0</span> &amp;&amp; totalWeight &gt; <span class="number">0.0f</span>) &#123;</span><br><span class="line">          <span class="keyword">float</span> weightSum = mWeightSum &gt; <span class="number">0.0f</span> ? mWeightSum : totalWeight;</span><br><span class="line"></span><br><span class="line">          maxAscent[<span class="number">0</span>] = maxAscent[<span class="number">1</span>] = maxAscent[<span class="number">2</span>] = maxAscent[<span class="number">3</span>] = -<span class="number">1</span>;</span><br><span class="line">          maxDescent[<span class="number">0</span>] = maxDescent[<span class="number">1</span>] = maxDescent[<span class="number">2</span>] = maxDescent[<span class="number">3</span>] = -<span class="number">1</span>;</span><br><span class="line">          maxHeight = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">          mTotalLength = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">              <span class="keyword">final</span> View child = getVirtualChildAt(i);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (child == <span class="keyword">null</span> || child.getVisibility() == View.GONE) &#123;</span><br><span class="line">                  <span class="keyword">continue</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">final</span> LinearLayout.LayoutParams lp =</span><br><span class="line">                      (LinearLayout.LayoutParams) child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">              <span class="keyword">float</span> childExtra = lp.weight;</span><br><span class="line">              <span class="keyword">if</span> (childExtra &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="comment">// Child said it could absorb extra space -- give him his share</span></span><br><span class="line">                  <span class="keyword">int</span> share = (<span class="keyword">int</span>) (childExtra * delta / weightSum);</span><br><span class="line">                  weightSum -= childExtra;</span><br><span class="line">                  delta -= share;</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> childHeightMeasureSpec = getChildMeasureSpec(</span><br><span class="line">                          heightMeasureSpec,</span><br><span class="line">                          mPaddingTop + mPaddingBottom + lp.topMargin + lp.bottomMargin,</span><br><span class="line">                          lp.height);</span><br><span class="line"></span><br><span class="line">                  <span class="comment">// <span class="doctag">TODO:</span> Use a field like lp.isMeasured to figure out if this</span></span><br><span class="line">                  <span class="comment">// child has been previously measured</span></span><br><span class="line">                  <span class="keyword">if</span> ((lp.width != <span class="number">0</span>) || (widthMode != MeasureSpec.EXACTLY)) &#123;</span><br><span class="line">                      <span class="comment">// child was measured once already above ... base new measurement</span></span><br><span class="line">                      <span class="comment">// on stored values</span></span><br><span class="line">                      <span class="keyword">int</span> childWidth = child.getMeasuredWidth() + share;</span><br><span class="line">                      <span class="keyword">if</span> (childWidth &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                          childWidth = <span class="number">0</span>;</span><br><span class="line">                      &#125;</span><br><span class="line"></span><br><span class="line">                      child.measure(</span><br><span class="line">                          MeasureSpec.makeMeasureSpec(childWidth, MeasureSpec.EXACTLY),</span><br><span class="line">                          childHeightMeasureSpec);</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                      <span class="comment">// child was skipped in the loop above. Measure for this first time here</span></span><br><span class="line">                      child.measure(MeasureSpec.makeMeasureSpec(</span><br><span class="line">                              share &gt; <span class="number">0</span> ? share : <span class="number">0</span>, MeasureSpec.EXACTLY),</span><br><span class="line">                              childHeightMeasureSpec);</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">                  <span class="comment">// Child may now not fit in horizontal dimension.</span></span><br><span class="line">                  childState = combineMeasuredStates(childState,</span><br><span class="line">                          child.getMeasuredState() &amp; MEASURED_STATE_MASK);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (isExactly) &#123;</span><br><span class="line">                  mTotalLength += child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin +</span><br><span class="line">                          getNextLocationOffset(child);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> totalLength = mTotalLength;</span><br><span class="line">                  mTotalLength = Math.max(totalLength, totalLength + child.getMeasuredWidth() +</span><br><span class="line">                          lp.leftMargin + lp.rightMargin + getNextLocationOffset(child));</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">boolean</span> matchHeightLocally = heightMode != MeasureSpec.EXACTLY &amp;&amp;</span><br><span class="line">                      lp.height == LayoutParams.MATCH_PARENT;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> margin = lp.topMargin + lp .bottomMargin;</span><br><span class="line">              <span class="keyword">int</span> childHeight = child.getMeasuredHeight() + margin;</span><br><span class="line">              maxHeight = Math.max(maxHeight, childHeight);</span><br><span class="line">              alternativeMaxHeight = Math.max(alternativeMaxHeight,</span><br><span class="line">                      matchHeightLocally ? margin : childHeight);</span><br><span class="line"></span><br><span class="line">              allFillParent = allFillParent &amp;&amp; lp.height == LayoutParams.MATCH_PARENT;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (baselineAligned) &#123;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">int</span> childBaseline = child.getBaseline();</span><br><span class="line">                  <span class="keyword">if</span> (childBaseline != -<span class="number">1</span>) &#123;</span><br><span class="line">                      <span class="comment">// Translates the child's vertical gravity into an index in the range 0..2</span></span><br><span class="line">                      <span class="keyword">final</span> <span class="keyword">int</span> gravity = (lp.gravity &lt; <span class="number">0</span> ? mGravity : lp.gravity)</span><br><span class="line">                              &amp; Gravity.VERTICAL_GRAVITY_MASK;</span><br><span class="line">                      <span class="keyword">final</span> <span class="keyword">int</span> index = ((gravity &gt;&gt; Gravity.AXIS_Y_SHIFT)</span><br><span class="line">                              &amp; ~Gravity.AXIS_SPECIFIED) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                      maxAscent[index] = Math.max(maxAscent[index], childBaseline);</span><br><span class="line">                      maxDescent[index] = Math.max(maxDescent[index],</span><br><span class="line">                              childHeight - childBaseline);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// Add in our padding</span></span><br><span class="line">          mTotalLength += mPaddingLeft + mPaddingRight;</span><br><span class="line">          <span class="comment">// <span class="doctag">TODO:</span> Should we update widthSize with the new total length?</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">// Check mMaxAscent[INDEX_TOP] first because it maps to Gravity.TOP,</span></span><br><span class="line">          <span class="comment">// the most common case</span></span><br><span class="line">          <span class="keyword">if</span> (maxAscent[INDEX_TOP] != -<span class="number">1</span> ||</span><br><span class="line">                  maxAscent[INDEX_CENTER_VERTICAL] != -<span class="number">1</span> ||</span><br><span class="line">                  maxAscent[INDEX_BOTTOM] != -<span class="number">1</span> ||</span><br><span class="line">                  maxAscent[INDEX_FILL] != -<span class="number">1</span>) &#123;</span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> ascent = Math.max(maxAscent[INDEX_FILL],</span><br><span class="line">                      Math.max(maxAscent[INDEX_CENTER_VERTICAL],</span><br><span class="line">                      Math.max(maxAscent[INDEX_TOP], maxAscent[INDEX_BOTTOM])));</span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">int</span> descent = Math.max(maxDescent[INDEX_FILL],</span><br><span class="line">                      Math.max(maxDescent[INDEX_CENTER_VERTICAL],</span><br><span class="line">                      Math.max(maxDescent[INDEX_TOP], maxDescent[INDEX_BOTTOM])));</span><br><span class="line">              maxHeight = Math.max(maxHeight, ascent + descent);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          alternativeMaxHeight = Math.max(alternativeMaxHeight, weightedMaxHeight);</span><br><span class="line"></span><br><span class="line">          <span class="comment">// We have no limit, so make all weighted views as wide as the largest child.</span></span><br><span class="line">          <span class="comment">// Children will have already been measured once.</span></span><br><span class="line">          <span class="keyword">if</span> (useLargestChild &amp;&amp; widthMode != MeasureSpec.EXACTLY) &#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                  <span class="keyword">final</span> View child = getVirtualChildAt(i);</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">if</span> (child == <span class="keyword">null</span> || child.getVisibility() == View.GONE) &#123;</span><br><span class="line">                      <span class="keyword">continue</span>;</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">final</span> LinearLayout.LayoutParams lp =</span><br><span class="line">                          (LinearLayout.LayoutParams) child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">float</span> childExtra = lp.weight;</span><br><span class="line">                  <span class="keyword">if</span> (childExtra &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                      child.measure(</span><br><span class="line">                              MeasureSpec.makeMeasureSpec(largestChildWidth, MeasureSpec.EXACTLY),</span><br><span class="line">                              MeasureSpec.makeMeasureSpec(child.getMeasuredHeight(),</span><br><span class="line">                                      MeasureSpec.EXACTLY));</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!allFillParent &amp;&amp; heightMode != MeasureSpec.EXACTLY) &#123;</span><br><span class="line">          maxHeight = alternativeMaxHeight;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      maxHeight += mPaddingTop + mPaddingBottom;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Check against our minimum height</span></span><br><span class="line">      maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());</span><br><span class="line">      </span><br><span class="line">      setMeasuredDimension(widthSizeAndState | (childState&amp;MEASURED_STATE_MASK),</span><br><span class="line">              resolveSizeAndState(maxHeight, heightMeasureSpec,</span><br><span class="line">                      (childState&lt;&lt;MEASURED_HEIGHT_STATE_SHIFT)));</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (matchHeight) &#123;</span><br><span class="line">          forceUniformHeight(count, widthMeasureSpec);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="onLayout"><a href="#onLayout" class="headerlink" title="onLayout"></a>onLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> l, <span class="keyword">int</span> t, <span class="keyword">int</span> r, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mOrientation == VERTICAL) &#123;</span><br><span class="line">        layoutVertical(l, t, r, b);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        layoutHorizontal(l, t, r, b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="layoutVertical"><a href="#layoutVertical" class="headerlink" title="layoutVertical"></a>layoutVertical</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Position the children during a layout pass if the orientation of this</span></span><br><span class="line"><span class="comment">  * LinearLayout is set to &#123;<span class="doctag">@link</span> #VERTICAL&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@see</span> #getOrientation()</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@see</span> #setOrientation(int)</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@see</span> #onLayout(boolean, int, int, int, int)</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> left</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> top</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> right</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> bottom</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * #IMPORTANT calculate the place with the grivaty;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">layoutVertical</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> paddingLeft = mPaddingLeft;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">//start ------children's display zone all --------</span></span><br><span class="line">     <span class="keyword">int</span> childTop;</span><br><span class="line">     <span class="keyword">int</span> childLeft;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// Where right end of child should go</span></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> width = right - left;</span><br><span class="line">     <span class="keyword">int</span> childRight = width - mPaddingRight;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// Space available for child</span></span><br><span class="line">     <span class="keyword">int</span> childSpace = width - paddingLeft - mPaddingRight;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> count = getVirtualChildCount();</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> majorGravity = mGravity &amp; Gravity.VERTICAL_GRAVITY_MASK;<span class="comment">//垂直mask</span></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> minorGravity = mGravity &amp; Gravity.RELATIVE_HORIZONTAL_GRAVITY_MASK;<span class="comment">//水平mask</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//get start Y position for children </span></span><br><span class="line">     <span class="keyword">switch</span> (majorGravity) &#123;</span><br><span class="line">        <span class="keyword">case</span> Gravity.BOTTOM:</span><br><span class="line">            <span class="comment">// mTotalLength contains the padding already</span></span><br><span class="line">            childTop = mPaddingTop + bottom - top - mTotalLength;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// mTotalLength contains the padding already</span></span><br><span class="line">        <span class="keyword">case</span> Gravity.CENTER_VERTICAL:</span><br><span class="line">            childTop = mPaddingTop + (bottom - top - mTotalLength) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> Gravity.TOP:</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            childTop = mPaddingTop;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// ------start to decide  where the child to hold the place (childTop and childLeft)--------</span></span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">         <span class="keyword">final</span> View child = getVirtualChildAt(i);</span><br><span class="line">         <span class="keyword">if</span> (child == <span class="keyword">null</span>) &#123;</span><br><span class="line">             childTop += measureNullChild(i);</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> childWidth = child.getMeasuredWidth();</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> childHeight = child.getMeasuredHeight();</span><br><span class="line">             </span><br><span class="line">             <span class="keyword">final</span> LinearLayout.LayoutParams lp =</span><br><span class="line">                     (LinearLayout.LayoutParams) child.getLayoutParams();</span><br><span class="line">             </span><br><span class="line">             <span class="keyword">int</span> gravity = lp.gravity;</span><br><span class="line">             <span class="keyword">if</span> (gravity &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                 gravity = minorGravity;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> layoutDirection = getLayoutDirection();</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> absoluteGravity = Gravity.getAbsoluteGravity(gravity, layoutDirection);</span><br><span class="line">             <span class="keyword">switch</span> (absoluteGravity &amp; Gravity.HORIZONTAL_GRAVITY_MASK) &#123;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.CENTER_HORIZONTAL:</span><br><span class="line">                     childLeft = paddingLeft + ((childSpace - childWidth) / <span class="number">2</span>)</span><br><span class="line">                             + lp.leftMargin - lp.rightMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                 <span class="keyword">case</span> Gravity.RIGHT:</span><br><span class="line">                     childLeft = childRight - childWidth - lp.rightMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                 <span class="keyword">case</span> Gravity.LEFT:</span><br><span class="line">                 <span class="keyword">default</span>:</span><br><span class="line">                     childLeft = paddingLeft + lp.leftMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (hasDividerBeforeChildAt(i)) &#123;</span><br><span class="line">                 childTop += mDividerHeight;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             childTop += lp.topMargin;</span><br><span class="line">             <span class="comment">//must:setFrame or any other similar method use (chidLeft,childTop,childWidth,childHeight)</span></span><br><span class="line">             setChildFrame(child, childLeft, childTop + getLocationOffset(child),</span><br><span class="line">                     childWidth, childHeight);</span><br><span class="line">             childTop += childHeight + lp.bottomMargin + getNextLocationOffset(child);</span><br><span class="line"></span><br><span class="line">             i += getChildrenSkipCount(child, i);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="layoutHorizontal"><a href="#layoutHorizontal" class="headerlink" title="layoutHorizontal"></a>layoutHorizontal</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">STEPS:</span></span><br><span class="line"><span class="comment">#1. get childTotalHeight,getChildRightMost;</span></span><br><span class="line"><span class="comment">#2. get start for Horizontal x position by gravity;</span></span><br><span class="line"><span class="comment">#3. caculate every children's left and top by gravity;</span></span><br><span class="line"><span class="comment">#4. setFrame for every children itself;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  * Position the children during a layout pass if the orientation of this</span></span><br><span class="line"><span class="comment">  * LinearLayout is set to &#123;<span class="doctag">@link</span> #HORIZONTAL&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@see</span> #getOrientation()</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@see</span> #setOrientation(int)</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@see</span> #onLayout(boolean, int, int, int, int)</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> left</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> top</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> right</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> bottom</span></span><br><span class="line"><span class="comment">  * #IMPORTANT:baseLineFunction in the process of layout</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">layoutHorizontal</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> isLayoutRtl = isLayoutRtl();</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> paddingTop = mPaddingTop;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> childTop;</span><br><span class="line">     <span class="keyword">int</span> childLeft;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">// Where bottom of child should go</span></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> height = bottom - top;</span><br><span class="line">     <span class="keyword">int</span> childBottom = height - mPaddingBottom; </span><br><span class="line">     </span><br><span class="line">     <span class="comment">// Space available for child</span></span><br><span class="line">     <span class="keyword">int</span> childSpace = height - paddingTop - mPaddingBottom;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> count = getVirtualChildCount();</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> majorGravity = mGravity &amp; Gravity.RELATIVE_HORIZONTAL_GRAVITY_MASK;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> minorGravity = mGravity &amp; Gravity.VERTICAL_GRAVITY_MASK;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> baselineAligned = mBaselineAligned;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span>[] maxAscent = mMaxAscent;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span>[] maxDescent = mMaxDescent;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> layoutDirection = getLayoutDirection();</span><br><span class="line">     <span class="keyword">switch</span> (Gravity.getAbsoluteGravity(majorGravity, layoutDirection)) &#123;</span><br><span class="line">         <span class="keyword">case</span> Gravity.RIGHT:</span><br><span class="line">             <span class="comment">// mTotalLength contains the padding already</span></span><br><span class="line">             childLeft = mPaddingLeft + right - left - mTotalLength;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">case</span> Gravity.CENTER_HORIZONTAL:</span><br><span class="line">             <span class="comment">// mTotalLength contains the padding already</span></span><br><span class="line">             childLeft = mPaddingLeft + (right - left - mTotalLength) / <span class="number">2</span>;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">case</span> Gravity.LEFT:</span><br><span class="line">         <span class="keyword">default</span>:</span><br><span class="line">             childLeft = mPaddingLeft;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">int</span> dir = <span class="number">1</span>;</span><br><span class="line">     <span class="comment">//In case of RTL, start drawing from the last child.</span></span><br><span class="line">     <span class="keyword">if</span> (isLayoutRtl) &#123;</span><br><span class="line">         start = count - <span class="number">1</span>;</span><br><span class="line">         dir = -<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">         <span class="keyword">int</span> childIndex = start + dir * i;</span><br><span class="line">         <span class="keyword">final</span> View child = getVirtualChildAt(childIndex);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (child == <span class="keyword">null</span>) &#123;</span><br><span class="line">             childLeft += measureNullChild(childIndex);</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> childWidth = child.getMeasuredWidth();</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> childHeight = child.getMeasuredHeight();</span><br><span class="line">             <span class="keyword">int</span> childBaseline = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">final</span> LinearLayout.LayoutParams lp =</span><br><span class="line">                     (LinearLayout.LayoutParams) child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (baselineAligned &amp;&amp; lp.height != LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                 childBaseline = child.getBaseline();</span><br><span class="line">             &#125;</span><br><span class="line">             </span><br><span class="line">             <span class="keyword">int</span> gravity = lp.gravity;</span><br><span class="line">             <span class="keyword">if</span> (gravity &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                 gravity = minorGravity;</span><br><span class="line">             &#125;</span><br><span class="line">             </span><br><span class="line">             <span class="keyword">switch</span> (gravity &amp; Gravity.VERTICAL_GRAVITY_MASK) &#123;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.TOP:</span><br><span class="line">                     childTop = paddingTop + lp.topMargin;</span><br><span class="line">                     <span class="keyword">if</span> (childBaseline != -<span class="number">1</span>) &#123;</span><br><span class="line">                         childTop += maxAscent[INDEX_TOP] - childBaseline;</span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                 <span class="keyword">case</span> Gravity.CENTER_VERTICAL:</span><br><span class="line">                     <span class="comment">// Removed support for baseline alignment when layout_gravity or</span></span><br><span class="line">                     <span class="comment">// gravity == center_vertical. See bug #1038483.</span></span><br><span class="line">                     <span class="comment">// Keep the code around if we need to re-enable this feature</span></span><br><span class="line">                     <span class="comment">// if (childBaseline != -1) &#123;</span></span><br><span class="line">                     <span class="comment">//     // Align baselines vertically only if the child is smaller than us</span></span><br><span class="line">                     <span class="comment">//     if (childSpace - childHeight &gt; 0) &#123;</span></span><br><span class="line">                     <span class="comment">//         childTop = paddingTop + (childSpace / 2) - childBaseline;</span></span><br><span class="line">                     <span class="comment">//     &#125; else &#123;</span></span><br><span class="line">                     <span class="comment">//         childTop = paddingTop + (childSpace - childHeight) / 2;</span></span><br><span class="line">                     <span class="comment">//     &#125;</span></span><br><span class="line">                     <span class="comment">// &#125; else &#123;</span></span><br><span class="line">                     childTop = paddingTop + ((childSpace - childHeight) / <span class="number">2</span>)</span><br><span class="line">                             + lp.topMargin - lp.bottomMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                 <span class="keyword">case</span> Gravity.BOTTOM:</span><br><span class="line">                     childTop = childBottom - childHeight - lp.bottomMargin;</span><br><span class="line">                     <span class="keyword">if</span> (childBaseline != -<span class="number">1</span>) &#123;</span><br><span class="line">                         <span class="keyword">int</span> descent = child.getMeasuredHeight() - childBaseline;</span><br><span class="line">                         childTop -= (maxDescent[INDEX_BOTTOM] - descent);</span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">default</span>:</span><br><span class="line">                     childTop = paddingTop;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (hasDividerBeforeChildAt(childIndex)) &#123;</span><br><span class="line">                 childLeft += mDividerWidth;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             childLeft += lp.leftMargin;</span><br><span class="line">             setChildFrame(child, childLeft + getLocationOffset(child), childTop,</span><br><span class="line">                     childWidth, childHeight);</span><br><span class="line">             childLeft += childWidth + lp.rightMargin +</span><br><span class="line">                     getNextLocationOffset(child);</span><br><span class="line"></span><br><span class="line">             i += getChildrenSkipCount(child, childIndex);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="onDraw"><a href="#onDraw" class="headerlink" title="onDraw"></a>onDraw</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ref android.R.styleable#LinearLayout_divider</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   draw for backgroud and ondraw for content;here we just need some dividers;</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mDivider == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mOrientation == VERTICAL) &#123;</span><br><span class="line">            drawDividersVertical(canvas);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawDividersHorizontal(canvas);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="FrameLayout"><a href="#FrameLayout" class="headerlink" title="FrameLayout"></a>FrameLayout</h3><h4 id="onMeasure-1"><a href="#onMeasure-1" class="headerlink" title="onMeasure"></a>onMeasure</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * # 1.find the biggest width and height from children</span></span><br><span class="line"><span class="comment">  * # 2.setMeasureDmension() ,widthMeasureSpec,drawbale,max children size</span></span><br><span class="line"><span class="comment">  * # 3.i am a warp_content and my children is match_parent,should reMeasure them</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> count = getChildCount();</span><br><span class="line"></span><br><span class="line">     <span class="comment">// i am a warp_content</span></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> measureMatchParentChildren =</span><br><span class="line">             MeasureSpec.getMode(widthMeasureSpec) != MeasureSpec.EXACTLY ||</span><br><span class="line">             MeasureSpec.getMode(heightMeasureSpec) != MeasureSpec.EXACTLY;</span><br><span class="line">     mMatchParentChildren.clear();</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> maxHeight = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">int</span> maxWidth = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">int</span> childState = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// find the biggest width and height and then add the children with match_parent</span></span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">         <span class="keyword">final</span> View child = getChildAt(i);</span><br><span class="line">         <span class="keyword">if</span> (mMeasureAllChildren || child.getVisibility() != GONE) &#123;</span><br><span class="line">             <span class="comment">//must:getChildMeasureSpec and child.measure.to get the child's measured size;</span></span><br><span class="line">             measureChildWithMargins(child, widthMeasureSpec, <span class="number">0</span>, heightMeasureSpec, <span class="number">0</span>);</span><br><span class="line">             <span class="keyword">final</span> LayoutParams lp = (LayoutParams) child.getLayoutParams();</span><br><span class="line">             maxWidth = Math.max(maxWidth,</span><br><span class="line">                     child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin);</span><br><span class="line">             maxHeight = Math.max(maxHeight,</span><br><span class="line">                     child.getMeasuredHeight() + lp.topMargin + lp.bottomMargin);</span><br><span class="line">             childState = combineMeasuredStates(childState, child.getMeasuredState());</span><br><span class="line">             <span class="comment">// width and height decide by how big the parent is</span></span><br><span class="line">             <span class="keyword">if</span> (measureMatchParentChildren) &#123;</span><br><span class="line">                 <span class="keyword">if</span> (lp.width == LayoutParams.MATCH_PARENT ||</span><br><span class="line">                         lp.height == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                     mMatchParentChildren.add(child);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Account for padding too</span></span><br><span class="line">     maxWidth += getPaddingLeftWithForeground() + getPaddingRightWithForeground();</span><br><span class="line">     maxHeight += getPaddingTopWithForeground() + getPaddingBottomWithForeground();</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Check against our minimum height and width</span></span><br><span class="line">     maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());</span><br><span class="line">     maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Check against our foreground's minimum height and width</span></span><br><span class="line">     <span class="keyword">final</span> Drawable drawable = getForeground();</span><br><span class="line">     <span class="keyword">if</span> (drawable != <span class="keyword">null</span>) &#123;</span><br><span class="line">         maxHeight = Math.max(maxHeight, drawable.getMinimumHeight());</span><br><span class="line">         maxWidth = Math.max(maxWidth, drawable.getMinimumWidth());</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//must:resloveSizeAndState</span></span><br><span class="line">     setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, childState),</span><br><span class="line">             resolveSizeAndState(maxHeight, heightMeasureSpec,</span><br><span class="line">                     childState &lt;&lt; MEASURED_HEIGHT_STATE_SHIFT));</span><br><span class="line"></span><br><span class="line">     count = mMatchParentChildren.size();</span><br><span class="line"></span><br><span class="line">     <span class="comment">// these counts need remeasure wheter for it's width nor for it's height</span></span><br><span class="line">     <span class="keyword">if</span> (count &gt; <span class="number">1</span>) &#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">             <span class="keyword">final</span> View child = mMatchParentChildren.get(i);</span><br><span class="line">             <span class="keyword">final</span> MarginLayoutParams lp = (MarginLayoutParams) child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> childWidthMeasureSpec;</span><br><span class="line">             <span class="keyword">if</span> (lp.width == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                 <span class="keyword">final</span> <span class="keyword">int</span> width = Math.max(<span class="number">0</span>, getMeasuredWidth()</span><br><span class="line">                         - getPaddingLeftWithForeground() - getPaddingRightWithForeground()</span><br><span class="line">                         - lp.leftMargin - lp.rightMargin);</span><br><span class="line">                 <span class="comment">//must:use MeasureSpec.makeMeasureSpec to get the spec</span></span><br><span class="line">                 childWidthMeasureSpec = MeasureSpec.makeMeasureSpec(</span><br><span class="line">                         width, MeasureSpec.EXACTLY);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 <span class="comment">//must:getChildMeasureSpec (p spec p padding c layoutparam)[p-p-c]</span></span><br><span class="line">                 childWidthMeasureSpec = getChildMeasureSpec(widthMeasureSpec,</span><br><span class="line">                         getPaddingLeftWithForeground() + getPaddingRightWithForeground() +</span><br><span class="line">                         lp.leftMargin + lp.rightMargin,</span><br><span class="line">                         lp.width);</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> childHeightMeasureSpec;</span><br><span class="line">             <span class="keyword">if</span> (lp.height == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                 <span class="keyword">final</span> <span class="keyword">int</span> height = Math.max(<span class="number">0</span>, getMeasuredHeight()</span><br><span class="line">                         - getPaddingTopWithForeground() - getPaddingBottomWithForeground()</span><br><span class="line">                         - lp.topMargin - lp.bottomMargin);</span><br><span class="line">                 childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(</span><br><span class="line">                         height, MeasureSpec.EXACTLY);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 childHeightMeasureSpec = getChildMeasureSpec(heightMeasureSpec,</span><br><span class="line">                         getPaddingTopWithForeground() + getPaddingBottomWithForeground() +</span><br><span class="line">                         lp.topMargin + lp.bottomMargin,</span><br><span class="line">                         lp.height);</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             child.measure(childWidthMeasureSpec, childHeightMeasureSpec);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="onLayout-1"><a href="#onLayout-1" class="headerlink" title="onLayout"></a>onLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"># 1. gravity -&gt;horizontal: need my left and right and center_horizontal</span></span><br><span class="line"><span class="comment">#    gravity-&gt;vertical: need my top and bottom and center_vertical </span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">layoutChildren</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">boolean</span> forceLeftGravity)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> count = getChildCount();</span><br><span class="line"></span><br><span class="line">     <span class="comment">//getPaddingLeftWithForeground()  set the value by layout:forground</span></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> parentLeft = getPaddingLeftWithForeground();</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> parentRight = right - left - getPaddingRightWithForeground();</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> parentTop = getPaddingTopWithForeground();</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> parentBottom = bottom - top - getPaddingBottomWithForeground();</span><br><span class="line"></span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">         <span class="keyword">final</span> View child = getChildAt(i);</span><br><span class="line">         <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">             <span class="keyword">final</span> LayoutParams lp = (LayoutParams) child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> width = child.getMeasuredWidth();</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> height = child.getMeasuredHeight();</span><br><span class="line"></span><br><span class="line">             <span class="keyword">int</span> childLeft;</span><br><span class="line">             <span class="keyword">int</span> childTop;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">int</span> gravity = lp.gravity;</span><br><span class="line">             <span class="keyword">if</span> (gravity == -<span class="number">1</span>) &#123;</span><br><span class="line">                 gravity = DEFAULT_CHILD_GRAVITY;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> layoutDirection = getLayoutDirection();</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> absoluteGravity = Gravity.getAbsoluteGravity(gravity, layoutDirection);</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> verticalGravity = gravity &amp; Gravity.VERTICAL_GRAVITY_MASK;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">switch</span> (absoluteGravity &amp; Gravity.HORIZONTAL_GRAVITY_MASK) &#123;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.CENTER_HORIZONTAL:</span><br><span class="line">                     childLeft = parentLeft + (parentRight - parentLeft - width) / <span class="number">2</span> +</span><br><span class="line">                     lp.leftMargin - lp.rightMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.RIGHT:</span><br><span class="line">                     <span class="keyword">if</span> (!forceLeftGravity) &#123;</span><br><span class="line">                         childLeft = parentRight - width - lp.rightMargin;</span><br><span class="line">                         <span class="keyword">break</span>;</span><br><span class="line">                     &#125;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.LEFT:</span><br><span class="line">                 <span class="keyword">default</span>:</span><br><span class="line">                     childLeft = parentLeft + lp.leftMargin;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">switch</span> (verticalGravity) &#123;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.TOP:</span><br><span class="line">                     childTop = parentTop + lp.topMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.CENTER_VERTICAL</span><br><span class="line">                     <span class="comment">//how to find the childTop if child's lp.gravity is center_vertical</span></span><br><span class="line">                     childTop = parentTop + (parentBottom - parentTop - height) / <span class="number">2</span> +</span><br><span class="line">                     lp.topMargin - lp.bottomMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">case</span> Gravity.BOTTOM:</span><br><span class="line">                     childTop = parentBottom - height - lp.bottomMargin;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">default</span>:</span><br><span class="line">                     childTop = parentTop + lp.topMargin;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="comment">//left ,top,width,height is enough</span></span><br><span class="line">             child.layout(childLeft, childTop, childLeft + width, childTop + height);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="onDraw-1"><a href="#onDraw-1" class="headerlink" title="onDraw"></a>onDraw</h4><p>Nothing to do</p><h3 id="RelativeLayout"><a href="#RelativeLayout" class="headerlink" title="RelativeLayout"></a>RelativeLayout</h3><h4 id="onMeasure-2"><a href="#onMeasure-2" class="headerlink" title="onMeasure"></a>onMeasure</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * here we ignore baseLineView and RTL </span></span><br><span class="line"><span class="comment"># 1. sortChildren get the result   mSortedHorizontalChildren and mSortedVerticalChildren</span></span><br><span class="line"><span class="comment"># 2. measureChildHorizontal or Vertical influnce by relative layout and view desired demision</span></span><br><span class="line"><span class="comment"># 3.i am warpContent height,i should reconside height [child vertical center,center parent, alingn bottom];i am warpContent width,i should reconside width[child horizontal center,center parent ,align right]</span></span><br><span class="line"><span class="comment"># 4.do with layout_gravity ,move me as a single block</span></span><br><span class="line"><span class="comment"># 5. setMeasuredDimension at last as usual</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> widthMeasureSpec</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> heightMeasureSpec</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (mDirtyHierarchy) &#123;</span><br><span class="line">         mDirtyHierarchy = <span class="keyword">false</span>;</span><br><span class="line">         <span class="comment">//must :you should sort the children first</span></span><br><span class="line">         sortChildren();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> myWidth = -<span class="number">1</span>;</span><br><span class="line">     <span class="keyword">int</span> myHeight = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> width = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">int</span> height = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Record our dimensions if they are known;</span></span><br><span class="line">     <span class="keyword">if</span> (widthMode != MeasureSpec.UNSPECIFIED) &#123;</span><br><span class="line">         myWidth = widthSize;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (heightMode != MeasureSpec.UNSPECIFIED) &#123;</span><br><span class="line">         myHeight = heightSize;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (widthMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">         width = myWidth;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (heightMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">         height = myHeight;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     View ignore = <span class="keyword">null</span>;</span><br><span class="line">     <span class="keyword">int</span> gravity = mGravity &amp; Gravity.RELATIVE_HORIZONTAL_GRAVITY_MASK;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> horizontalGravity = gravity != Gravity.START &amp;&amp; gravity != <span class="number">0</span>;</span><br><span class="line">     gravity = mGravity &amp; Gravity.VERTICAL_GRAVITY_MASK;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> verticalGravity = gravity != Gravity.TOP &amp;&amp; gravity != <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> left = Integer.MAX_VALUE;</span><br><span class="line">     <span class="keyword">int</span> top = Integer.MAX_VALUE;</span><br><span class="line">     <span class="keyword">int</span> right = Integer.MIN_VALUE;</span><br><span class="line">     <span class="keyword">int</span> bottom = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">boolean</span> offsetHorizontalAxis = <span class="keyword">false</span>;</span><br><span class="line">     <span class="keyword">boolean</span> offsetVerticalAxis = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> ((horizontalGravity || verticalGravity) &amp;&amp; mIgnoreGravity != View.NO_ID) &#123;</span><br><span class="line">         ignore = findViewById(mIgnoreGravity);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> isWrapContentWidth = widthMode != MeasureSpec.EXACTLY;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> isWrapContentHeight = heightMode != MeasureSpec.EXACTLY;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//.............................</span></span><br><span class="line"></span><br><span class="line">     View[] views = mSortedHorizontalChildren;</span><br><span class="line">     <span class="keyword">int</span> count = views.length;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">         View child = views[i];</span><br><span class="line">         <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">             <span class="comment">//output:Viewgroup.LayoutParams(width,height)-&gt;Viewgroup.MarginLayoutParams(add leftmargin......)-&gt;Real</span></span><br><span class="line">             <span class="comment">//tivelayout.LayoutParams(add mLeft,mTop......)</span></span><br><span class="line">             LayoutParams params = (LayoutParams) child.getLayoutParams();</span><br><span class="line">             <span class="keyword">int</span>[] rules = params.getRules(layoutDirection);</span><br><span class="line"></span><br><span class="line">             <span class="comment">//aqurire params.left and params.right from the rules.</span></span><br><span class="line">             applyHorizontalSizeRules(params, myWidth, rules);</span><br><span class="line"></span><br><span class="line">             measureChildHorizontal(child, params, myWidth, myHeight);</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (positionChildHorizontal(child, params, myWidth, isWrapContentWidth)) &#123;</span><br><span class="line">                 offsetHorizontalAxis = <span class="keyword">true</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     views = mSortedVerticalChildren;</span><br><span class="line">     count = views.length;</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> targetSdkVersion = getContext().getApplicationInfo().targetSdkVersion;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">         <span class="keyword">final</span> View child = views[i];</span><br><span class="line">         <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">             <span class="keyword">final</span> LayoutParams params = (LayoutParams) child.getLayoutParams();</span><br><span class="line"></span><br><span class="line">             <span class="comment">//aqurire params.top and params.bttom from the rules.</span></span><br><span class="line">             applyVerticalSizeRules(params, myHeight, child.getBaseline());</span><br><span class="line">             measureChild(child, params, myWidth, myHeight);</span><br><span class="line">             <span class="keyword">if</span> (positionChildVertical(child, params, myHeight, isWrapContentHeight)) &#123;</span><br><span class="line">                 offsetVerticalAxis = <span class="keyword">true</span>;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (isWrapContentWidth) &#123;</span><br><span class="line">                 <span class="keyword">if</span> (isLayoutRtl()) &#123;</span><br><span class="line">               <span class="comment">//......</span></span><br><span class="line">                 &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                     <span class="keyword">if</span> (targetSdkVersion &lt; Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">                         width = Math.max(width, params.mRight);</span><br><span class="line">                     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                         width = Math.max(width, params.mRight + params.rightMargin);</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (isWrapContentHeight) &#123;</span><br><span class="line">                 <span class="keyword">if</span> (targetSdkVersion &lt; Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">                     height = Math.max(height, params.mBottom);</span><br><span class="line">                 &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                     height = Math.max(height, params.mBottom + params.bottomMargin);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (child != ignore || verticalGravity) &#123;</span><br><span class="line">                 left = Math.min(left, params.mLeft - params.leftMargin);</span><br><span class="line">                 top = Math.min(top, params.mTop - params.topMargin);</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (child != ignore || horizontalGravity) &#123;</span><br><span class="line">                 right = Math.max(right, params.mRight + params.rightMargin);</span><br><span class="line">                 bottom = Math.max(bottom, params.mBottom + params.bottomMargin);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Use the top-start-most laid out view as the baseline. RTL offsets are</span></span><br><span class="line">     <span class="comment">// applied later, so we can use the left-most edge as the starting edge.</span></span><br><span class="line">     View baselineView = <span class="keyword">null</span>;</span><br><span class="line">     LayoutParams baselineParams = <span class="keyword">null</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="comment">//......................</span></span><br><span class="line">     &#125;</span><br><span class="line">     mBaselineView = baselineView;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">if</span> (isWrapContentWidth) &#123;</span><br><span class="line">         <span class="comment">// Width already has left padding in it since it was calculated by looking at</span></span><br><span class="line">         <span class="comment">// the right of each child view</span></span><br><span class="line">         width += mPaddingRight;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (mLayoutParams != <span class="keyword">null</span> &amp;&amp; mLayoutParams.width &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">             width = Math.max(width, mLayoutParams.width);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         width = Math.max(width, getSuggestedMinimumWidth());</span><br><span class="line">         <span class="comment">//must:last check aginst with widthMeasureSpec</span></span><br><span class="line">         width = resolveSize(width, widthMeasureSpec);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (offsetHorizontalAxis) &#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                 <span class="keyword">final</span> View child = views[i];</span><br><span class="line">                 <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">                     <span class="keyword">final</span> LayoutParams params = (LayoutParams) child.getLayoutParams();</span><br><span class="line">                     <span class="keyword">final</span> <span class="keyword">int</span>[] rules = params.getRules(layoutDirection);</span><br><span class="line">                     <span class="keyword">if</span> (rules[CENTER_IN_PARENT] != <span class="number">0</span> || rules[CENTER_HORIZONTAL] != <span class="number">0</span>) &#123;</span><br><span class="line">                         centerHorizontal(child, params, width);</span><br><span class="line">                     &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rules[ALIGN_PARENT_RIGHT] != <span class="number">0</span>) &#123;</span><br><span class="line">                         <span class="keyword">final</span> <span class="keyword">int</span> childWidth = child.getMeasuredWidth();</span><br><span class="line">                         params.mLeft = width - mPaddingRight - childWidth;</span><br><span class="line">                         params.mRight = params.mLeft + childWidth;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   </span><br><span class="line">     <span class="keyword">if</span> (isWrapContentHeight) &#123;</span><br><span class="line">         <span class="comment">// Height already has top padding in it since it was calculated by looking at</span></span><br><span class="line">         <span class="comment">// the bottom of each child view</span></span><br><span class="line">         height += mPaddingBottom;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (mLayoutParams != <span class="keyword">null</span> &amp;&amp; mLayoutParams.height &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">             height = Math.max(height, mLayoutParams.height);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         height = Math.max(height, getSuggestedMinimumHeight());</span><br><span class="line">         <span class="comment">//must:last check aginst with widthMeasureSpec</span></span><br><span class="line">         height = resolveSize(height, heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (offsetVerticalAxis) &#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                 <span class="keyword">final</span> View child = views[i];</span><br><span class="line">                 <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">                     <span class="keyword">final</span> LayoutParams params = (LayoutParams) child.getLayoutParams();</span><br><span class="line">                     <span class="keyword">final</span> <span class="keyword">int</span>[] rules = params.getRules(layoutDirection);</span><br><span class="line">                     <span class="keyword">if</span> (rules[CENTER_IN_PARENT] != <span class="number">0</span> || rules[CENTER_VERTICAL] != <span class="number">0</span>) &#123;</span><br><span class="line">                         centerVertical(child, params, height);</span><br><span class="line">                     &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rules[ALIGN_PARENT_BOTTOM] != <span class="number">0</span>) &#123;</span><br><span class="line">                         <span class="keyword">final</span> <span class="keyword">int</span> childHeight = child.getMeasuredHeight();</span><br><span class="line">                         params.mTop = height - mPaddingBottom - childHeight;</span><br><span class="line">                         params.mBottom = params.mTop + childHeight;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">     <span class="keyword">if</span> (horizontalGravity || verticalGravity) &#123;</span><br><span class="line">         <span class="keyword">final</span> Rect selfBounds = mSelfBounds;</span><br><span class="line">         selfBounds.set(mPaddingLeft, mPaddingTop, width - mPaddingRight,</span><br><span class="line">                 height - mPaddingBottom);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">final</span> Rect contentBounds = mContentBounds;</span><br><span class="line">         Gravity.apply(mGravity, right - left, bottom - top, selfBounds, contentBounds,</span><br><span class="line">                 layoutDirection);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">final</span> <span class="keyword">int</span> horizontalOffset = contentBounds.left - left;</span><br><span class="line">         <span class="keyword">final</span> <span class="keyword">int</span> verticalOffset = contentBounds.top - top;</span><br><span class="line">         <span class="keyword">if</span> (horizontalOffset != <span class="number">0</span> || verticalOffset != <span class="number">0</span>) &#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                 <span class="keyword">final</span> View child = views[i];</span><br><span class="line">                 <span class="keyword">if</span> (child.getVisibility() != GONE &amp;&amp; child != ignore) &#123;</span><br><span class="line">                     <span class="keyword">final</span> LayoutParams params = (LayoutParams) child.getLayoutParams();</span><br><span class="line">                     <span class="keyword">if</span> (horizontalGravity) &#123;</span><br><span class="line">                         params.mLeft += horizontalOffset;</span><br><span class="line">                         params.mRight += horizontalOffset;</span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="keyword">if</span> (verticalGravity) &#123;</span><br><span class="line">                         params.mTop += verticalOffset;</span><br><span class="line">                         params.mBottom += verticalOffset;</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (isLayoutRtl()) &#123;</span><br><span class="line">        <span class="comment">//.......................</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//must:finally set the width and height</span></span><br><span class="line">     setMeasuredDimension(width, height);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="onLayout-2"><a href="#onLayout-2" class="headerlink" title="onLayout"></a>onLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">simply layout every child by the values calculate in onMeasure,mLeft,mTop,mRight,mBottom</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> l, <span class="keyword">int</span> t, <span class="keyword">int</span> r, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//  The layout has actually already been performed and the positions</span></span><br><span class="line">        <span class="comment">//  cached.  Apply the cached values to the children.</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> count = getChildCount();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            View child = getChildAt(i);</span><br><span class="line">            <span class="keyword">if</span> (child.getVisibility() != GONE) &#123;</span><br><span class="line">                RelativeLayout.LayoutParams st =</span><br><span class="line">                        (RelativeLayout.LayoutParams) child.getLayoutParams();</span><br><span class="line">                child.layout(st.mLeft, st.mTop, st.mRight, st.mBottom);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="onDraw-2"><a href="#onDraw-2" class="headerlink" title="onDraw"></a>onDraw</h4><p>doNothing</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="Measure递归的起点"><a href="#Measure递归的起点" class="headerlink" title="Measure递归的起点"></a>Measure递归的起点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ViewRootImpl:performTraversals()-&gt;getRootMeasureSpec()-&gt;MeasureSpec.makeMeasureSpec()</span><br><span class="line">                                -&gt;performMeasure()-&gt;View:measure()</span><br></pre></td></tr></table></figure><h5 id="ViewRoorImpl-getRootMeasureSpec"><a href="#ViewRoorImpl-getRootMeasureSpec" class="headerlink" title="ViewRoorImpl:getRootMeasureSpec"></a>ViewRoorImpl:getRootMeasureSpec</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @param windowSize</span><br><span class="line"> *            The available width or height of the window</span><br><span class="line"> *</span><br><span class="line"> * @param rootDimension</span><br><span class="line"> *            The layout params for one dimension (width or height) of the</span><br><span class="line"> *            window.</span><br><span class="line"> *</span><br><span class="line"> * @return The measure spec to use to measure the root view.</span><br><span class="line"> */</span><br><span class="line">private static int getRootMeasureSpec(int windowSize, int rootDimension) &#123;</span><br><span class="line">    int measureSpec;</span><br><span class="line">    switch (rootDimension) &#123;</span><br><span class="line"></span><br><span class="line">    case ViewGroup.LayoutParams.MATCH_PARENT:</span><br><span class="line">        // Window can&apos;t resize. Force root view to be windowSize.</span><br><span class="line">        measureSpec = MeasureSpec.makeMeasureSpec(windowSize, MeasureSpec.EXACTLY);</span><br><span class="line">        break;</span><br><span class="line">    //省略...</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    return measureSpec;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="MeasureSpec-makeMeasureSpec"><a href="#MeasureSpec-makeMeasureSpec" class="headerlink" title="MeasureSpec:makeMeasureSpec"></a>MeasureSpec:makeMeasureSpec</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * Creates a measure specification based on the supplied size and mode.</span><br><span class="line">     *</span><br><span class="line">     * The mode must always be one of the following:</span><br><span class="line">     * &lt;ul&gt;</span><br><span class="line">     *  &lt;li&gt;&#123;@link android.view.View.MeasureSpec#UNSPECIFIED&#125;&lt;/li&gt;</span><br><span class="line">     *  &lt;li&gt;&#123;@link android.view.View.MeasureSpec#EXACTLY&#125;&lt;/li&gt;</span><br><span class="line">     *  &lt;li&gt;&#123;@link android.view.View.MeasureSpec#AT_MOST&#125;&lt;/li&gt;</span><br><span class="line">     * &lt;/ul&gt;</span><br><span class="line">     *</span><br><span class="line">     * &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On API level 17 and lower, makeMeasureSpec&apos;s</span><br><span class="line">     * implementation was such that the order of arguments did not matter</span><br><span class="line">     * and overflow in either value could impact the resulting MeasureSpec.</span><br><span class="line">     * &#123;@link android.widget.RelativeLayout&#125; was affected by this bug.</span><br><span class="line">     * Apps targeting API levels greater than 17 will get the fixed, more strict</span><br><span class="line">     * behavior.&lt;/p&gt;</span><br><span class="line">     *</span><br><span class="line">     * @param size the size of the measure specification</span><br><span class="line">     * @param mode the mode of the measure specification</span><br><span class="line">     * @return the measure specification based on size and mode</span><br><span class="line">     */</span><br><span class="line">    public static int makeMeasureSpec(int size, int mode) &#123;</span><br><span class="line">        if (sUseBrokenMakeMeasureSpec) &#123;</span><br><span class="line">            return size + mode;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return (size &amp; ~MODE_MASK) | (mode &amp; MODE_MASK);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="测量常用方法"><a href="#测量常用方法" class="headerlink" title="测量常用方法"></a>测量常用方法</h4><h5 id="第一步是获取MeasureSpec"><a href="#第一步是获取MeasureSpec" class="headerlink" title="第一步是获取MeasureSpec"></a>第一步是获取MeasureSpec</h5><p>布局的第一步是getMeasureSpec,然后是onMeasure(),然后………..</p><h6 id="让child去获取测量宽高"><a href="#让child去获取测量宽高" class="headerlink" title="让child去获取测量宽高"></a>让child去获取测量宽高</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ViewGroup:</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Does the hard part of measureChildren: figuring out the MeasureSpec to</span></span><br><span class="line"><span class="comment">     * pass to a particular child. This method figures out the right MeasureSpec</span></span><br><span class="line"><span class="comment">     * for one dimension (height or width) of one child view.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The goal is to combine information from our MeasureSpec with the</span></span><br><span class="line"><span class="comment">     * LayoutParams of the child to get the best possible results. For example,</span></span><br><span class="line"><span class="comment">     * if the this view knows its size (because its MeasureSpec has a mode of</span></span><br><span class="line"><span class="comment">     * EXACTLY), and the child has indicated in its LayoutParams that it wants</span></span><br><span class="line"><span class="comment">     * to be the same size as the parent, the parent should ask the child to</span></span><br><span class="line"><span class="comment">     * layout given an exact size.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> spec The requirements for this view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> padding The padding of this view for the current dimension and</span></span><br><span class="line"><span class="comment">     *        margins, if applicable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> childDimension How big the child wants to be in the current</span></span><br><span class="line"><span class="comment">     *        dimension</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a MeasureSpec integer for the child</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//parentSpec;lpadding like parent's padding + child's own margin;lp.width or lp.height</span></span><br><span class="line">    <span class="comment">// parentSpec and child's layoutParam result in childSpec </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getChildMeasureSpec</span><span class="params">(<span class="keyword">int</span> spec, <span class="keyword">int</span> padding, <span class="keyword">int</span> childDimension)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> specMode = MeasureSpec.getMode(spec);</span><br><span class="line">        <span class="keyword">int</span> specSize = MeasureSpec.getSize(spec);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> size = Math.max(<span class="number">0</span>, specSize - padding);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> resultSize = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> resultMode = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (specMode) &#123;</span><br><span class="line">        <span class="comment">// Parent has imposed an exact size on us</span></span><br><span class="line">            <span class="comment">//1.child know  exactly how big it wants,the result is exactly</span></span><br><span class="line">            <span class="comment">//2.other results influnce by its parent</span></span><br><span class="line">            <span class="comment">// except the parent is exactly and the child uses warp_content,the result is at_most</span></span><br><span class="line">        <span class="keyword">case</span> MeasureSpec.EXACTLY:</span><br><span class="line">            <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                resultSize = childDimension;</span><br><span class="line">                resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                <span class="comment">// Child wants to be our size. So be it.</span></span><br><span class="line">                resultSize = size;</span><br><span class="line">                resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">                <span class="comment">// Child wants to determine its own size. It can't be</span></span><br><span class="line">                <span class="comment">// bigger than us.</span></span><br><span class="line">                resultSize = size;</span><br><span class="line">                resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Parent has imposed a maximum size on us</span></span><br><span class="line">        <span class="keyword">case</span> MeasureSpec.AT_MOST:</span><br><span class="line">            <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// Child wants a specific size... so be it</span></span><br><span class="line">                resultSize = childDimension;</span><br><span class="line">                resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                <span class="comment">// Child wants to be our size, but our size is not fixed.</span></span><br><span class="line">                <span class="comment">// Constrain child to not be bigger than us.</span></span><br><span class="line">                resultSize = size;</span><br><span class="line">                resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">                <span class="comment">// Child wants to determine its own size. It can't be</span></span><br><span class="line">                <span class="comment">// bigger than us.</span></span><br><span class="line">                resultSize = size;</span><br><span class="line">                resultMode = MeasureSpec.AT_MOST;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Parent asked to see how big we want to be</span></span><br><span class="line">        <span class="keyword">case</span> MeasureSpec.UNSPECIFIED:</span><br><span class="line">            <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// Child wants a specific size... let him have it</span></span><br><span class="line">                resultSize = childDimension;</span><br><span class="line">                resultMode = MeasureSpec.EXACTLY;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                <span class="comment">// Child wants to be our size... find out how big it should</span></span><br><span class="line">                <span class="comment">// be</span></span><br><span class="line">                resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</span><br><span class="line">                resultMode = MeasureSpec.UNSPECIFIED;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</span><br><span class="line">                <span class="comment">// Child wants to determine its own size.... find out how</span></span><br><span class="line">                <span class="comment">// big it should be</span></span><br><span class="line">                resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</span><br><span class="line">                resultMode = MeasureSpec.UNSPECIFIED;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> MeasureSpec.makeMeasureSpec(resultSize, resultMode);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="和parent给的宽高信息进行综合考虑"><a href="#和parent给的宽高信息进行综合考虑" class="headerlink" title="和parent给的宽高信息进行综合考虑"></a>和parent给的宽高信息进行综合考虑</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//View:</span></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Utility to reconcile a desired size and state, with constraints imposed</span></span><br><span class="line"><span class="comment">   * by a MeasureSpec. Will take the desired size, unless a different size</span></span><br><span class="line"><span class="comment">   * is imposed by the constraints. The returned value is a compound integer,</span></span><br><span class="line"><span class="comment">   * with the resolved size in the &#123;<span class="doctag">@link</span> #MEASURED_SIZE_MASK&#125; bits and</span></span><br><span class="line"><span class="comment">   * optionally the bit &#123;<span class="doctag">@link</span> #MEASURED_STATE_TOO_SMALL&#125; set if the</span></span><br><span class="line"><span class="comment">   * resulting size is smaller than the size the view wants to be.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> size How big the view wants to be.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> measureSpec Constraints imposed by the parent.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> childMeasuredState Size information bit mask for the view's</span></span><br><span class="line"><span class="comment">   *                           children.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> Size information bit mask as defined by</span></span><br><span class="line"><span class="comment">   *         &#123;<span class="doctag">@link</span> #MEASURED_SIZE_MASK&#125; and</span></span><br><span class="line"><span class="comment">   *         &#123;<span class="doctag">@link</span> #MEASURED_STATE_TOO_SMALL&#125;.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="comment">//measuredSize , MeasureSpec from parent , 0</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">resolveSizeAndState</span><span class="params">(<span class="keyword">int</span> size, <span class="keyword">int</span> measureSpec, <span class="keyword">int</span> childMeasuredState)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> specMode = MeasureSpec.getMode(measureSpec);</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> specSize = MeasureSpec.getSize(measureSpec);</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> result;</span><br><span class="line">      <span class="keyword">switch</span> (specMode) &#123;</span><br><span class="line">          <span class="keyword">case</span> MeasureSpec.AT_MOST:</span><br><span class="line">              <span class="keyword">if</span> (specSize &lt; size) &#123;</span><br><span class="line">                  result = specSize | MEASURED_STATE_TOO_SMALL;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  result = size;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> MeasureSpec.EXACTLY:</span><br><span class="line">              result = specSize;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> MeasureSpec.UNSPECIFIED:</span><br><span class="line">          <span class="keyword">default</span>:</span><br><span class="line">              result = size;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result | (childMeasuredState &amp; MEASURED_STATE_MASK);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h6 id="生成最终的宽高信息"><a href="#生成最终的宽高信息" class="headerlink" title="生成最终的宽高信息"></a>生成最终的宽高信息</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//View:</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">      * Creates a measure specification based on the supplied size and mode.</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * The mode must always be one of the following:</span></span><br><span class="line"><span class="comment">      * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">      *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#UNSPECIFIED&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">      *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#EXACTLY&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">      *  &lt;li&gt;&#123;<span class="doctag">@link</span> android.view.View.MeasureSpec#AT_MOST&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">      * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On API level 17 and lower, makeMeasureSpec's</span></span><br><span class="line"><span class="comment">      * implementation was such that the order of arguments did not matter</span></span><br><span class="line"><span class="comment">      * and overflow in either value could impact the resulting MeasureSpec.</span></span><br><span class="line"><span class="comment">      * &#123;<span class="doctag">@link</span> android.widget.RelativeLayout&#125; was affected by this bug.</span></span><br><span class="line"><span class="comment">      * Apps targeting API levels greater than 17 will get the fixed, more strict</span></span><br><span class="line"><span class="comment">      * behavior.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> size the size of the measure specification</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> mode the mode of the measure specification</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span> the measure specification based on size and mode</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">makeMeasureSpec</span><span class="params">(<span class="keyword">int</span> size, <span class="keyword">int</span> mode)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (sUseBrokenMakeMeasureSpec) &#123;</span><br><span class="line">             <span class="keyword">return</span> size + mode;</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">return</span> (size &amp; ~MODE_MASK) | (mode &amp; MODE_MASK);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h6 id="通知影响的children重新测量"><a href="#通知影响的children重新测量" class="headerlink" title="通知影响的children重新测量"></a>通知影响的children重新测量</h6><h6 id="存储最终的测量宽高值"><a href="#存储最终的测量宽高值" class="headerlink" title="存储最终的测量宽高值"></a>存储最终的测量宽高值</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//View:  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * &lt;p&gt;This method must be called by &#123;<span class="doctag">@link</span> #onMeasure(int, int)&#125; to store the</span></span><br><span class="line"><span class="comment">   * measured width and measured height. Failing to do so will trigger an</span></span><br><span class="line"><span class="comment">   * exception at measurement time.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> measuredWidth The measured width of this view.  May be a complex</span></span><br><span class="line"><span class="comment">   * bit mask as defined by &#123;<span class="doctag">@link</span> #MEASURED_SIZE_MASK&#125; and</span></span><br><span class="line"><span class="comment">   * &#123;<span class="doctag">@link</span> #MEASURED_STATE_TOO_SMALL&#125;.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> measuredHeight The measured height of this view.  May be a complex</span></span><br><span class="line"><span class="comment">   * bit mask as defined by &#123;<span class="doctag">@link</span> #MEASURED_SIZE_MASK&#125; and</span></span><br><span class="line"><span class="comment">   * &#123;<span class="doctag">@link</span> #MEASURED_STATE_TOO_SMALL&#125;.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setMeasuredDimension</span><span class="params">(<span class="keyword">int</span> measuredWidth, <span class="keyword">int</span> measuredHeight)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">boolean</span> optical = isLayoutModeOptical(<span class="keyword">this</span>);</span><br><span class="line">      <span class="keyword">if</span> (optical != isLayoutModeOptical(mParent)) &#123;</span><br><span class="line">          Insets insets = getOpticalInsets();</span><br><span class="line">          <span class="keyword">int</span> opticalWidth  = insets.left + insets.right;</span><br><span class="line">          <span class="keyword">int</span> opticalHeight = insets.top  + insets.bottom;</span><br><span class="line"></span><br><span class="line">          measuredWidth  += optical ? opticalWidth  : -opticalWidth;</span><br><span class="line">          measuredHeight += optical ? opticalHeight : -opticalHeight;</span><br><span class="line">      &#125;</span><br><span class="line">      setMeasuredDimensionRaw(measuredWidth, measuredHeight);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="layout之前"><a href="#layout之前" class="headerlink" title="layout之前"></a>layout之前</h4><p>从getMeasureSpec到onMeasure，接下来是setFrame,然后才是onLayout,再是…..</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Assign a size and position to this view.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * This is called from layout.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> left Left position, relative to parent</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> top Top position, relative to parent</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> right Right position, relative to parent</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> bottom Bottom position, relative to parent</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> true if the new size and position are different than the</span></span><br><span class="line"><span class="comment">    *         previous ones</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@hide</span>&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">setFrame</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">boolean</span> changed = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (DBG) &#123;</span><br><span class="line">           Log.d(<span class="string">"View"</span>, <span class="keyword">this</span> + <span class="string">" View.setFrame("</span> + left + <span class="string">","</span> + top + <span class="string">","</span></span><br><span class="line">                   + right + <span class="string">","</span> + bottom + <span class="string">")"</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (mLeft != left || mRight != right || mTop != top || mBottom != bottom) &#123;</span><br><span class="line">           changed = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Remember our drawn bit</span></span><br><span class="line">           <span class="keyword">int</span> drawn = mPrivateFlags &amp; PFLAG_DRAWN;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">int</span> oldWidth = mRight - mLeft;</span><br><span class="line">           <span class="keyword">int</span> oldHeight = mBottom - mTop;</span><br><span class="line">           <span class="keyword">int</span> newWidth = right - left;</span><br><span class="line">           <span class="keyword">int</span> newHeight = bottom - top;</span><br><span class="line">         <span class="comment">//compare current size and the pre one ,to decide whether to notify onSizeChange</span></span><br><span class="line">           <span class="keyword">boolean</span> sizeChanged = (newWidth != oldWidth) || (newHeight != oldHeight);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Invalidate our old position</span></span><br><span class="line">           invalidate(sizeChanged);</span><br><span class="line"></span><br><span class="line">           mLeft = left;</span><br><span class="line">           mTop = top;</span><br><span class="line">           mRight = right;</span><br><span class="line">           mBottom = bottom;</span><br><span class="line">           mRenderNode.setLeftTopRightBottom(mLeft, mTop, mRight, mBottom);</span><br><span class="line"></span><br><span class="line">           mPrivateFlags |= PFLAG_HAS_BOUNDS;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (sizeChanged) &#123;</span><br><span class="line">               sizeChange(newWidth, newHeight, oldWidth, oldHeight);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> ((mViewFlags &amp; VISIBILITY_MASK) == VISIBLE || mGhostView != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="comment">// If we are visible, force the DRAWN bit to on so that</span></span><br><span class="line">               <span class="comment">// this invalidate will go through (at least to our parent).</span></span><br><span class="line">               <span class="comment">// This is because someone may have invalidated this view</span></span><br><span class="line">               <span class="comment">// before this call to setFrame came in, thereby clearing</span></span><br><span class="line">               <span class="comment">// the DRAWN bit.</span></span><br><span class="line">               mPrivateFlags |= PFLAG_DRAWN;</span><br><span class="line">               invalidate(sizeChanged);</span><br><span class="line">               <span class="comment">// parent display list may need to be recreated based on a change in the bounds</span></span><br><span class="line">               <span class="comment">// of any child</span></span><br><span class="line">               invalidateParentCaches();</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Reset drawn bit to original value (invalidate turns it off)</span></span><br><span class="line">           mPrivateFlags |= drawn;</span><br><span class="line"></span><br><span class="line">           mBackgroundSizeChanged = <span class="keyword">true</span>;</span><br><span class="line">           <span class="keyword">if</span> (mForegroundInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">               mForegroundInfo.mBoundsChanged = <span class="keyword">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           notifySubtreeAccessibilityStateChangedIfNeeded();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> changed;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="Draw与onDraw"><a href="#Draw与onDraw" class="headerlink" title="Draw与onDraw"></a>Draw与onDraw</h4><p>Draw 是用来drawBackground and drawForeground(eg:滚动条)的</p><p>onDraw是用来drawContent的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;LinearLayout&quot;&gt;&lt;a href=&quot;#LinearLayout&quot; class=&quot;headerlink&quot; title=&quot;LinearLayout&quot;&gt;&lt;/a&gt;LinearLayout&lt;/h3&gt;&lt;h4 id=&quot;onMeasure&quot;&gt;&lt;a href=&quot;#onMe
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>Animation 源码解读篇</title>
    <link href="http://jinjian.info/2017/08/07/Animation%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>http://jinjian.info/2017/08/07/Animation源码解读/</id>
    <published>2017-08-06T16:00:00.000Z</published>
    <updated>2017-12-23T19:25:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h2><h3 id="uml类图"><a href="#uml类图" class="headerlink" title="uml类图"></a>uml类图</h3><h4 id="关于animation"><a href="#关于animation" class="headerlink" title="关于animation"></a>关于animation</h4><p><img src="/images/Animation_struct.png" alt="Animation_struct"></p><h4 id="关于animator"><a href="#关于animator" class="headerlink" title="关于animator"></a>关于animator</h4><p><img src="/images/Animation_Animator.png" alt="Animation_Animator"></p><h2 id="设计思想"><a href="#设计思想" class="headerlink" title="设计思想"></a>设计思想</h2><h3 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h3><h4 id="创建流程"><a href="#创建流程" class="headerlink" title="创建流程"></a>创建流程</h4><h5 id="1-AnimationUtils的加载流程"><a href="#1-AnimationUtils的加载流程" class="headerlink" title="1.AnimationUtils的加载流程"></a>1.AnimationUtils的加载流程</h5><h6 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h6><p>  package android.view.animation;</p><p><img src="/images/Animation_Flow.png" alt="Animation_Flow"></p><h6 id="AnimationUtil-ceateAminationFromXml"><a href="#AnimationUtil-ceateAminationFromXml" class="headerlink" title="AnimationUtil:ceateAminationFromXml"></a>AnimationUtil:ceateAminationFromXml</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Animation <span class="title">createAnimationFromXml</span><span class="params">(Context c, XmlPullParser parser,</span></span></span><br><span class="line"><span class="function"><span class="params">        AnimationSet parent, AttributeSet attrs)</span> <span class="keyword">throws</span> XmlPullParserException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    Animation anim = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Make sure we are on a start tag.</span></span><br><span class="line">    <span class="keyword">int</span> type;</span><br><span class="line">    <span class="keyword">int</span> depth = parser.getDepth();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (((type=parser.next()) != XmlPullParser.END_TAG || parser.getDepth() &gt; depth)</span><br><span class="line">           &amp;&amp; type != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (type != XmlPullParser.START_TAG) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String  name = parser.getName();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (name.equals(<span class="string">"set"</span>)) &#123;</span><br><span class="line">            anim = <span class="keyword">new</span> AnimationSet(c, attrs);</span><br><span class="line">            createAnimationFromXml(c, parser, (AnimationSet)anim, attrs);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"alpha"</span>)) &#123;</span><br><span class="line">            anim = <span class="keyword">new</span> AlphaAnimation(c, attrs);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"scale"</span>)) &#123;</span><br><span class="line">            anim = <span class="keyword">new</span> ScaleAnimation(c, attrs);</span><br><span class="line">        &#125;  <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"rotate"</span>)) &#123;</span><br><span class="line">            anim = <span class="keyword">new</span> RotateAnimation(c, attrs);</span><br><span class="line">        &#125;  <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">"translate"</span>)) &#123;</span><br><span class="line">            anim = <span class="keyword">new</span> TranslateAnimation(c, attrs);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Unknown animation name: "</span> + parser.getName());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">            parent.addAnimation(anim);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> anim;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-layout的加载流程"><a href="#2-layout的加载流程" class="headerlink" title="2.layout的加载流程"></a>2.layout的加载流程</h5><h6 id="序列图-1"><a href="#序列图-1" class="headerlink" title="序列图"></a>序列图</h6><p>关键词：递归，解耦</p><p><img src="/images/Animation_LayoutInflater.png" alt="Animation_LayoutInflater"></p><h6 id="LayoutInflater-createView"><a href="#LayoutInflater-createView" class="headerlink" title="LayoutInflater:createView()"></a>LayoutInflater:createView()</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Low-level function for instantiating a view by name. This attempts to</span></span><br><span class="line"><span class="comment">  * instantiate a view class of the given &lt;var&gt;name&lt;/var&gt; found in this</span></span><br><span class="line"><span class="comment">  * LayoutInflater's ClassLoader.</span></span><br><span class="line"><span class="comment">  * </span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * There are two things that can happen in an error case: either the</span></span><br><span class="line"><span class="comment">  * exception describing the error will be thrown, or a null will be</span></span><br><span class="line"><span class="comment">  * returned. You must deal with both possibilities -- the former will happen</span></span><br><span class="line"><span class="comment">  * the first time createView() is called for a class of a particular name,</span></span><br><span class="line"><span class="comment">  * the latter every time there-after for that class name.</span></span><br><span class="line"><span class="comment">  * </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> name The full name of the class to be instantiated.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> attrs The XML attributes supplied for this instance.</span></span><br><span class="line"><span class="comment">  * </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> View The newly instantiated view, or null.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> View <span class="title">createView</span><span class="params">(String name, String prefix, AttributeSet attrs)</span></span></span><br><span class="line"><span class="function">         <span class="keyword">throws</span> ClassNotFoundException, InflateException </span>&#123;</span><br><span class="line">     Constructor&lt;? extends View&gt; constructor = sConstructorMap.get(name);</span><br><span class="line">     Class&lt;? extends View&gt; clazz = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         Trace.traceBegin(Trace.TRACE_TAG_VIEW, name);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (constructor == <span class="keyword">null</span>) &#123;</span><br><span class="line">             <span class="comment">// Class not found in the cache, see if it's real, and try to add it</span></span><br><span class="line">             clazz = mContext.getClassLoader().loadClass(</span><br><span class="line">                     prefix != <span class="keyword">null</span> ? (prefix + name) : name).asSubclass(View.class);</span><br><span class="line">             </span><br><span class="line">             <span class="keyword">if</span> (mFilter != <span class="keyword">null</span> &amp;&amp; clazz != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 <span class="keyword">boolean</span> allowed = mFilter.onLoadClass(clazz);</span><br><span class="line">                 <span class="keyword">if</span> (!allowed) &#123;</span><br><span class="line">                     failNotAllowed(name, prefix, attrs);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             constructor = clazz.getConstructor(mConstructorSignature);</span><br><span class="line">             constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">             sConstructorMap.put(name, constructor);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="comment">// If we have a filter, apply it to cached constructor</span></span><br><span class="line">             <span class="keyword">if</span> (mFilter != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 <span class="comment">// Have we seen this name before?</span></span><br><span class="line">                 Boolean allowedState = mFilterMap.get(name);</span><br><span class="line">                 <span class="keyword">if</span> (allowedState == <span class="keyword">null</span>) &#123;</span><br><span class="line">                     <span class="comment">// New class -- remember whether it is allowed</span></span><br><span class="line">                     clazz = mContext.getClassLoader().loadClass(</span><br><span class="line">                             prefix != <span class="keyword">null</span> ? (prefix + name) : name).asSubclass(View.class);</span><br><span class="line">                     </span><br><span class="line">                     <span class="keyword">boolean</span> allowed = clazz != <span class="keyword">null</span> &amp;&amp; mFilter.onLoadClass(clazz);</span><br><span class="line">                     mFilterMap.put(name, allowed);</span><br><span class="line">                     <span class="keyword">if</span> (!allowed) &#123;</span><br><span class="line">                         failNotAllowed(name, prefix, attrs);</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125; <span class="keyword">else</span> <span class="keyword">if</span> (allowedState.equals(Boolean.FALSE)) &#123;</span><br><span class="line">                     failNotAllowed(name, prefix, attrs);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         Object[] args = mConstructorArgs;</span><br><span class="line">         args[<span class="number">1</span>] = attrs;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">final</span> View view = constructor.newInstance(args);</span><br><span class="line">         <span class="keyword">if</span> (view <span class="keyword">instanceof</span> ViewStub) &#123;</span><br><span class="line">             <span class="comment">// Use the same context when inflating ViewStub later.</span></span><br><span class="line">             <span class="keyword">final</span> ViewStub viewStub = (ViewStub) view;</span><br><span class="line">             viewStub.setLayoutInflater(cloneInContext((Context) args[<span class="number">0</span>]));</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> view;</span><br><span class="line"></span><br><span class="line">     &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">         InflateException ie = <span class="keyword">new</span> InflateException(attrs.getPositionDescription()</span><br><span class="line">                 + <span class="string">": Error inflating class "</span></span><br><span class="line">                 + (prefix != <span class="keyword">null</span> ? (prefix + name) : name));</span><br><span class="line">         ie.initCause(e);</span><br><span class="line">         <span class="keyword">throw</span> ie;</span><br><span class="line"></span><br><span class="line">     &#125; <span class="keyword">catch</span> (ClassCastException e) &#123;</span><br><span class="line">         <span class="comment">// If loaded class is not a View subclass</span></span><br><span class="line">         InflateException ie = <span class="keyword">new</span> InflateException(attrs.getPositionDescription()</span><br><span class="line">                 + <span class="string">": Class is not a View "</span></span><br><span class="line">                 + (prefix != <span class="keyword">null</span> ? (prefix + name) : name));</span><br><span class="line">         ie.initCause(e);</span><br><span class="line">         <span class="keyword">throw</span> ie;</span><br><span class="line">     &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">         <span class="comment">// If loadClass fails, we should propagate the exception.</span></span><br><span class="line">         <span class="keyword">throw</span> e;</span><br><span class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">         InflateException ie = <span class="keyword">new</span> InflateException(attrs.getPositionDescription()</span><br><span class="line">                 + <span class="string">": Error inflating class "</span></span><br><span class="line">                 + (clazz == <span class="keyword">null</span> ? <span class="string">"&lt;unknown&gt;"</span> : clazz.getName()));</span><br><span class="line">         ie.initCause(e);</span><br><span class="line">         <span class="keyword">throw</span> ie;</span><br><span class="line">     &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">         Trace.traceEnd(Trace.TRACE_TAG_VIEW);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="3-其他找资源"><a href="#3-其他找资源" class="headerlink" title="3.其他找资源"></a>3.其他找资源</h5><p>Drawable,Dimens,String,Assert……………..见[TODO 20170729]</p><h4 id="调用流程"><a href="#调用流程" class="headerlink" title="调用流程"></a>调用流程</h4><h5 id="1-animation"><a href="#1-animation" class="headerlink" title="1.animation"></a>1.animation</h5><p><img src="/images/Aniamtion_Action.png" alt="Aniamtion_Action"></p><p>attachInfo的生成流程 见[TODO 20170730]</p><h5 id="2-View-getTransformation"><a href="#2-View-getTransformation" class="headerlink" title="2.View:getTransformation()"></a>2.View:getTransformation()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Gets the transformation to apply at a specified point in time. Implementations of this</span></span><br><span class="line"><span class="comment">  * method should always replace the specified Transformation or document they are doing</span></span><br><span class="line"><span class="comment">  * otherwise.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> currentTime Where we are in the animation. This is wall clock time.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> outTransformation A transformation object that is provided by the</span></span><br><span class="line"><span class="comment">  *        caller and will be filled in by the animation.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> True if the animation is still running</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">getTransformation</span><span class="params">(<span class="keyword">long</span> currentTime, Transformation outTransformation)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (mStartTime == -<span class="number">1</span>) &#123;</span><br><span class="line">         mStartTime = currentTime;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">long</span> startOffset = getStartOffset();</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">long</span> duration = mDuration;</span><br><span class="line">     <span class="keyword">float</span> normalizedTime;</span><br><span class="line">     <span class="keyword">if</span> (duration != <span class="number">0</span>) &#123;</span><br><span class="line">         normalizedTime = ((<span class="keyword">float</span>) (currentTime - (mStartTime + startOffset))) /</span><br><span class="line">                 (<span class="keyword">float</span>) duration;</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="comment">// time is a step-change with a zero duration</span></span><br><span class="line">         normalizedTime = currentTime &lt; mStartTime ? <span class="number">0.0f</span> : <span class="number">1.0f</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">boolean</span> expired = normalizedTime &gt;= <span class="number">1.0f</span>;</span><br><span class="line">     mMore = !expired;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (!mFillEnabled) normalizedTime = Math.max(Math.min(normalizedTime, <span class="number">1.0f</span>), <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> ((normalizedTime &gt;= <span class="number">0.0f</span> || mFillBefore) &amp;&amp; (normalizedTime &lt;= <span class="number">1.0f</span> || mFillAfter)) &#123;</span><br><span class="line">         <span class="keyword">if</span> (!mStarted) &#123;</span><br><span class="line">             fireAnimationStart();</span><br><span class="line">             mStarted = <span class="keyword">true</span>;</span><br><span class="line">             <span class="keyword">if</span> (USE_CLOSEGUARD) &#123;</span><br><span class="line">                 guard.open(<span class="string">"cancel or detach or getTransformation"</span>);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (mFillEnabled) normalizedTime = Math.max(Math.min(normalizedTime, <span class="number">1.0f</span>), <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (mCycleFlip) &#123;</span><br><span class="line">             normalizedTime = <span class="number">1.0f</span> - normalizedTime;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">final</span> <span class="keyword">float</span> interpolatedTime = mInterpolator.getInterpolation(normalizedTime);</span><br><span class="line">         applyTransformation(interpolatedTime, outTransformation);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (expired) &#123;</span><br><span class="line">         <span class="keyword">if</span> (mRepeatCount == mRepeated) &#123;</span><br><span class="line">             <span class="keyword">if</span> (!mEnded) &#123;</span><br><span class="line">                 mEnded = <span class="keyword">true</span>;</span><br><span class="line">                 guard.close();</span><br><span class="line">                 fireAnimationEnd();</span><br><span class="line">             &#125;</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">if</span> (mRepeatCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                 mRepeated++;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             <span class="keyword">if</span> (mRepeatMode == REVERSE) &#123;</span><br><span class="line">                 mCycleFlip = !mCycleFlip;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             mStartTime = -<span class="number">1</span>;</span><br><span class="line">             mMore = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">             fireAnimationRepeat();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (!mMore &amp;&amp; mOneMoreTime) &#123;</span><br><span class="line">         mOneMoreTime = <span class="keyword">false</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> mMore;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="Animator"><a href="#Animator" class="headerlink" title="Animator"></a>Animator</h3><h4 id="调用流程-1"><a href="#调用流程-1" class="headerlink" title="调用流程"></a>调用流程</h4><h5 id="1-animator"><a href="#1-animator" class="headerlink" title="1.animator"></a>1.animator</h5><h6 id="create"><a href="#create" class="headerlink" title="create"></a>create</h6><p><img src="/images/Animation_AnimatorCreate.png" alt="Animation_AnimatorCreate"></p><h6 id="start"><a href="#start" class="headerlink" title="start"></a>start</h6><p><img src="/images/Animation_AnimatorStart.png" alt="Animation_AnimatorStart"></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>TODO [20170812 <a href="http://blog.csdn.net/github_35180164/article/details/51814279" target="_blank" rel="noopener">http://blog.csdn.net/github_35180164/article/details/51814279</a>]<br>其他资源 Drawable,Dimens,String,Assert……………..见[TODO 20170729]<br>attachInfo的生成流程 见[TODO 20170730]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;代码结构&quot;&gt;&lt;a href=&quot;#代码结构&quot; class=&quot;headerlink&quot; title=&quot;代码结构&quot;&gt;&lt;/a&gt;代码结构&lt;/h2&gt;&lt;h3 id=&quot;uml类图&quot;&gt;&lt;a href=&quot;#uml类图&quot; class=&quot;headerlink&quot; title=&quot;uml类图&quot;&gt;
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
  <entry>
    <title>TextView 源码解读篇</title>
    <link href="http://jinjian.info/2017/08/06/TextView%20%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%E7%AF%87/"/>
    <id>http://jinjian.info/2017/08/06/TextView 源码解读篇/</id>
    <published>2017-08-05T16:00:00.000Z</published>
    <updated>2017-12-23T19:33:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="OverView"><a href="#OverView" class="headerlink" title="OverView"></a>OverView</h2><p>继承关系</p><p><img src="/images/TextView_OverView.png" alt="TextView_OverView"></p><h2 id="onMeasure"><a href="#onMeasure" class="headerlink" title="onMeasure"></a>onMeasure</h2><h3 id="调用流程"><a href="#调用流程" class="headerlink" title="调用流程"></a>调用流程</h3><h4 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h4><p><img src="/Users/jinsan/Documents/SequenceDiagram1.png" alt="SequenceDiagram1"></p><h3 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h3><h3 id="关于源码"><a href="#关于源码" class="headerlink" title="关于源码"></a>关于源码</h3><h4 id="onMeasure-1"><a href="#onMeasure-1" class="headerlink" title="onMeasure"></a>onMeasure</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line"><span class="comment">//get the width and height from parent(decide by parent's layoutParam and view's layoutParam )</span></span><br><span class="line">        <span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class="line">        <span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class="line">        <span class="keyword">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">        <span class="keyword">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> width;</span><br><span class="line">        <span class="keyword">int</span> height;</span><br><span class="line"></span><br><span class="line">        BoringLayout.Metrics boring = UNKNOWN_BORING;</span><br><span class="line">        BoringLayout.Metrics hintBoring = UNKNOWN_BORING;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//get TextDirectionHeuristic(default:LTR)</span></span><br><span class="line">        <span class="keyword">if</span> (mTextDir == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mTextDir = getTextDirectionHeuristic();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> des = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">boolean</span> fromexisting = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (widthMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            <span class="comment">// Parent has told us how big to be. So be it.</span></span><br><span class="line">            width = widthSize;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (mLayout != <span class="keyword">null</span> &amp;&amp; mEllipsize == <span class="keyword">null</span>) &#123;</span><br><span class="line">              <span class="comment">//desired(if all of lineEnd is not '\n' , marks it as singleLine and return -1;or renture the max of line witdh)</span></span><br><span class="line">                des = desired(mLayout);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//singleLine</span></span><br><span class="line">            <span class="keyword">if</span> (des &lt; <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="comment">//input texts paint direction fontmetrics,if it is singLine return the width of given tex and metrics</span></span><br><span class="line">                boring = BoringLayout.isBoring(mTransformed, mTextPaint, mTextDir, mBoring);</span><br><span class="line">                <span class="keyword">if</span> (boring != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mBoring = boring;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                fromexisting = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (boring == <span class="keyword">null</span> || boring == UNKNOWN_BORING) &#123;</span><br><span class="line">              <span class="comment">//not SingleLine</span></span><br><span class="line">                <span class="keyword">if</span> (des &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="comment">//find the max width of lines,just from the source of  texts</span></span><br><span class="line">                    des = (<span class="keyword">int</span>) Math.ceil(Layout.getDesiredWidth(mTransformed, mTextPaint));</span><br><span class="line">                &#125;</span><br><span class="line">                width = des;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                width = boring.width;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//-------from text---------above has the width wether from boringLayout or from getDesiredWidth----</span></span><br><span class="line">            <span class="comment">//compare with the drawable width</span></span><br><span class="line">            <span class="keyword">final</span> Drawables dr = mDrawables;</span><br><span class="line">            <span class="keyword">if</span> (dr != <span class="keyword">null</span>) &#123;</span><br><span class="line">              <span class="comment">//if drawableTop or drawableBottom is wider than texts</span></span><br><span class="line">                width = Math.max(width, dr.mDrawableWidthTop);</span><br><span class="line">                width = Math.max(width, dr.mDrawableWidthBottom);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//--------from drawable ---------above compare width with drawable ---------------</span></span><br><span class="line">            <span class="comment">//hint width</span></span><br><span class="line">            <span class="keyword">if</span> (mHint != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> hintDes = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> hintWidth;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (mHintLayout != <span class="keyword">null</span> &amp;&amp; mEllipsize == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    hintDes = desired(mHintLayout);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (hintDes &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    hintBoring = BoringLayout.isBoring(mHint, mTextPaint, mTextDir, mHintBoring);</span><br><span class="line">                    <span class="keyword">if</span> (hintBoring != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mHintBoring = hintBoring;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (hintBoring == <span class="keyword">null</span> || hintBoring == UNKNOWN_BORING) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (hintDes &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        hintDes = (<span class="keyword">int</span>) Math.ceil(Layout.getDesiredWidth(mHint, mTextPaint));</span><br><span class="line">                    &#125;</span><br><span class="line">                    hintWidth = hintDes;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    hintWidth = hintBoring.width;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (hintWidth &gt; width) &#123;</span><br><span class="line">                    width = hintWidth;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//-------from hinttext-------------------above compare width with hinttext same process as text---</span></span><br><span class="line">            width += getCompoundPaddingLeft() + getCompoundPaddingRight();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//ems limit</span></span><br><span class="line">            <span class="keyword">if</span> (mMaxWidthMode == EMS) &#123;</span><br><span class="line">                <span class="comment">//I don't know why to compare the width with getLineHeight()</span></span><br><span class="line">                width = Math.min(width, mMaxWidth * getLineHeight());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                width = Math.min(width, mMaxWidth);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mMinWidthMode == EMS) &#123;</span><br><span class="line">                width = Math.max(width, mMinWidth * getLineHeight());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                width = Math.max(width, mMinWidth);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//----------from ems----------------above compare width with ems value -----------------</span></span><br><span class="line">            <span class="comment">// Check against our minimum width</span></span><br><span class="line">            width = Math.max(width, getSuggestedMinimumWidth());</span><br><span class="line"><span class="comment">//------------from backgourd ---------above compare width with background width----</span></span><br><span class="line">            <span class="keyword">if</span> (widthMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">                width = Math.min(widthSize, width);</span><br><span class="line">            &#125;</span><br><span class="line"> <span class="comment">// -----from parent width -------------above compare width with parent width </span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> want = width - getCompoundPaddingLeft() - getCompoundPaddingRight();</span><br><span class="line">        <span class="keyword">int</span> unpaddedWidth = want;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mHorizontallyScrolling) want = VERY_WIDE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> hintWant = want;</span><br><span class="line">        <span class="keyword">int</span> hintWidth = (mHintLayout == <span class="keyword">null</span>) ? hintWant : mHintLayout.getWidth();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mLayout == <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="comment">// :here to find the right layout eg:staticLayout ,dynamicLayout or boringLayout</span></span><br><span class="line">          <span class="comment">// process:makeNewLayout-&gt;makeSingleLayout</span></span><br><span class="line">            makeNewLayout(want, hintWant, boring, hintBoring,</span><br><span class="line">                          width - getCompoundPaddingLeft() - getCompoundPaddingRight(), <span class="keyword">false</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> layoutChanged = (mLayout.getWidth() != want) ||</span><br><span class="line">                    (hintWidth != hintWant) ||</span><br><span class="line">                    (mLayout.getEllipsizedWidth() !=</span><br><span class="line">                            width - getCompoundPaddingLeft() - getCompoundPaddingRight());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> widthChanged = (mHint == <span class="keyword">null</span>) &amp;&amp;</span><br><span class="line">                    (mEllipsize == <span class="keyword">null</span>) &amp;&amp;</span><br><span class="line">                    (want &gt; mLayout.getWidth()) &amp;&amp;</span><br><span class="line">                    (mLayout <span class="keyword">instanceof</span> BoringLayout || (fromexisting &amp;&amp; des &gt;= <span class="number">0</span> &amp;&amp; des &lt;= want));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> maximumChanged = (mMaxMode != mOldMaxMode) || (mMaximum != mOldMaximum);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (layoutChanged || maximumChanged) &#123;</span><br><span class="line">              <span class="comment">//if layoutChanged or maxumunChanged</span></span><br><span class="line">                <span class="keyword">if</span> (!maximumChanged &amp;&amp; widthChanged) &#123;</span><br><span class="line">                  <span class="comment">//if only widthChanged just incerease</span></span><br><span class="line">                    mLayout.increaseWidthTo(want);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="comment">//recongnize it as new one </span></span><br><span class="line">                    makeNewLayout(want, hintWant, boring, hintBoring,</span><br><span class="line">                            width - getCompoundPaddingLeft() - getCompoundPaddingRight(), <span class="keyword">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Nothing has changed</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//---------------------------------------------------height start ------------------</span></span><br><span class="line">        <span class="keyword">if</span> (heightMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            <span class="comment">// Parent has told us how big to be. So be it.</span></span><br><span class="line">            height = heightSize;</span><br><span class="line">            mDesiredHeightAtMeasure = -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//condition:hintHeight,textHeight,MaxLine,MinLine.drawableLeft and drawableRight;</span></span><br><span class="line">          <span class="comment">//the desired height contains the padHeight </span></span><br><span class="line">            <span class="keyword">int</span> desired = getDesiredHeight();</span><br><span class="line"></span><br><span class="line">            height = desired;</span><br><span class="line">            mDesiredHeightAtMeasure = desired;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (heightMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">                height = Math.min(desired, heightSize);</span><br><span class="line">            &#125;</span><br><span class="line">          <span class="comment">//---from parent height ------compare  height with parent height------------</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//unpaddedHeight wheter the totalHeight -padding or maxLineHeight(in MaxMode == Lines) </span></span><br><span class="line">        <span class="keyword">int</span> unpaddedHeight = height - getCompoundPaddingTop() - getCompoundPaddingBottom();</span><br><span class="line">        <span class="keyword">if</span> (mMaxMode == LINES &amp;&amp; mLayout.getLineCount() &gt; mMaximum) &#123;</span><br><span class="line">            unpaddedHeight = Math.min(unpaddedHeight, mLayout.getLineTop(mMaximum));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * We didn't let makeNewLayout() register to bring the cursor into view,</span></span><br><span class="line"><span class="comment">         * so do it here if there is any possibility that it is needed.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">      <span class="comment">//by setMovementMethod textView could scroll,if space is not enough </span></span><br><span class="line">        <span class="keyword">if</span> (mMovement != <span class="keyword">null</span> ||</span><br><span class="line">            mLayout.getWidth() &gt; unpaddedWidth ||</span><br><span class="line">            mLayout.getHeight() &gt; unpaddedHeight) &#123;</span><br><span class="line">            registerForPreDraw();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            scrollTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//set the final values </span></span><br><span class="line">        setMeasuredDimension(width, height);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="makeNewLayout"><a href="#makeNewLayout" class="headerlink" title="makeNewLayout"></a>makeNewLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The width passed in is now the desired layout width,</span></span><br><span class="line"><span class="comment"> * not the full view width with padding.</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@hide</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">makeNewLayout</span><span class="params">(<span class="keyword">int</span> wantWidth, <span class="keyword">int</span> hintWidth,</span></span></span><br><span class="line"><span class="function"><span class="params">                             BoringLayout.Metrics boring,</span></span></span><br><span class="line"><span class="function"><span class="params">                             BoringLayout.Metrics hintBoring,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">int</span> ellipsisWidth, <span class="keyword">boolean</span> bringIntoView)</span> </span>&#123;</span><br><span class="line">    stopMarquee();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update "old" cached values</span></span><br><span class="line">    mOldMaximum = mMaximum;</span><br><span class="line">    mOldMaxMode = mMaxMode;</span><br><span class="line"></span><br><span class="line">    mHighlightPathBogus = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (wantWidth &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        wantWidth = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (hintWidth &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        hintWidth = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Layout.Alignment alignment = getLayoutAlignment();</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> testDirChange = mSingleLine &amp;&amp; mLayout != <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">        (alignment == Layout.Alignment.ALIGN_NORMAL ||</span><br><span class="line">         alignment == Layout.Alignment.ALIGN_OPPOSITE);</span><br><span class="line">    <span class="keyword">int</span> oldDir = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (testDirChange) oldDir = mLayout.getParagraphDirection(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">boolean</span> shouldEllipsize = mEllipsize != <span class="keyword">null</span> &amp;&amp; getKeyListener() == <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> switchEllipsize = mEllipsize == TruncateAt.MARQUEE &amp;&amp;</span><br><span class="line">            mMarqueeFadeMode != MARQUEE_FADE_NORMAL;</span><br><span class="line">    TruncateAt effectiveEllipsize = mEllipsize;</span><br><span class="line">    <span class="keyword">if</span> (mEllipsize == TruncateAt.MARQUEE &amp;&amp;</span><br><span class="line">            mMarqueeFadeMode == MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS) &#123;</span><br><span class="line">        effectiveEllipsize = TruncateAt.END_SMALL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mTextDir == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mTextDir = getTextDirectionHeuristic();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mLayout = makeSingleLayout(wantWidth, boring, ellipsisWidth, alignment, shouldEllipsize,</span><br><span class="line">            effectiveEllipsize, effectiveEllipsize == mEllipsize);</span><br><span class="line">    <span class="keyword">if</span> (switchEllipsize) &#123;</span><br><span class="line">        TruncateAt oppositeEllipsize = effectiveEllipsize == TruncateAt.MARQUEE ?</span><br><span class="line">                TruncateAt.END : TruncateAt.MARQUEE;</span><br><span class="line">        mSavedMarqueeModeLayout = makeSingleLayout(wantWidth, boring, ellipsisWidth, alignment,</span><br><span class="line">                shouldEllipsize, oppositeEllipsize, effectiveEllipsize != mEllipsize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    shouldEllipsize = mEllipsize != <span class="keyword">null</span>;</span><br><span class="line">    mHintLayout = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mHint != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (shouldEllipsize) hintWidth = wantWidth;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (hintBoring == UNKNOWN_BORING) &#123;</span><br><span class="line">            hintBoring = BoringLayout.isBoring(mHint, mTextPaint, mTextDir,</span><br><span class="line">                                               mHintBoring);</span><br><span class="line">            <span class="keyword">if</span> (hintBoring != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mHintBoring = hintBoring;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (hintBoring != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hintBoring.width &lt;= hintWidth &amp;&amp;</span><br><span class="line">                (!shouldEllipsize || hintBoring.width &lt;= ellipsisWidth)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mSavedHintLayout != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mHintLayout = mSavedHintLayout.</span><br><span class="line">                            replaceOrMake(mHint, mTextPaint,</span><br><span class="line">                            hintWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                            hintBoring, mIncludePad);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mHintLayout = BoringLayout.make(mHint, mTextPaint,</span><br><span class="line">                            hintWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                            hintBoring, mIncludePad);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                mSavedHintLayout = (BoringLayout) mHintLayout;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shouldEllipsize &amp;&amp; hintBoring.width &lt;= hintWidth) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mSavedHintLayout != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mHintLayout = mSavedHintLayout.</span><br><span class="line">                            replaceOrMake(mHint, mTextPaint,</span><br><span class="line">                            hintWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                            hintBoring, mIncludePad, mEllipsize,</span><br><span class="line">                            ellipsisWidth);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mHintLayout = BoringLayout.make(mHint, mTextPaint,</span><br><span class="line">                            hintWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                            hintBoring, mIncludePad, mEllipsize,</span><br><span class="line">                            ellipsisWidth);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> code duplication with makeSingleLayout()</span></span><br><span class="line">        <span class="keyword">if</span> (mHintLayout == <span class="keyword">null</span>) &#123;</span><br><span class="line">            StaticLayout.Builder builder = StaticLayout.Builder.obtain(mHint, <span class="number">0</span>,</span><br><span class="line">                    mHint.length(), mTextPaint, hintWidth)</span><br><span class="line">                    .setAlignment(alignment)</span><br><span class="line">                    .setTextDirection(mTextDir)</span><br><span class="line">                    .setLineSpacing(mSpacingAdd, mSpacingMult)</span><br><span class="line">                    .setIncludePad(mIncludePad)</span><br><span class="line">                    .setBreakStrategy(mBreakStrategy)</span><br><span class="line">                    .setHyphenationFrequency(mHyphenationFrequency);</span><br><span class="line">            <span class="keyword">if</span> (shouldEllipsize) &#123;</span><br><span class="line">                builder.setEllipsize(mEllipsize)</span><br><span class="line">                        .setEllipsizedWidth(ellipsisWidth)</span><br><span class="line">                        .setMaxLines(mMaxMode == LINES ? mMaximum : Integer.MAX_VALUE);</span><br><span class="line">            &#125;</span><br><span class="line">            mHintLayout = builder.build();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (bringIntoView || (testDirChange &amp;&amp; oldDir != mLayout.getParagraphDirection(<span class="number">0</span>))) &#123;</span><br><span class="line">        registerForPreDraw();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mEllipsize == TextUtils.TruncateAt.MARQUEE) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!compressText(ellipsisWidth)) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> height = mLayoutParams.height;</span><br><span class="line">            <span class="comment">// If the size of the view does not depend on the size of the text, try to</span></span><br><span class="line">            <span class="comment">// start the marquee immediately</span></span><br><span class="line">            <span class="keyword">if</span> (height != LayoutParams.WRAP_CONTENT &amp;&amp; height != LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">                startMarquee();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Defer the start of the marquee until we know our width (see setFrame())</span></span><br><span class="line">                mRestartMarquee = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// CursorControllers need a non-null mLayout</span></span><br><span class="line">    <span class="keyword">if</span> (mEditor != <span class="keyword">null</span>) mEditor.prepareCursorControllers();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="makeSingleLayout"><a href="#makeSingleLayout" class="headerlink" title="makeSingleLayout"></a>makeSingleLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Layout <span class="title">makeSingleLayout</span><span class="params">(<span class="keyword">int</span> wantWidth, BoringLayout.Metrics boring, <span class="keyword">int</span> ellipsisWidth,</span></span></span><br><span class="line"><span class="function"><span class="params">          Layout.Alignment alignment, <span class="keyword">boolean</span> shouldEllipsize, TruncateAt effectiveEllipsize,</span></span></span><br><span class="line"><span class="function"><span class="params">          <span class="keyword">boolean</span> useSaved)</span> </span>&#123;</span><br><span class="line">      Layout result = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (mText <span class="keyword">instanceof</span> Spannable) &#123;</span><br><span class="line">          result = <span class="keyword">new</span> DynamicLayout(mText, mTransformed, mTextPaint, wantWidth,</span><br><span class="line">                  alignment, mTextDir, mSpacingMult, mSpacingAdd, mIncludePad,</span><br><span class="line">                  mBreakStrategy, mHyphenationFrequency,</span><br><span class="line">                  getKeyListener() == <span class="keyword">null</span> ? effectiveEllipsize : <span class="keyword">null</span>, ellipsisWidth);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (boring == UNKNOWN_BORING) &#123;</span><br><span class="line">              boring = BoringLayout.isBoring(mTransformed, mTextPaint, mTextDir, mBoring);</span><br><span class="line">              <span class="keyword">if</span> (boring != <span class="keyword">null</span>) &#123;</span><br><span class="line">                  mBoring = boring;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (boring != <span class="keyword">null</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (boring.width &lt;= wantWidth &amp;&amp;</span><br><span class="line">                      (effectiveEllipsize == <span class="keyword">null</span> || boring.width &lt;= ellipsisWidth)) &#123;</span><br><span class="line">                  <span class="keyword">if</span> (useSaved &amp;&amp; mSavedLayout != <span class="keyword">null</span>) &#123;</span><br><span class="line">                      result = mSavedLayout.replaceOrMake(mTransformed, mTextPaint,</span><br><span class="line">                              wantWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                              boring, mIncludePad);</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                      result = BoringLayout.make(mTransformed, mTextPaint,</span><br><span class="line">                              wantWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                              boring, mIncludePad);</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">if</span> (useSaved) &#123;</span><br><span class="line">                      mSavedLayout = (BoringLayout) result;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shouldEllipsize &amp;&amp; boring.width &lt;= wantWidth) &#123;</span><br><span class="line">                  <span class="keyword">if</span> (useSaved &amp;&amp; mSavedLayout != <span class="keyword">null</span>) &#123;</span><br><span class="line">                      result = mSavedLayout.replaceOrMake(mTransformed, mTextPaint,</span><br><span class="line">                              wantWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                              boring, mIncludePad, effectiveEllipsize,</span><br><span class="line">                              ellipsisWidth);</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                      result = BoringLayout.make(mTransformed, mTextPaint,</span><br><span class="line">                              wantWidth, alignment, mSpacingMult, mSpacingAdd,</span><br><span class="line">                              boring, mIncludePad, effectiveEllipsize,</span><br><span class="line">                              ellipsisWidth);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (result == <span class="keyword">null</span>) &#123;</span><br><span class="line">          StaticLayout.Builder builder = StaticLayout.Builder.obtain(mTransformed,</span><br><span class="line">                  <span class="number">0</span>, mTransformed.length(), mTextPaint, wantWidth)</span><br><span class="line">                  .setAlignment(alignment)</span><br><span class="line">                  .setTextDirection(mTextDir)</span><br><span class="line">                  .setLineSpacing(mSpacingAdd, mSpacingMult)</span><br><span class="line">                  .setIncludePad(mIncludePad)</span><br><span class="line">                  .setBreakStrategy(mBreakStrategy)</span><br><span class="line">                  .setHyphenationFrequency(mHyphenationFrequency);</span><br><span class="line">          <span class="keyword">if</span> (shouldEllipsize) &#123;</span><br><span class="line">              builder.setEllipsize(effectiveEllipsize)</span><br><span class="line">                      .setEllipsizedWidth(ellipsisWidth)</span><br><span class="line">                      .setMaxLines(mMaxMode == LINES ? mMaximum : Integer.MAX_VALUE);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// <span class="doctag">TODO:</span> explore always setting maxLines</span></span><br><span class="line">          result = builder.build();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="关键路径"><a href="#关键路径" class="headerlink" title="关键路径"></a>关键路径</h4><p><img src="/images/TextView_Path.png" alt="TextView_Path"></p><h3 id="如何实现"><a href="#如何实现" class="headerlink" title="如何实现"></a>如何实现</h3><h4 id="行间距和字间距实现"><a href="#行间距和字间距实现" class="headerlink" title="行间距和字间距实现"></a>行间距和字间距实现</h4><ul><li><p>com.android.internal.R.styleable.TextView_lineSpacingMultiplier:</p><p>com.android.internal.R.styleable.TextView_lineSpacingExtra:</p></li><li><p>com.android.internal.R.styleable.TextView_letterSpacing:  api_level 21 5.0</p><p>TextPaint开放接口提供功能实现</p></li></ul><h4 id="如何判断换行"><a href="#如何判断换行" class="headerlink" title="如何判断换行"></a>如何判断换行</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">                 </span><br><span class="line"><span class="function"><span class="keyword">static</span> jint <span class="title">nComputeLineBreaks</span><span class="params">(JNIEnv* env, jclass, jlong nativePtr,</span></span></span><br><span class="line"><span class="function"><span class="params">                               jobject recycle, jintArray recycleBreaks,</span></span></span><br><span class="line"><span class="function"><span class="params">                               jfloatArray recycleWidths, jintArray recycleFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">                               jint recycleLength)</span> </span>&#123;</span><br><span class="line">    LineBreaker* b = <span class="keyword">reinterpret_cast</span>&lt;LineBreaker*&gt;(nativePtr);</span><br><span class="line">    <span class="keyword">size_t</span> nBreaks = b-&gt;computeBreaks();</span><br><span class="line">    recycleCopy(env, recycle, recycleBreaks, recycleWidths, recycleFlags, recycleLength,</span><br><span class="line">            nBreaks, b-&gt;getBreaks(), b-&gt;getWidths(), b-&gt;getFlags());</span><br><span class="line">    b-&gt;finish();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;jint&gt;(nBreaks);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="如何实现文字省略"><a href="#如何实现文字省略" class="headerlink" title="如何实现文字省略"></a>如何实现文字省略</h4><p>setBreakStrategy api_level 23 android 6.0</p><p>values below:  <a href="https://developer.android.com/reference/android/text/Layout.html#BREAK_STRATEGY_SIMPLE" target="_blank" rel="noopener">https://developer.android.com/reference/android/text/Layout.html#BREAK_STRATEGY_SIMPLE</a></p><h4 id="如何实现emoji的统一替换"><a href="#如何实现emoji的统一替换" class="headerlink" title="如何实现emoji的统一替换"></a>如何实现emoji的统一替换</h4><p>在settext之前把text替换成spannabelstring，并且插入imageSpan</p><ul><li>[ ] <a href="//TODO 20170708">imageSpan的继承关系和实现形式</a></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(CharSequence text, BufferType type)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>((<span class="keyword">this</span>.supportEmoji || <span class="keyword">this</span>.supportEmotion) &amp;&amp; text != <span class="keyword">null</span>) &#123;</span><br><span class="line">           SpannableStringBuilder builder;</span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">this</span>.supportEmoji) &#123;</span><br><span class="line">               <span class="keyword">if</span>(!(text <span class="keyword">instanceof</span> SpannableStringBuilder) &amp;&amp; !(text <span class="keyword">instanceof</span> SpannableString)) &#123;</span><br><span class="line">                   text = EmojiUtil.ubb2utf(((CharSequence)text).toString());</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               builder = <span class="keyword">new</span> SpannableStringBuilder((CharSequence)text);</span><br><span class="line">               <span class="keyword">this</span>.replaceCount = APEmojiRender.renderEmojiReturncount(<span class="keyword">this</span>.getContext(), builder, <span class="keyword">this</span>.getEmojiSize());</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               builder = <span class="keyword">new</span> SpannableStringBuilder((CharSequence)text);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">this</span>.supportEmotion &amp;&amp; parseEmotionListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">this</span>.hasEmotion = parseEmotionListener.parser(<span class="keyword">this</span>.getContext(), builder, (CharSequence)text, <span class="keyword">this</span>.getEmojiSize());</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span>((<span class="keyword">this</span>.replaceCount &gt; <span class="number">0</span> || <span class="keyword">this</span>.hasEmotion) &amp;&amp; <span class="keyword">this</span>.getEllipsize() != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">int</span> singleLine = <span class="keyword">this</span>.isSingleLine();</span><br><span class="line">               <span class="keyword">if</span>(singleLine == <span class="number">1</span>) &#123;</span><br><span class="line">                   <span class="keyword">this</span>.singeLineRender(builder, type);</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="keyword">super</span>.setText(builder, type);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">super</span>.setText(builder, type);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">this</span>.onTextChangeListener != <span class="keyword">null</span> &amp;&amp; text != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">this</span>.onTextChangeListener.onTextViewTextChange(<span class="keyword">this</span>, builder.toString());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">super</span>.setText((CharSequence)text, type);</span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">this</span>.onTextChangeListener != <span class="keyword">null</span> &amp;&amp; text != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="keyword">this</span>.onTextChangeListener.onTextViewTextChange(<span class="keyword">this</span>, ((CharSequence)text).toString());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/TextView_Emoji.png" alt="TextView_Emoji"></p><h2 id="onLayout"><a href="#onLayout" class="headerlink" title="onLayout"></a>onLayout</h2><h3 id="调用流程-1"><a href="#调用流程-1" class="headerlink" title="调用流程"></a>调用流程</h3><h3 id="背景知识-1"><a href="#背景知识-1" class="headerlink" title="背景知识"></a>背景知识</h3><h3 id="关于源码-1"><a href="#关于源码-1" class="headerlink" title="关于源码"></a>关于源码</h3><h4 id="onLayout-1"><a href="#onLayout-1" class="headerlink" title="onLayout"></a>onLayout</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onLayout(changed, left, top, right, bottom);</span><br><span class="line">    <span class="keyword">if</span> (mDeferScroll &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> curs = mDeferScroll;</span><br><span class="line">        mDeferScroll = -<span class="number">1</span>;</span><br><span class="line">        bringPointIntoView(Math.min(curs, mText.length()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何实现-1"><a href="#如何实现-1" class="headerlink" title="如何实现"></a>如何实现</h3><p>onLayout的事情主要还是交给 BoringLayout,DynamicLayout和StaticLayout</p><ul><li>[ ] <a href="//TODO 20170708">重点分析这三类Layout</a> </li></ul><h2 id="onDraw"><a href="#onDraw" class="headerlink" title="onDraw"></a>onDraw</h2><h3 id="调用流程-2"><a href="#调用流程-2" class="headerlink" title="调用流程"></a>调用流程</h3><p><img src="/Users/jinsan/Downloads/onDraw时序图.png" alt="onDraw时序图"></p><h3 id="背景知识-2"><a href="#背景知识-2" class="headerlink" title="背景知识"></a>背景知识</h3><h4 id="View的draw做了些什么"><a href="#View的draw做了些什么" class="headerlink" title="View的draw做了些什么"></a>View的draw做了些什么</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Draw traversal performs several drawing steps which must be executed</span><br><span class="line"> * in the appropriate order:</span><br><span class="line"> *</span><br><span class="line"> *      1. Draw the background//画背景色</span><br><span class="line"> *      2. If necessary, save the canvas&apos; layers to prepare for fading//保存渐变图层</span><br><span class="line"> *      3. Draw view&apos;s content//画内容 onDraw，所有的view子类都是通过它提供不同的视觉效果的</span><br><span class="line"> *      4. Draw children//到viewgroup那里去绕一圈，在通过child.draw回来</span><br><span class="line"> *      5. If necessary, draw the fading edges and restore layers//画渐变色图层,在开发中实际用的不多</span><br><span class="line"> *      6. Draw decorations (scrollbars for instance)//画一些装饰门面,比如滚动条</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><h4 id="onDraw-1"><a href="#onDraw-1" class="headerlink" title="onDraw()"></a>onDraw()</h4><ul><li>[ ] <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        restartMarqueeIfNeeded();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Draw the background for this view</span></span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> compoundPaddingLeft = getCompoundPaddingLeft();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> compoundPaddingTop = getCompoundPaddingTop();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> compoundPaddingRight = getCompoundPaddingRight();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> compoundPaddingBottom = getCompoundPaddingBottom();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> scrollX = mScrollX;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> scrollY = mScrollY;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> right = mRight;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> left = mLeft;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> bottom = mBottom;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> top = mTop;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> isLayoutRtl = isLayoutRtl();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> offset = getHorizontalOffsetForDrawables();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> leftOffset = isLayoutRtl ? <span class="number">0</span> : offset;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> rightOffset = isLayoutRtl ? offset : <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//----------step1 ---------drawableLeft....------------------------------</span></span><br><span class="line">        <span class="keyword">final</span> Drawables dr = mDrawables;</span><br><span class="line">        <span class="keyword">if</span> (dr != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * Compound, not extended, because the icon is not clipped</span></span><br><span class="line"><span class="comment">             * if the text height is smaller.</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> vspace = bottom - top - compoundPaddingBottom - compoundPaddingTop;</span><br><span class="line">            <span class="keyword">int</span> hspace = right - left - compoundPaddingRight - compoundPaddingLeft;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// IMPORTANT: The coordinates computed are also used in invalidateDrawable()</span></span><br><span class="line">            <span class="comment">// Make sure to update invalidateDrawable() when changing this code.</span></span><br><span class="line">          <span class="comment">//理解下面的代码，可以知道drawableLeft或者其他，比如2行会怎么显示，比如有自带滚动条会怎么显示</span></span><br><span class="line">            <span class="keyword">if</span> (dr.mShowing[Drawables.LEFT] != <span class="keyword">null</span>) &#123;</span><br><span class="line">                canvas.save();</span><br><span class="line">              <span class="comment">//最左边的中点开始画leftDrawable,paddingLef和scrollX在drawable的左边</span></span><br><span class="line">              <span class="comment">//翻阅资料 scrollX是滚动的偏移量(起点－终点坐标),+scrollX保证了图片不会随着跑马灯滚动</span></span><br><span class="line">                canvas.translate(scrollX + mPaddingLeft + leftOffset,</span><br><span class="line">                                 scrollY + compoundPaddingTop +</span><br><span class="line">                                 (vspace - dr.mDrawableHeightLeft) / <span class="number">2</span>);</span><br><span class="line">                dr.mShowing[Drawables.LEFT].draw(canvas);</span><br><span class="line">                canvas.restore();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// IMPORTANT: The coordinates computed are also used in invalidateDrawable()</span></span><br><span class="line">            <span class="comment">// Make sure to update invalidateDrawable() when changing this code.</span></span><br><span class="line">            <span class="keyword">if</span> (dr.mShowing[Drawables.RIGHT] != <span class="keyword">null</span>) &#123;</span><br><span class="line">                canvas.save();</span><br><span class="line">              <span class="comment">//减的意思就是这个值在它的右边其作用，加代表这个值在他左边起作用</span></span><br><span class="line">                canvas.translate(scrollX + right - left - mPaddingRight</span><br><span class="line">                        - dr.mDrawableSizeRight - rightOffset,</span><br><span class="line">                         scrollY + compoundPaddingTop + (vspace - dr.mDrawableHeightRight) / <span class="number">2</span>);</span><br><span class="line">                dr.mShowing[Drawables.RIGHT].draw(canvas);</span><br><span class="line">                canvas.restore();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// IMPORTANT: The coordinates computed are also used in invalidateDrawable()</span></span><br><span class="line">            <span class="comment">// Make sure to update invalidateDrawable() when changing this code.</span></span><br><span class="line">            <span class="keyword">if</span> (dr.mShowing[Drawables.TOP] != <span class="keyword">null</span>) &#123;</span><br><span class="line">                canvas.save();</span><br><span class="line">              <span class="comment">//最上面的中点开始画drawableTop,scrollX和paddingLeft始终在其左边</span></span><br><span class="line">                canvas.translate(scrollX + compoundPaddingLeft +</span><br><span class="line">                        (hspace - dr.mDrawableWidthTop) / <span class="number">2</span>, scrollY + mPaddingTop);</span><br><span class="line">                dr.mShowing[Drawables.TOP].draw(canvas);</span><br><span class="line">                canvas.restore();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// IMPORTANT: The coordinates computed are also used in invalidateDrawable()</span></span><br><span class="line">            <span class="comment">// Make sure to update invalidateDrawable() when changing this code.</span></span><br><span class="line">          <span class="comment">//x = scrollx+compaddingLeft+(hspace-drawableWidth)/2  -------bingo</span></span><br><span class="line">          <span class="comment">//y =  scrollY+(bottom-top-compaddingButton-drawableHeight) -------bingo</span></span><br><span class="line">             <span class="keyword">if</span> (dr.mShowing[Drawables.BOTTOM] != <span class="keyword">null</span>) &#123;</span><br><span class="line">                canvas.save();</span><br><span class="line">                canvas.translate(scrollX + compoundPaddingLeft +</span><br><span class="line">                        (hspace - dr.mDrawableWidthBottom) / <span class="number">2</span>,</span><br><span class="line">                         scrollY + bottom - top - mPaddingBottom - dr.mDrawableSizeBottom);</span><br><span class="line">                dr.mShowing[Drawables.BOTTOM].draw(canvas);</span><br><span class="line">                canvas.restore();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> color = mCurTextColor;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mLayout == <span class="keyword">null</span>) &#123;</span><br><span class="line">            assumeLayout();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Layout layout = mLayout;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mHint != <span class="keyword">null</span> &amp;&amp; mText.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mHintTextColor != <span class="keyword">null</span>) &#123;</span><br><span class="line">                color = mCurHintTextColor;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            layout = mHintLayout;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mTextPaint.setColor(color);</span><br><span class="line">        mTextPaint.drawableState = getDrawableState();</span><br><span class="line"><span class="comment">//-------------step 2 ---------------文字阴影----------------------</span></span><br><span class="line">        canvas.save();</span><br><span class="line">        <span class="comment">/*  Would be faster if we didn't have to do this. Can we chop the</span></span><br><span class="line"><span class="comment">            (displayable) text so that we don't need to do this ever?</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> extendedPaddingTop = getExtendedPaddingTop();</span><br><span class="line">        <span class="keyword">int</span> extendedPaddingBottom = getExtendedPaddingBottom();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> vspace = mBottom - mTop - compoundPaddingBottom - compoundPaddingTop;</span><br><span class="line">        <span class="comment">//TODO why getHeight() equals getLineTop(getLineCount)?//api注释应该在layout基类里实现了</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> maxScrollY = mLayout.getHeight() - vspace;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">float</span> clipLeft = compoundPaddingLeft + scrollX;</span><br><span class="line">        <span class="keyword">float</span> clipTop = (scrollY == <span class="number">0</span>) ? <span class="number">0</span> : extendedPaddingTop + scrollY;</span><br><span class="line">        <span class="keyword">float</span> clipRight = right - left - getFudgedPaddingRight() + scrollX;</span><br><span class="line">        <span class="keyword">float</span> clipBottom = bottom - top + scrollY -</span><br><span class="line">                ((scrollY == maxScrollY) ? <span class="number">0</span> : extendedPaddingBottom);</span><br><span class="line">        <span class="comment">//TODO how to make mShadowRadius successfully</span></span><br><span class="line">      <span class="comment">//这里只是切范围，阴影应该在textPaint里面处理的</span></span><br><span class="line">        <span class="keyword">if</span> (mShadowRadius != <span class="number">0</span>) &#123;</span><br><span class="line">            clipLeft += Math.min(<span class="number">0</span>, mShadowDx - mShadowRadius);</span><br><span class="line">            clipRight += Math.max(<span class="number">0</span>, mShadowDx + mShadowRadius);</span><br><span class="line"></span><br><span class="line">            clipTop += Math.min(<span class="number">0</span>, mShadowDy - mShadowRadius);</span><br><span class="line">            clipBottom += Math.max(<span class="number">0</span>, mShadowDy + mShadowRadius);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        canvas.clipRect(clipLeft, clipTop, clipRight, clipBottom);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> voffsetText = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> voffsetCursor = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// translate in by our padding</span></span><br><span class="line">        <span class="comment">/* shortcircuit calling getVerticaOffset() */</span></span><br><span class="line">        <span class="keyword">if</span> ((mGravity &amp; Gravity.VERTICAL_GRAVITY_MASK) != Gravity.TOP) &#123;</span><br><span class="line">            voffsetText = getVerticalOffset(<span class="keyword">false</span>);</span><br><span class="line">            voffsetCursor = getVerticalOffset(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        canvas.translate(compoundPaddingLeft, extendedPaddingTop + voffsetText);</span><br><span class="line"><span class="comment">//－－－－－－－－－step 3 －－－－－－－－－－初始化跑马灯的初始化状态</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> layoutDirection = getLayoutDirection();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> absoluteGravity = Gravity.getAbsoluteGravity(mGravity, layoutDirection);</span><br><span class="line">        <span class="keyword">if</span> (mEllipsize == TextUtils.TruncateAt.MARQUEE &amp;&amp;</span><br><span class="line">                mMarqueeFadeMode != MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!mSingleLine &amp;&amp; getLineCount() == <span class="number">1</span> &amp;&amp; canMarquee() &amp;&amp;</span><br><span class="line">                    (absoluteGravity &amp; Gravity.HORIZONTAL_GRAVITY_MASK) != Gravity.LEFT) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> width = mRight - mLeft;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> padding = getCompoundPaddingLeft() + getCompoundPaddingRight();</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">float</span> dx = mLayout.getLineRight(<span class="number">0</span>) - (width - padding);</span><br><span class="line">                canvas.translate(layout.getParagraphDirection(<span class="number">0</span>) * dx, <span class="number">0.0f</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mMarquee != <span class="keyword">null</span> &amp;&amp; mMarquee.isRunning()) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">float</span> dx = -mMarquee.getScroll();</span><br><span class="line">                canvas.translate(layout.getParagraphDirection(<span class="number">0</span>) * dx, <span class="number">0.0f</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> cursorOffsetVertical = voffsetCursor - voffsetText;</span><br><span class="line"><span class="comment">//-----------step 4 ------------------------画文字----------------------</span></span><br><span class="line">        Path highlight = getUpdatedHighlightPath();</span><br><span class="line">        <span class="keyword">if</span> (mEditor != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mEditor.onDraw(canvas, layout, highlight, mHighlightPaint, cursorOffsetVertical);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            layout.draw(canvas, highlight, mHighlightPaint, cursorOffsetVertical);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//-------------step 5 -----------------开始跑马灯的效果－－－－－－－－</span></span><br><span class="line">        <span class="keyword">if</span> (mMarquee != <span class="keyword">null</span> &amp;&amp; mMarquee.shouldDrawGhost()) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> dx = mMarquee.getGhostOffset();</span><br><span class="line">            canvas.translate(layout.getParagraphDirection(<span class="number">0</span>) * dx, <span class="number">0.0f</span>);</span><br><span class="line">            layout.draw(canvas, highlight, mHighlightPaint, cursorOffsetVertical);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        canvas.restore();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="Layout-draw"><a href="#Layout-draw" class="headerlink" title="Layout:draw"></a>Layout:draw</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Draw this Layout on the specified canvas, with the highlight path drawn</span></span><br><span class="line"><span class="comment">  * between the background and the text.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> canvas the canvas</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> highlight the path of the highlight or cursor; can be null</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> highlightPaint the paint for the highlight</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> cursorOffsetVertical the amount to temporarily translate the</span></span><br><span class="line"><span class="comment">  *        canvas while rendering the highlight</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas canvas, Path highlight, Paint highlightPaint,</span></span></span><br><span class="line"><span class="function"><span class="params">         <span class="keyword">int</span> cursorOffsetVertical)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//根据getClipBounds获取了top和bottom,然后组成了一个long值</span></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">long</span> lineRange = getLineRangeForDraw(canvas);</span><br><span class="line">     <span class="keyword">int</span> firstLine = TextUtils.unpackRangeStartFromLong(lineRange);</span><br><span class="line">     <span class="keyword">int</span> lastLine = TextUtils.unpackRangeEndFromLong(lineRange);</span><br><span class="line">     <span class="keyword">if</span> (lastLine &lt; <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//highLight或者是linebackgroudSpan </span></span><br><span class="line">   drawBackground(canvas, highlight, highlightPaint, cursorOffsetVertical,</span><br><span class="line">             firstLine, lastLine);</span><br><span class="line">   </span><br><span class="line">   drawText(canvas, firstLine, lastLine);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="Layout-drawText"><a href="#Layout-drawText" class="headerlink" title="Layout:drawText"></a>Layout:drawText</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawText</span><span class="params">(Canvas canvas, <span class="keyword">int</span> firstLine, <span class="keyword">int</span> lastLine)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> previousLineBottom = getLineTop(firstLine);</span><br><span class="line">    <span class="keyword">int</span> previousLineEnd = getLineStart(firstLine);</span><br><span class="line">    ParagraphStyle[] spans = NO_PARA_SPANS;</span><br><span class="line">    <span class="keyword">int</span> spanEnd = <span class="number">0</span>;</span><br><span class="line">    TextPaint paint = mPaint;</span><br><span class="line">    CharSequence buf = mText;</span><br><span class="line"></span><br><span class="line">    Alignment paraAlign = mAlignment;</span><br><span class="line">    TabStops tabStops = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">boolean</span> tabStopsIsInitialized = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    TextLine tl = TextLine.obtain();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Draw the lines, one at a time.</span></span><br><span class="line">    <span class="comment">// The baseline is the top of the following line minus the current line's descent.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> lineNum = firstLine; lineNum &lt;= lastLine; lineNum++) &#123;</span><br><span class="line">        <span class="keyword">int</span> start = previousLineEnd;</span><br><span class="line">        previousLineEnd = getLineStart(lineNum + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> end = getLineVisibleEnd(lineNum, start, previousLineEnd);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ltop = previousLineBottom;</span><br><span class="line">        <span class="keyword">int</span> lbottom = getLineTop(lineNum + <span class="number">1</span>);</span><br><span class="line">        previousLineBottom = lbottom;</span><br><span class="line">        <span class="keyword">int</span> lbaseline = lbottom - getLineDescent(lineNum);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> dir = getParagraphDirection(lineNum);</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> right = mWidth;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mSpannedText) &#123;</span><br><span class="line">            Spanned sp = (Spanned) buf;</span><br><span class="line">            <span class="keyword">int</span> textLength = buf.length();</span><br><span class="line">            <span class="keyword">boolean</span> isFirstParaLine = (start == <span class="number">0</span> || buf.charAt(start - <span class="number">1</span>) == <span class="string">'\n'</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// New batch of paragraph styles, collect into spans array.</span></span><br><span class="line">            <span class="comment">// Compute the alignment, last alignment style wins.</span></span><br><span class="line">            <span class="comment">// Reset tabStops, we'll rebuild if we encounter a line with</span></span><br><span class="line">            <span class="comment">// tabs.</span></span><br><span class="line">            <span class="comment">// We expect paragraph spans to be relatively infrequent, use</span></span><br><span class="line">            <span class="comment">// spanEnd so that we can check less frequently.  Since</span></span><br><span class="line">            <span class="comment">// paragraph styles ought to apply to entire paragraphs, we can</span></span><br><span class="line">            <span class="comment">// just collect the ones present at the start of the paragraph.</span></span><br><span class="line">            <span class="comment">// If spanEnd is before the end of the paragraph, that's not</span></span><br><span class="line">            <span class="comment">// our problem.</span></span><br><span class="line">            <span class="keyword">if</span> (start &gt;= spanEnd &amp;&amp; (lineNum == firstLine || isFirstParaLine)) &#123;</span><br><span class="line">                spanEnd = sp.nextSpanTransition(start, textLength,</span><br><span class="line">                                                ParagraphStyle.class);</span><br><span class="line">                spans = getParagraphSpans(sp, start, spanEnd, ParagraphStyle.class);</span><br><span class="line"></span><br><span class="line">                paraAlign = mAlignment;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> n = spans.length - <span class="number">1</span>; n &gt;= <span class="number">0</span>; n--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (spans[n] <span class="keyword">instanceof</span> AlignmentSpan) &#123;</span><br><span class="line">                        paraAlign = ((AlignmentSpan) spans[n]).getAlignment();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                tabStopsIsInitialized = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Draw all leading margin spans.  Adjust left or right according</span></span><br><span class="line">            <span class="comment">// to the paragraph direction of the line.</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> length = spans.length;</span><br><span class="line">            <span class="keyword">boolean</span> useFirstLineMargin = isFirstParaLine;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; length; n++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (spans[n] <span class="keyword">instanceof</span> LeadingMarginSpan2) &#123;</span><br><span class="line">                    <span class="keyword">int</span> count = ((LeadingMarginSpan2) spans[n]).getLeadingMarginLineCount();</span><br><span class="line">                    <span class="keyword">int</span> startLine = getLineForOffset(sp.getSpanStart(spans[n]));</span><br><span class="line">                    <span class="comment">// if there is more than one LeadingMarginSpan2, use</span></span><br><span class="line">                    <span class="comment">// the count that is greatest</span></span><br><span class="line">                    <span class="keyword">if</span> (lineNum &lt; startLine + count) &#123;</span><br><span class="line">                        useFirstLineMargin = <span class="keyword">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; length; n++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (spans[n] <span class="keyword">instanceof</span> LeadingMarginSpan) &#123;</span><br><span class="line">                    LeadingMarginSpan margin = (LeadingMarginSpan) spans[n];</span><br><span class="line">                    <span class="keyword">if</span> (dir == DIR_RIGHT_TO_LEFT) &#123;</span><br><span class="line">                        margin.drawLeadingMargin(canvas, paint, right, dir, ltop,</span><br><span class="line">                                                 lbaseline, lbottom, buf,</span><br><span class="line">                                                 start, end, isFirstParaLine, <span class="keyword">this</span>);</span><br><span class="line">                        right -= margin.getLeadingMargin(useFirstLineMargin);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        margin.drawLeadingMargin(canvas, paint, left, dir, ltop,</span><br><span class="line">                                                 lbaseline, lbottom, buf,</span><br><span class="line">                                                 start, end, isFirstParaLine, <span class="keyword">this</span>);</span><br><span class="line">                        left += margin.getLeadingMargin(useFirstLineMargin);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> hasTabOrEmoji = getLineContainsTab(lineNum);</span><br><span class="line">        <span class="comment">// Can't tell if we have tabs for sure, currently</span></span><br><span class="line">        <span class="keyword">if</span> (hasTabOrEmoji &amp;&amp; !tabStopsIsInitialized) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tabStops == <span class="keyword">null</span>) &#123;</span><br><span class="line">                tabStops = <span class="keyword">new</span> TabStops(TAB_INCREMENT, spans);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                tabStops.reset(TAB_INCREMENT, spans);</span><br><span class="line">            &#125;</span><br><span class="line">            tabStopsIsInitialized = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Determine whether the line aligns to normal, opposite, or center.</span></span><br><span class="line">        Alignment align = paraAlign;</span><br><span class="line">        <span class="keyword">if</span> (align == Alignment.ALIGN_LEFT) &#123;</span><br><span class="line">            align = (dir == DIR_LEFT_TO_RIGHT) ?</span><br><span class="line">                Alignment.ALIGN_NORMAL : Alignment.ALIGN_OPPOSITE;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (align == Alignment.ALIGN_RIGHT) &#123;</span><br><span class="line">            align = (dir == DIR_LEFT_TO_RIGHT) ?</span><br><span class="line">                Alignment.ALIGN_OPPOSITE : Alignment.ALIGN_NORMAL;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">if</span> (align == Alignment.ALIGN_NORMAL) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dir == DIR_LEFT_TO_RIGHT) &#123;</span><br><span class="line">                x = left + getIndentAdjust(lineNum, Alignment.ALIGN_LEFT);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                x = right + getIndentAdjust(lineNum, Alignment.ALIGN_RIGHT);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> max = (<span class="keyword">int</span>)getLineExtent(lineNum, tabStops, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (align == Alignment.ALIGN_OPPOSITE) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dir == DIR_LEFT_TO_RIGHT) &#123;</span><br><span class="line">                    x = right - max + getIndentAdjust(lineNum, Alignment.ALIGN_RIGHT);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    x = left - max + getIndentAdjust(lineNum, Alignment.ALIGN_LEFT);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// Alignment.ALIGN_CENTER</span></span><br><span class="line">                max = max &amp; ~<span class="number">1</span>;</span><br><span class="line">                x = ((right + left - max) &gt;&gt; <span class="number">1</span>) +</span><br><span class="line">                        getIndentAdjust(lineNum, Alignment.ALIGN_CENTER);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        paint.setHyphenEdit(getHyphen(lineNum));</span><br><span class="line">        Directions directions = getLineDirections(lineNum);</span><br><span class="line">        <span class="keyword">if</span> (directions == DIRS_ALL_LEFT_TO_RIGHT &amp;&amp; !mSpannedText &amp;&amp; !hasTabOrEmoji) &#123;</span><br><span class="line">          <span class="comment">//普通的</span></span><br><span class="line">            <span class="comment">// <span class="doctag">XXX:</span> assumes there's nothing additional to be done</span></span><br><span class="line">            canvas.drawText(buf, start, end, x, lbaseline, paint);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//emoji或者span的</span></span><br><span class="line">            tl.set(paint, buf, start, end, dir, directions, hasTabOrEmoji, tabStops);</span><br><span class="line">            tl.draw(canvas, x, ltop, lbaseline, lbottom);</span><br><span class="line">        &#125;</span><br><span class="line">        paint.setHyphenEdit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    TextLine.recycle(tl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Layout-elipsize-StaticLayout-getEllipsisCount-StaticLayout-getEllipsisStart"><a href="#Layout-elipsize-StaticLayout-getEllipsisCount-StaticLayout-getEllipsisStart" class="headerlink" title="Layout:elipsize+StaticLayout: getEllipsisCount+StaticLayout:getEllipsisStart"></a>Layout:elipsize+StaticLayout: getEllipsisCount+StaticLayout:getEllipsisStart</h4><h5 id="省略是怎么配合发生的"><a href="#省略是怎么配合发生的" class="headerlink" title="省略是怎么配合发生的"></a>省略是怎么配合发生的</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ellipsize</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> end, <span class="keyword">int</span> line,</span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="keyword">char</span>[] dest, <span class="keyword">int</span> destoff, TextUtils.TruncateAt method)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ellipsisCount = getEllipsisCount(line);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ellipsisCount == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ellipsisStart = getEllipsisStart(line);</span><br><span class="line">        <span class="keyword">int</span> linestart = getLineStart(line);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ellipsisStart; i &lt; ellipsisStart + ellipsisCount; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i == ellipsisStart) &#123;</span><br><span class="line">                c = getEllipsisChar(method); <span class="comment">// ellipsis</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                c = <span class="string">'\uFEFF'</span>; <span class="comment">// 0-width space</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> a = i + linestart;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (a &gt;= start &amp;&amp; a &lt; end) &#123;</span><br><span class="line">                dest[destoff + a - start] = c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">---------------------------</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the offset of the first character to be ellipsized away,</span></span><br><span class="line"><span class="comment">     * relative to the start of the line.  (So 0 if the beginning of the</span></span><br><span class="line"><span class="comment">     * line is ellipsized, not getLineStart().)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">getEllipsisStart</span><span class="params">(<span class="keyword">int</span> line)</span></span>;</span><br><span class="line">------------------------</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns the number of characters to be ellipsized away, or 0 if</span></span><br><span class="line"><span class="comment">     * no ellipsis is to take place.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">getEllipsisCount</span><span class="params">(<span class="keyword">int</span> line)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="TextLine-draw"><a href="#TextLine-draw" class="headerlink" title="TextLine:draw"></a>TextLine:draw</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Renders the TextLine.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> c the canvas to render on</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> x the leading margin position</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> top the top of the line</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> y the baseline</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bottom the bottom of the line</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">(Canvas c, <span class="keyword">float</span> x, <span class="keyword">int</span> top, <span class="keyword">int</span> y, <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!mHasTabs) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mDirections == Layout.DIRS_ALL_LEFT_TO_RIGHT) &#123;</span><br><span class="line">            drawRun(c, <span class="number">0</span>, mLen, <span class="keyword">false</span>, x, top, y, bottom, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mDirections == Layout.DIRS_ALL_RIGHT_TO_LEFT) &#123;</span><br><span class="line">            drawRun(c, <span class="number">0</span>, mLen, <span class="keyword">true</span>, x, top, y, bottom, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> h = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span>[] runs = mDirections.mDirections;</span><br><span class="line">    RectF emojiRect = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> lastRunIndex = runs.length - <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; runs.length; i += <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> runStart = runs[i];</span><br><span class="line">        <span class="keyword">int</span> runLimit = runStart + (runs[i+<span class="number">1</span>] &amp; Layout.RUN_LENGTH_MASK);</span><br><span class="line">        <span class="keyword">if</span> (runLimit &gt; mLen) &#123;</span><br><span class="line">            runLimit = mLen;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> runIsRtl = (runs[i+<span class="number">1</span>] &amp; Layout.RUN_RTL_FLAG) != <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> segstart = runStart;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = mHasTabs ? runStart : runLimit; j &lt;= runLimit; j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> codept = <span class="number">0</span>;</span><br><span class="line">            Bitmap bm = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mHasTabs &amp;&amp; j &lt; runLimit) &#123;</span><br><span class="line">              <span class="comment">//根据emojicode找到对应的bitmap,然后画上去</span></span><br><span class="line">                codept = mChars[j];</span><br><span class="line">                <span class="keyword">if</span> (codept &gt;= <span class="number">0xd800</span> &amp;&amp; codept &lt; <span class="number">0xdc00</span> &amp;&amp; j + <span class="number">1</span> &lt; runLimit) &#123;</span><br><span class="line">                    codept = Character.codePointAt(mChars, j);</span><br><span class="line">                    <span class="keyword">if</span> (codept &gt;= Layout.MIN_EMOJI &amp;&amp; codept &lt;= Layout.MAX_EMOJI) &#123;</span><br><span class="line">                        bm = Layout.EMOJI_FACTORY.getBitmapFromAndroidPua(codept);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (codept &gt; <span class="number">0xffff</span>) &#123;</span><br><span class="line">                        ++j;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (j == runLimit || codept == <span class="string">'\t'</span> || bm != <span class="keyword">null</span>) &#123;</span><br><span class="line">                h += drawRun(c, segstart, j, runIsRtl, x+h, top, y, bottom,</span><br><span class="line">                        i != lastRunIndex || j != mLen);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (codept == <span class="string">'\t'</span>) &#123;</span><br><span class="line">                    h = mDir * nextTab(h * mDir);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bm != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">float</span> bmAscent = ascent(j);</span><br><span class="line">                    <span class="keyword">float</span> bitmapHeight = bm.getHeight();</span><br><span class="line">                    <span class="keyword">float</span> scale = -bmAscent / bitmapHeight;</span><br><span class="line">                    <span class="keyword">float</span> width = bm.getWidth() * scale;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (emojiRect == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        emojiRect = <span class="keyword">new</span> RectF();</span><br><span class="line">                    &#125;</span><br><span class="line">                    emojiRect.set(x + h, y + bmAscent,</span><br><span class="line">                            x + h + width, y);</span><br><span class="line">                    c.drawBitmap(bm, <span class="keyword">null</span>, emojiRect, mPaint);</span><br><span class="line">                    h += width;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">                segstart = j + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何实现-2"><a href="#如何实现-2" class="headerlink" title="如何实现"></a>如何实现</h3><h4 id="跑马灯"><a href="#跑马灯" class="headerlink" title="跑马灯"></a>跑马灯</h4><h5 id="效果实现"><a href="#效果实现" class="headerlink" title="效果实现"></a>效果实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// If the size of the view does not depend on the size of the text, try to</span></span><br><span class="line">   <span class="comment">// start the marquee immediately</span></span><br><span class="line">   <span class="comment">// else Defer the start of the marquee until we know our width (see setFrame())</span></span><br><span class="line">     restartMarqueeIfNeeded();</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Draw the background for this view</span></span><br><span class="line">     <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">     <span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> layoutDirection = getLayoutDirection();</span><br><span class="line">     <span class="keyword">final</span> <span class="keyword">int</span> absoluteGravity = Gravity.getAbsoluteGravity(mGravity, layoutDirection);</span><br><span class="line">     <span class="keyword">if</span> (mEllipsize == TextUtils.TruncateAt.MARQUEE &amp;&amp;</span><br><span class="line">             mMarqueeFadeMode != MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS) &#123;</span><br><span class="line">         <span class="keyword">if</span> (!mSingleLine &amp;&amp; getLineCount() == <span class="number">1</span> &amp;&amp; canMarquee() &amp;&amp;</span><br><span class="line">                 (absoluteGravity &amp; Gravity.HORIZONTAL_GRAVITY_MASK) != Gravity.LEFT) &#123;</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> width = mRight - mLeft;</span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">int</span> padding = getCompoundPaddingLeft() + getCompoundPaddingRight();</span><br><span class="line">           <span class="comment">//getLineRight(0)</span></span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">float</span> dx = mLayout.getLineRight(<span class="number">0</span>) - (width - padding);</span><br><span class="line">             canvas.translate(layout.getParagraphDirection(<span class="number">0</span>) * dx, <span class="number">0.0f</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (mMarquee != <span class="keyword">null</span> &amp;&amp; mMarquee.isRunning()) &#123;</span><br><span class="line">           <span class="comment">//跑马灯位置更新的点</span></span><br><span class="line">             <span class="keyword">final</span> <span class="keyword">float</span> dx = -mMarquee.getScroll();</span><br><span class="line">             <span class="comment">//跑马灯</span></span><br><span class="line">             canvas.translate(layout.getParagraphDirection(<span class="number">0</span>) * dx, <span class="number">0.0f</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="数值更新"><a href="#数值更新" class="headerlink" title="数值更新"></a>数值更新</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Marquee</span> </span>&#123;</span><br><span class="line">   <span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">private</span> Choreographer.FrameCallback mTickCallback = <span class="keyword">new</span> Choreographer.FrameCallback() &#123;</span><br><span class="line">         <span class="meta">@Override</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFrame</span><span class="params">(<span class="keyword">long</span> frameTimeNanos)</span> </span>&#123;</span><br><span class="line">             tick();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span></span><br><span class="line">      <span class="comment">//滴答</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">tick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (mStatus != MARQUEE_RUNNING) &#123;</span><br><span class="line">             <span class="keyword">return</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         mChoreographer.removeFrameCallback(mTickCallback);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">final</span> TextView textView = mView.get();</span><br><span class="line">         <span class="keyword">if</span> (textView != <span class="keyword">null</span> &amp;&amp; (textView.isFocused() || textView.isSelected())) &#123;</span><br><span class="line">             <span class="keyword">long</span> currentMs = mChoreographer.getFrameTime();</span><br><span class="line">             <span class="keyword">long</span> deltaMs = currentMs - mLastAnimationMs;</span><br><span class="line">             mLastAnimationMs = currentMs;</span><br><span class="line">             <span class="keyword">float</span> deltaPx = deltaMs / <span class="number">1000f</span> * mPixelsPerSecond;</span><br><span class="line">            <span class="comment">//根据deltaMs计算出deltaPx的值,然后更新mScroll的值</span></span><br><span class="line">             mScroll += deltaPx;</span><br><span class="line">             <span class="keyword">if</span> (mScroll &gt; mMaxScroll) &#123;</span><br><span class="line">                 mScroll = mMaxScroll;</span><br><span class="line">                 mChoreographer.postFrameCallbackDelayed(mRestartCallback, MARQUEE_DELAY);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 mChoreographer.postFrameCallback(mTickCallback);</span><br><span class="line">             &#125;</span><br><span class="line">             textView.invalidate();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span><span class="string">''</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="文字缓存"><a href="#文字缓存" class="headerlink" title="文字缓存"></a>文字缓存</h3><p><a href="https://github.com/facebookincubator/TextLayoutBuilder[Todo" target="_blank" rel="noopener">https://github.com/facebookincubator/TextLayoutBuilder[Todo</a> 0812]</p><h3 id="Layout的方法论"><a href="#Layout的方法论" class="headerlink" title="Layout的方法论"></a>Layout的方法论</h3><p><img src="/images/TextView_Method.png" alt="TextView_Method"></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>缺少两张图 (onMeasure 时序图, onDraw  时序图）</p><ul><li>[ ] <a href="//TODO 20170708">imageSpan的继承关系和实现形式</a></li><li>[ ] <a href="//TODO 20170708">重点分析这三类Layout</a> </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;OverView&quot;&gt;&lt;a href=&quot;#OverView&quot; class=&quot;headerlink&quot; title=&quot;OverView&quot;&gt;&lt;/a&gt;OverView&lt;/h2&gt;&lt;p&gt;继承关系&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/TextView_OverVie
      
    
    </summary>
    
      <category term="读别人的源码，涨自己的智慧" scheme="http://jinjian.info/categories/%E8%AF%BB%E5%88%AB%E4%BA%BA%E7%9A%84%E6%BA%90%E7%A0%81%EF%BC%8C%E6%B6%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    
    
      <category term="RTFSC (Read the fucking source code )" scheme="http://jinjian.info/tags/RTFSC-Read-the-fucking-source-code/"/>
    
  </entry>
  
</feed>
